{"version":3,"file":"static/js/137.ff74e9b7.chunk.js","mappings":"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","sources":["../../core/src/app/titleOfIO.ts","../../core/src/asset-graph/layout.ts","../../core/src/assets/AssetValueGraph.tsx","../../core/src/dagstertype/DagsterType.tsx","../../core/src/graph/OpIOBox.tsx","../../core/src/graph/OpNode.tsx","../../core/src/graph/optag-images/airbyte.svg","../../core/src/graph/optag-images/dbt.svg","../../core/src/graph/optag-images/duckdb.svg","../../core/src/graph/optag-images/fivetran.svg","../../core/src/graph/optag-images/googlesheets.svg","../../core/src/graph/optag-images/jupyter.svg","../../core/src/graph/optag-images/noteable.svg","../../core/src/graph/optag-images/pandas.svg","../../core/src/graph/optag-images/pyspark.svg","../../core/src/graph/optag-images/python.svg","../../core/src/graph/optag-images/pytorch.svg","../../core/src/graph/optag-images/slack.svg","../../core/src/graph/optag-images/snowflake.svg","../../core/src/graph/optag-images/sql.svg","../../core/src/graph/optag-images/tensorflow.svg","../../core/src/graph/OpTags.tsx","../../core/src/graph/makeSVGPortable.tsx","../../core/src/graph/SVGViewport.tsx","../../core/src/graph/layout.ts","../../core/src/graph/asyncGraphLayout.ts","../../core/src/graph/common.ts","../../core/src/instance/BackfillUtils.tsx","../../core/src/launchpad/showLaunchError.tsx","../../core/src/ops/OpTypeSignature.tsx","../../core/src/partitions/PartitionStatus.tsx","../../core/src/partitions/RunMatrixUtils.tsx","../../core/src/partitions/SpanRepresentation.tsx","../../core/src/pipelines/CompositeSupport.ts","../../core/src/pipelines/Description.tsx","../../core/src/graph/OpEdges.tsx","../../core/src/graph/SVGComponents.tsx","../../core/src/graph/ExternalConnectionNode.tsx","../../core/src/graph/MappingLine.tsx","../../core/src/graph/ParentOpNode.tsx","../../core/src/graph/OpGraph.tsx","../../core/src/typeexplorer/TypeExplorer.tsx","../../core/src/typeexplorer/TypeExplorerContainer.tsx","../../core/src/typeexplorer/TypeList.tsx","../../core/src/typeexplorer/TypeListContainer.tsx","../../core/src/pipelines/SidebarOpExecutionGraphs.tsx","../../core/src/pipelines/SidebarOpInvocation.tsx","../../core/src/pipelines/SidebarOp.tsx","../../core/src/pipelines/SidebarRoot.tsx","../../core/src/pipelines/GraphExplorer.tsx","../../core/src/pipelines/GraphNotices.tsx","../../core/src/pipelines/SidebarResourcesSection.tsx","../../core/src/pipelines/SidebarContainerOverview.tsx","../../core/src/pipelines/SidebarOpDefinition.tsx","../../core/src/pipelines/SidebarOpHelpers.tsx","../../core/src/plugins/generic.tsx","../../core/src/plugins/ipynb.tsx","../../core/src/plugins/sql.tsx","../../core/src/plugins/index.ts","../../core/src/typeexplorer/ConfigTypeSchema.tsx","../../core/src/typeexplorer/TypeWithTooltip.tsx","../../core/src/ui/Loading.tsx","../../core/src/ui/TabLink.tsx","../../ui/src/components/Alert.tsx","../../ui/src/components/Page.tsx"],"sourcesContent":["export const DEFAULT_RESULT_NAME = 'result';\n\nexport const titleOfIO = (i: {solid: {name: string}; definition: {name: string}}) => {\n  return i.solid.name !== DEFAULT_RESULT_NAME\n    ? `${i.solid.name}:${i.definition.name}`\n    : i.solid.name;\n};\n","import * as dagre from 'dagre';\nimport groupBy from 'lodash/groupBy';\n\nimport {IBounds, IPoint} from '../graph/common';\n\nimport {GraphData, GraphNode, GraphId, displayNameForAssetKey} from './Utils';\n\nexport interface AssetLayout {\n  id: GraphId;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n}\n\nexport interface GroupLayout {\n  id: GraphId;\n  groupName: string;\n  repositoryName: string;\n  repositoryLocationName: string;\n  repositoryDisambiguationRequired: boolean;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n}\nexport type AssetLayoutEdge = {\n  from: IPoint;\n  fromId: string;\n  to: IPoint;\n  toId: string;\n};\n\nexport type AssetGraphLayout = {\n  width: number;\n  height: number;\n  edges: AssetLayoutEdge[];\n  nodes: {[id: string]: AssetLayout};\n  groups: {[name: string]: GroupLayout};\n};\n\nconst opts: {margin: number; mini: boolean} = {\n  margin: 100,\n  mini: false,\n};\n\n// Prefix group nodes in the Dagre layout so that an asset and an asset\n// group cannot have the same name.\nconst GROUP_NODE_PREFIX = 'group__';\n\nexport const layoutAssetGraph = (graphData: GraphData): AssetGraphLayout => {\n  const g = new dagre.graphlib.Graph({compound: true});\n\n  g.setGraph({\n    rankdir: 'TB',\n    marginx: opts.margin,\n    marginy: opts.margin,\n    nodesep: opts.mini ? 20 : 50,\n    edgesep: opts.mini ? 10 : 10,\n    ranksep: opts.mini ? 20 : 50,\n  });\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const parentNodeIdForNode = (node: GraphNode) =>\n    [\n      GROUP_NODE_PREFIX,\n      node.definition.repository.location.name,\n      node.definition.repository.name,\n      node.definition.groupName,\n    ].join('__');\n\n  // const shouldRender = (node?: GraphNode) => node && node.definition.opNames.length > 0;\n  const shouldRender = (node?: GraphNode) => node;\n  const renderedNodes = Object.values(graphData.nodes).filter(shouldRender);\n\n  const groups: {[id: string]: GroupLayout} = {};\n  for (const node of renderedNodes) {\n    if (node.definition.groupName) {\n      const id = parentNodeIdForNode(node);\n      groups[id] = {\n        id,\n        groupName: node.definition.groupName,\n        repositoryName: node.definition.repository.name,\n        repositoryLocationName: node.definition.repository.location.name,\n        repositoryDisambiguationRequired: false,\n        bounds: {x: 0, y: 0, width: 0, height: 0},\n      };\n    }\n  }\n\n  // Add all the group boxes to the graph\n  const showGroups = Object.keys(groups).length > 1;\n  if (showGroups) {\n    Object.keys(groups).forEach((groupId) => g.setNode(groupId, {}));\n  }\n\n  // Add all the nodes to the graph\n  renderedNodes.forEach((node) => {\n    const {width, height} = getAssetNodeDimensions(node.definition);\n    g.setNode(node.id, {width: opts.mini ? 230 : width, height});\n    if (showGroups && node.definition.groupName) {\n      g.setParent(node.id, parentNodeIdForNode(node));\n    }\n  });\n\n  const linksToAssetsOutsideGraphedSet = {};\n\n  // Add the edges to the graph, and accumulate a set of \"foreign nodes\" (for which\n  // we have an inbound/outbound edge, but we don't have the `node` in the graphData).\n  Object.keys(graphData.downstream).forEach((upstreamId) => {\n    const downstreamIds = Object.keys(graphData.downstream[upstreamId]);\n    downstreamIds.forEach((downstreamId) => {\n      if (\n        !shouldRender(graphData.nodes[downstreamId]) &&\n        !shouldRender(graphData.nodes[upstreamId])\n      ) {\n        return;\n      }\n\n      g.setEdge({v: upstreamId, w: downstreamId}, {weight: 1});\n\n      if (!shouldRender(graphData.nodes[downstreamId])) {\n        linksToAssetsOutsideGraphedSet[downstreamId] = true;\n      } else if (!shouldRender(graphData.nodes[upstreamId])) {\n        linksToAssetsOutsideGraphedSet[upstreamId] = true;\n      }\n    });\n  });\n\n  // Add all the link nodes to the graph\n  Object.keys(linksToAssetsOutsideGraphedSet).forEach((id) => {\n    g.setNode(id, getAssetLinkDimensions(id));\n  });\n\n  dagre.layout(g);\n\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  const nodes: {[id: string]: AssetLayout} = {};\n\n  g.nodes().forEach((id) => {\n    const dagreNode = g.node(id);\n    if (!dagreNode) {\n      return;\n    }\n    const bounds = {\n      x: dagreNode.x - dagreNode.width / 2,\n      y: dagreNode.y - dagreNode.height / 2,\n      width: dagreNode.width,\n      height: dagreNode.height,\n    };\n    if (!id.startsWith(GROUP_NODE_PREFIX)) {\n      nodes[id] = {id, bounds};\n    }\n\n    maxWidth = Math.max(maxWidth, dagreNode.x + dagreNode.width / 2);\n    maxHeight = Math.max(maxHeight, dagreNode.y + dagreNode.height / 2);\n  });\n\n  // Apply bounds to the groups based on the nodes inside them\n  if (showGroups) {\n    for (const node of renderedNodes) {\n      if (node.definition.groupName) {\n        const groupId = parentNodeIdForNode(node);\n        groups[groupId].bounds =\n          groups[groupId].bounds.width === 0\n            ? nodes[node.id].bounds\n            : extendBounds(groups[groupId].bounds, nodes[node.id].bounds);\n      }\n    }\n    for (const group of Object.values(groups)) {\n      group.bounds = padBounds(group.bounds, {x: 15, top: 80, bottom: 15});\n    }\n  }\n\n  // Annotate groups that require disambiguation (same group name appears twice)\n  Object.values(groupBy(Object.values(groups), (g) => g.groupName))\n    .filter((set) => set.length > 1)\n    .flat()\n    .forEach((group) => {\n      group.bounds.y -= 18;\n      group.bounds.height += 18;\n      group.repositoryDisambiguationRequired = true;\n    });\n\n  const edges: AssetLayoutEdge[] = [];\n\n  g.edges().forEach((e) => {\n    const points = g.edge(e).points;\n    edges.push({\n      from: points[0],\n      fromId: e.v,\n      to: points[points.length - 1],\n      toId: e.w,\n    });\n  });\n\n  return {\n    nodes,\n    edges,\n    width: maxWidth + opts.margin,\n    height: maxHeight + opts.margin,\n    groups: showGroups ? groups : {},\n  };\n};\n\nexport const getAssetLinkDimensions = (id: string) => {\n  const path = JSON.parse(id);\n  return {width: displayNameForAssetKey({path}).length * 8 + 40, height: 40};\n};\n\nexport const padBounds = (a: IBounds, padding: {x: number; top: number; bottom: number}) => {\n  return {\n    x: a.x - padding.x,\n    y: a.y - padding.top,\n    width: a.width + padding.x * 2,\n    height: a.height + padding.top + padding.bottom,\n  };\n};\n\nexport const extendBounds = (a: IBounds, b: IBounds) => {\n  const xmin = Math.min(a.x, b.x);\n  const ymin = Math.min(a.y, b.y);\n  const xmax = Math.max(a.x + a.width, b.x + b.width);\n  const ymax = Math.max(a.y + a.height, b.y + b.height);\n  return {x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin};\n};\n\nexport const ASSET_NODE_ICON_WIDTH = 20;\nexport const ASSET_NODE_NAME_MAX_LENGTH = 32;\nconst DISPLAY_NAME_PX_PER_CHAR = 8.0;\n\nexport const assetNameMaxlengthForWidth = (width: number) => {\n  return (width - ASSET_NODE_ICON_WIDTH) / DISPLAY_NAME_PX_PER_CHAR;\n};\n\nexport const getAssetNodeDimensions = (def: {\n  assetKey: {path: string[]};\n  opNames: string[];\n  isSource: boolean;\n  isObservable: boolean;\n  graphName: string | null;\n  description?: string | null;\n  computeKind: string | null;\n}) => {\n  const displayName = def.assetKey.path[def.assetKey.path.length - 1];\n  const width =\n    Math.max(\n      230,\n      Math.min(ASSET_NODE_NAME_MAX_LENGTH, displayName.length) * DISPLAY_NAME_PX_PER_CHAR,\n    ) + ASSET_NODE_ICON_WIDTH;\n\n  if (def.isSource && !def.isObservable) {\n    return {width, height: 40};\n  } else {\n    let height = 60; // name + description\n\n    if (def.isSource) {\n      height += 36; // observed\n    } else {\n      height += 36; // status row\n    }\n    if (def.computeKind) {\n      height += 30; // tag\n    }\n    return {width, height};\n  }\n};\n","import {Colors} from '@dagster-io/ui';\nimport {ActiveElement} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport * as React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nexport interface AssetValueGraphData {\n  minY: number;\n  maxY: number;\n  minXNumeric: number;\n  maxXNumeric: number;\n  xAxis: 'time' | 'partition';\n  values: {\n    x: number | string; // time or partition\n    xNumeric: number; // time or partition index\n    y: number;\n  }[];\n}\n\nexport const AssetValueGraph: React.FC<{\n  label: string;\n  width: string;\n  yAxisLabel?: string;\n  data: AssetValueGraphData;\n  xHover: string | number | null;\n  onHoverX: (value: string | number | null) => void;\n}> = (props) => {\n  // Note: To get partitions on the X axis, we pass the partition names in as the `labels`,\n  // and pass the partition index as the x value. This prevents ChartJS from auto-coercing\n  // ISO date partition names to dates and then re-formatting the labels away from 2020-01-01.\n  //\n  if (!props.data) {\n    return <span />;\n  }\n\n  let labels: React.ReactText[] | undefined = undefined;\n  let xHover = props.xHover;\n  if (props.data.xAxis === 'partition') {\n    labels = props.data.values.map((v) => v.x);\n    xHover = xHover ? labels.indexOf(xHover) : null;\n  }\n\n  const graphData = {\n    labels,\n    datasets: [\n      {\n        label: props.label,\n        lineTension: 0,\n        data: props.data.values.map((v) => ({x: v.xNumeric, y: v.y})),\n        borderColor: Colors.Blue500,\n        backgroundColor: 'rgba(0,0,0,0)',\n        pointBorderWidth: 2,\n        pointHoverBorderWidth: 2,\n        pointHoverRadius: 13,\n        pointHoverBorderColor: Colors.Blue500,\n      },\n    ],\n  };\n\n  const options = {\n    animation: {\n      duration: 0,\n    },\n    elements: {\n      point: {\n        radius: ((context: any) =>\n          context.dataset.data[context.dataIndex]?.x === xHover ? 13 : 2) as any,\n      },\n    },\n    scales: {\n      x: {\n        id: 'x',\n        display: true,\n        ...(props.data.xAxis === 'time'\n          ? {\n              type: 'time',\n              title: {\n                display: true,\n                text: 'Timestamp',\n              },\n            }\n          : {\n              type: 'category',\n              title: {\n                display: true,\n                text: 'Partition',\n              },\n            }),\n      },\n      y: {id: 'y', display: true, title: {display: true, text: props.yAxisLabel || 'Value'}},\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    onHover(_: MouseEvent, activeElements: ActiveElement[]) {\n      if (activeElements.length === 0) {\n        props.onHoverX(null);\n        return;\n      }\n      const itemIdx = (activeElements[0] as any).index;\n      if (itemIdx === 0) {\n        // ChartJS errantly selects the first item when you're moving the mouse off the line\n        props.onHoverX(null);\n        return;\n      }\n      props.onHoverX(props.data.values[itemIdx].x);\n    },\n  };\n\n  return <Line type=\"line\" data={graphData} height={100} options={options} key={props.width} />;\n};\n","import {gql} from '@apollo/client';\nimport {Box, Colors, FontFamily, Tag} from '@dagster-io/ui';\nimport {Spacing} from '@dagster-io/ui/src/components/types';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {gqlTypePredicate} from '../app/Util';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {TableSchema} from '../metadata/TableSchema';\nimport {MetadataEntryFragment} from '../metadata/types/MetadataEntryFragment';\nimport {Description} from '../pipelines/Description';\nimport {CONFIG_TYPE_SCHEMA_FRAGMENT} from '../typeexplorer/ConfigTypeSchema';\n\nimport {DagsterTypeFragment} from './types/DagsterTypeFragment';\n\nexport const dagsterTypeKind = (type: {metadataEntries: MetadataEntryFragment[]}) => {\n  const tableSchema = type.metadataEntries.find(gqlTypePredicate('TableSchemaMetadataEntry'));\n  if (tableSchema) {\n    return 'table';\n  } else {\n    return 'standard';\n  }\n};\n\nexport const DagsterTypeKindTag: React.FC<{type: DagsterTypeFragment}> = (kind) => {\n  return <Tag intent=\"primary\">{kind}</Tag>;\n};\n\nconst _DagsterTypeName: React.FC<{type: DagsterTypeFragment; className?: string}> = ({\n  type,\n  className,\n}) => {\n  const typeKind = dagsterTypeKind(type);\n  const displayName = typeKind === 'standard' ? type.name : `${type.name} (${typeKind})`;\n  return <Box className={className}>{displayName}</Box>;\n};\n\nexport const DagsterTypeName = styled(_DagsterTypeName)`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const DagsterTypeSummary: React.FC<{\n  type: DagsterTypeFragment;\n  horizontalPadding?: Spacing;\n}> = ({type, horizontalPadding}) => {\n  horizontalPadding = horizontalPadding || 0;\n  const tableSchemaEntry = type.metadataEntries.find(gqlTypePredicate('TableSchemaMetadataEntry'));\n  return (\n    <Box\n      flex={{direction: 'column', gap: 8}}\n      padding={{horizontal: 24, vertical: 16}}\n      style={{overflowY: 'auto'}}\n    >\n      {type.name && (\n        <Box>\n          <DagsterTypeName type={type} />\n        </Box>\n      )}\n      {type.description && (\n        <Box padding={{horizontal: horizontalPadding}}>\n          <Description description={type.description} />\n        </Box>\n      )}\n      {tableSchemaEntry && (\n        <Box\n          border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n          style={{overflowY: 'auto', marginBottom: -12}}\n          margin={{top: 4}}\n        >\n          <TableSchema schema={tableSchemaEntry.schema} itemHorizontalPadding={horizontalPadding} />\n        </Box>\n      )}\n    </Box>\n  );\n};\n\n// NOTE: Because you can't have a recursive fragment, inner types are limited.\nexport const DAGSTER_TYPE_FRAGMENT = gql`\n  fragment DagsterTypeFragment on DagsterType {\n    ..._DagsterTypeFragment\n    innerTypes {\n      ..._DagsterTypeFragment\n    }\n  }\n  fragment _DagsterTypeFragment on DagsterType {\n    key\n    name\n    displayName\n    description\n    isNullable\n    isList\n    isBuiltin\n    isNothing\n    metadataEntries {\n      ...MetadataEntryFragment\n    }\n    inputSchemaType {\n      ...ConfigTypeSchemaFragment\n      recursiveConfigTypes {\n        ...ConfigTypeSchemaFragment\n      }\n    }\n    outputSchemaType {\n      ...ConfigTypeSchemaFragment\n      recursiveConfigTypes {\n        ...ConfigTypeSchemaFragment\n      }\n    }\n  }\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n  ${METADATA_ENTRY_FRAGMENT}\n`;\n","import {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {DEFAULT_RESULT_NAME, titleOfIO} from '../app/titleOfIO';\n\nimport {Edge, isHighlighted, position} from './common';\nimport {OpLayoutIO} from './layout';\nimport {\n  OpNodeDefinitionFragment,\n  OpNodeDefinitionFragment_SolidDefinition_inputDefinitions,\n  OpNodeDefinitionFragment_SolidDefinition_outputDefinitions,\n} from './types/OpNodeDefinitionFragment';\nimport {OpNodeInvocationFragment} from './types/OpNodeInvocationFragment';\n\nexport const PARENT_IN = 'PARENT_IN';\nexport const PARENT_OUT = 'PARENT_OUT';\n\ninterface OpIORenderMetadata {\n  edges: Edge[];\n  jumpTargetOp: string | null;\n  title: string;\n}\n\ninterface OpIOBoxProps extends OpIORenderMetadata {\n  colorKey: 'input' | 'output';\n  item:\n    | OpNodeDefinitionFragment_SolidDefinition_inputDefinitions\n    | OpNodeDefinitionFragment_SolidDefinition_outputDefinitions;\n  layoutInfo: OpLayoutIO | undefined;\n\n  // Passed through from Solid props\n  minified: boolean;\n  highlightedEdges: Edge[];\n  onDoubleClick: (opName: string) => void;\n  onHighlightEdges: (edges: Edge[]) => void;\n}\n\nexport const OpIOBox: React.FC<OpIOBoxProps> = ({\n  minified,\n  title,\n  jumpTargetOp,\n  edges,\n  highlightedEdges,\n  colorKey,\n  item,\n  layoutInfo,\n  onDoubleClick,\n  onHighlightEdges,\n}) => {\n  if (!layoutInfo) {\n    return null;\n  }\n  const {name, type} = item;\n  const highlighted = edges.some((e) => isHighlighted(highlightedEdges, e));\n\n  return (\n    <OpIOContainer\n      title={title}\n      style={{...position(layoutInfo.layout), width: 'initial'}}\n      onMouseEnter={() => onHighlightEdges(edges)}\n      onMouseLeave={() => onHighlightEdges([])}\n      onClick={(e) => {\n        jumpTargetOp && onDoubleClick(jumpTargetOp);\n        e.stopPropagation();\n      }}\n      onDoubleClick={(e) => e.stopPropagation()}\n      $colorKey={colorKey}\n      $highlighted={highlighted}\n    >\n      {minified || !layoutInfo.label ? (\n        <div className=\"circle\" />\n      ) : (\n        <>\n          <div className=\"circle\" />\n          {name !== DEFAULT_RESULT_NAME && <div className=\"label\">{name}</div>}\n          {type.displayName && <div className=\"type\">{type.displayName}</div>}\n        </>\n      )}\n      {layoutInfo.collapsed.length > 0 && (\n        <div className=\"collapsedCount\">+ {layoutInfo.collapsed.length}</div>\n      )}\n    </OpIOContainer>\n  );\n};\n\nconst OpIOContainer = styled.div<{$colorKey: string; $highlighted: boolean}>`\n  display: inline-flex;\n  align-items: center;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  background: ${(p) => (p.$highlighted ? 'rgba(255, 255, 255, 1)' : 'rgba(255, 255, 255, 0.75)')};\n  font-size: 12px;\n\n  &:last-child {\n    border-bottom-left-radius: 8px;\n  }\n\n  .circle {\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background: ${(p) => (p.$highlighted ? Colors.Blue500 : Colors.Gray500)};\n    display: inline-block;\n    margin: 6px;\n  }\n  .label {\n    line-height: 26px;\n    font-family: ${FontFamily.monospace};\n    font-weight: 500;\n    height: 26px;\n    padding-left: 2px;\n    padding-right: 6px;\n  }\n  .type {\n    padding: 1px 6px;\n    background: #e7e6f0;\n    margin-right: 4px;\n    color: ${Colors.Blue500};\n    font-family: ${FontFamily.monospace};\n    font-weight: 700;\n    border-radius: 4px;\n  }\n  .collapsedCount {\n    color: ${(p) => (p.$highlighted ? Colors.Blue500 : Colors.Gray500)};\n    font-weight: 600;\n    margin-left: -3px;\n    padding-right: 4px;\n  }\n`;\n\nexport function metadataForCompositeParentIO(\n  parentDefinition: OpNodeDefinitionFragment,\n  item:\n    | OpNodeDefinitionFragment_SolidDefinition_inputDefinitions\n    | OpNodeDefinitionFragment_SolidDefinition_outputDefinitions,\n): OpIORenderMetadata {\n  const edges: Edge[] = [];\n  let title = `${item.name}: ${item.type.displayName}`;\n\n  if (parentDefinition.__typename !== 'CompositeSolidDefinition') {\n    throw new Error('Parent solid is not a composite - how did this happen?');\n  }\n\n  if (item.__typename === 'InputDefinition') {\n    const others = parentDefinition.inputMappings\n      .filter((i) => i.definition.name === item.name)\n      .map((i) => i.mappedInput);\n\n    title += `\\n\\nConnected to: ${others.map(titleOfIO).join('\\n')}`;\n    edges.push(\n      ...others.map((i) => ({\n        a: `${i.solid.name}:${i.definition.name}`,\n        b: PARENT_IN,\n      })),\n    );\n  }\n  if (item.__typename === 'OutputDefinition') {\n    const others = parentDefinition.outputMappings\n      .filter((i) => i.definition.name === item.name)\n      .map((i) => i.mappedOutput);\n\n    title += `\\n\\nConnected to: ${others.map(titleOfIO).join('\\n')}`;\n    edges.push(\n      ...others.map((i) => ({\n        a: `${i.solid.name}:${i.definition.name}`,\n        b: PARENT_OUT,\n      })),\n    );\n  }\n\n  return {\n    edges,\n    title,\n    jumpTargetOp: edges.length === 1 ? edges[0].a : null,\n  };\n}\n\nexport function metadataForIO(\n  item:\n    | OpNodeDefinitionFragment_SolidDefinition_inputDefinitions\n    | OpNodeDefinitionFragment_SolidDefinition_outputDefinitions,\n  invocation?: OpNodeInvocationFragment,\n): OpIORenderMetadata {\n  const edges: Edge[] = [];\n\n  let title = `${item.name}: ${item.type.displayName}`;\n  let jumpTargetOp: string | null = null;\n\n  if (invocation && item.__typename === 'InputDefinition') {\n    const others = invocation.inputs.find((i) => i.definition.name === item.name)!.dependsOn;\n    if (others.length) {\n      title += `\\n\\nFrom:\\n` + others.map(titleOfIO).join('\\n');\n      jumpTargetOp = others.length === 1 ? others[0].solid.name : null;\n      edges.push(...others.map((o) => ({a: o.solid.name, b: invocation.name})));\n    }\n    edges.push({a: `${invocation.name}:${item.name}`, b: PARENT_IN});\n  }\n  if (invocation && item.__typename === 'OutputDefinition') {\n    const output = invocation.outputs.find((i) => i.definition.name === item.name);\n    if (!output) {\n      throw new Error(\n        `Invocation ${invocation.name} has no output with a definition named \"${item.name}\"`,\n      );\n    }\n\n    const others = output.dependedBy;\n    if (others.length) {\n      title += '\\n\\nUsed By:\\n' + others.map((o) => titleOfIO(o)).join('\\n');\n      jumpTargetOp = others.length === 1 ? others[0].solid.name : null;\n      edges.push(...others.map((o) => ({a: o.solid.name, b: invocation.name})));\n    }\n    edges.push({a: `${invocation.name}:${item.name}`, b: PARENT_OUT});\n  }\n\n  return {edges, title, jumpTargetOp};\n}\n","import {gql} from '@apollo/client';\nimport {Colors, Icon, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {withMiddleTruncation} from '../app/Util';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {AssetKey} from '../assets/types';\n\nimport {OpIOBox, metadataForIO} from './OpIOBox';\nimport {OpTags, IOpTag} from './OpTags';\nimport {OpLayout} from './asyncGraphLayout';\nimport {Edge, position} from './common';\nimport {OpNodeDefinitionFragment} from './types/OpNodeDefinitionFragment';\nimport {OpNodeInvocationFragment} from './types/OpNodeInvocationFragment';\n\ninterface IOpNodeProps {\n  layout: OpLayout;\n  invocation?: OpNodeInvocationFragment;\n  definition: OpNodeDefinitionFragment;\n  highlightedEdges: Edge[];\n  minified: boolean;\n  selected: boolean;\n  focused: boolean;\n  dim: boolean;\n  onClick: () => void;\n  onDoubleClick: () => void;\n  onEnterComposite: () => void;\n  onHighlightEdges: (edges: Edge[]) => void;\n}\n\nconst TOOLTIP_STYLE = JSON.stringify({\n  top: -20,\n  left: 5,\n});\n\nexport class OpNode extends React.Component<IOpNodeProps> {\n  shouldComponentUpdate(prevProps: IOpNodeProps) {\n    if (prevProps.dim !== this.props.dim) {\n      return true;\n    }\n    if (prevProps.selected !== this.props.selected) {\n      return true;\n    }\n    if (prevProps.focused !== this.props.focused) {\n      return true;\n    }\n    if (prevProps.minified !== this.props.minified) {\n      return true;\n    }\n    if (prevProps.highlightedEdges !== this.props.highlightedEdges) {\n      return true;\n    }\n    if (prevProps.layout !== this.props.layout) {\n      return true;\n    }\n    if (\n      (prevProps.invocation && prevProps.invocation.name) !==\n      (this.props.invocation && this.props.invocation.name)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onClick();\n  };\n\n  handleDoubleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onDoubleClick();\n  };\n\n  handleEnterComposite = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onEnterComposite();\n  };\n\n  handleKindClicked = (e: React.MouseEvent) => {\n    this.handleClick(e);\n    window.requestAnimationFrame(() => document.dispatchEvent(new Event('show-kind-info')));\n  };\n\n  public render() {\n    const {definition, invocation, layout, dim, focused, selected, minified} = this.props;\n    const {metadata} = definition;\n    if (!layout) {\n      throw new Error(`Layout is missing for ${definition.name}`);\n    }\n\n    let configField = null;\n    if (definition.__typename === 'SolidDefinition') {\n      configField = definition.configField;\n    }\n\n    const tags: IOpTag[] = [];\n\n    const kind = metadata.find((m) => m.key === 'kind');\n    const composite = definition.__typename === 'CompositeSolidDefinition';\n\n    if (kind) {\n      tags.push({label: kind.value, onClick: this.handleKindClicked});\n    }\n    if (composite) {\n      tags.push({label: 'Expand', onClick: this.handleEnterComposite});\n    }\n\n    const label = invocation ? invocation.name : definition.name;\n\n    return (\n      <NodeContainer\n        $minified={minified}\n        $selected={selected}\n        $secondaryHighlight={focused}\n        $dim={dim}\n        onClick={this.handleClick}\n        onDoubleClick={this.handleDoubleClick}\n      >\n        <div className=\"highlight-box\" style={{...position(layout.bounds)}} />\n        {composite && <div className=\"composite-marker\" style={{...position(layout.op)}} />}\n\n        {invocation?.isDynamicMapped && (\n          <div className=\"dynamic-marker\" style={{...position(layout.op)}} />\n        )}\n\n        {configField && configField.configType.key !== 'Any' && (\n          <div\n            className=\"config-marker\"\n            style={{left: layout.op.x + layout.op.width, top: layout.op.y}}\n          >\n            {minified ? 'C' : 'Config'}\n          </div>\n        )}\n\n        {definition.inputDefinitions.map((item, idx) => (\n          <OpIOBox\n            {...this.props}\n            {...metadataForIO(item, invocation)}\n            key={idx}\n            item={item}\n            layoutInfo={layout.inputs[item.name]}\n            colorKey=\"input\"\n          />\n        ))}\n\n        <div className=\"node-box\" style={{...position(layout.op)}}>\n          <div className=\"name\">\n            {!minified && <Icon name=\"op\" size={16} />}\n            <div className=\"label\" data-tooltip={label} data-tooltip-style={TOOLTIP_STYLE}>\n              {withMiddleTruncation(label, {maxLength: 48})}\n            </div>\n          </div>\n          {!minified && (definition.description || definition.assetNodes.length === 0) && (\n            <div className=\"description\">{(definition.description || '').split('\\n')[0]}</div>\n          )}\n          {!minified && definition.assetNodes.length > 0 && (\n            <OpNodeAssociatedAssets nodes={definition.assetNodes} />\n          )}\n        </div>\n\n        {tags.length > 0 && (\n          <OpTags\n            style={{\n              left: layout.op.x + layout.op.width,\n              top: layout.op.y + layout.op.height,\n              transform: 'translate(-100%, 3px)',\n            }}\n            minified={minified}\n            tags={tags}\n          />\n        )}\n\n        {definition.outputDefinitions.map((item, idx) => (\n          <OpIOBox\n            {...this.props}\n            {...metadataForIO(item, invocation)}\n            key={idx}\n            item={item}\n            layoutInfo={layout.outputs[item.name]}\n            colorKey=\"output\"\n          />\n        ))}\n      </NodeContainer>\n    );\n  }\n}\n\nconst OpNodeAssociatedAssets: React.FC<{nodes: {assetKey: AssetKey}[]}> = ({nodes}) => {\n  const more = nodes.length > 1 ? ` + ${nodes.length - 1} more` : '';\n  return (\n    <div className=\"assets\">\n      <Icon name=\"asset\" size={16} />\n      {withMiddleTruncation(displayNameForAssetKey(nodes[0].assetKey), {\n        maxLength: 48 - more.length,\n      })}\n      {more}\n    </div>\n  );\n};\n\nexport const OP_NODE_INVOCATION_FRAGMENT = gql`\n  fragment OpNodeInvocationFragment on Solid {\n    name\n    isDynamicMapped\n    inputs {\n      definition {\n        name\n      }\n      isDynamicCollect\n      dependsOn {\n        definition {\n          name\n          type {\n            displayName\n          }\n        }\n        solid {\n          name\n        }\n      }\n    }\n    outputs {\n      definition {\n        name\n      }\n      dependedBy {\n        solid {\n          name\n        }\n        definition {\n          name\n          type {\n            displayName\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const OP_NODE_DEFINITION_FRAGMENT = gql`\n  fragment OpNodeDefinitionFragment on ISolidDefinition {\n    __typename\n    name\n    description\n    metadata {\n      key\n      value\n    }\n    assetNodes {\n      id\n      assetKey {\n        path\n      }\n    }\n    inputDefinitions {\n      name\n      type {\n        displayName\n      }\n    }\n    outputDefinitions {\n      name\n      isDynamic\n      type {\n        displayName\n      }\n    }\n    ... on SolidDefinition {\n      configField {\n        configType {\n          key\n          description\n        }\n      }\n    }\n    ... on CompositeSolidDefinition {\n      id\n      inputMappings {\n        definition {\n          name\n        }\n        mappedInput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n      outputMappings {\n        definition {\n          name\n        }\n        mappedOutput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const NodeHighlightColors = {\n  Border: Colors.Blue500,\n  Background: Colors.Blue50,\n};\n\nconst NodeContainer = styled.div<{\n  $minified: boolean;\n  $selected: boolean;\n  $secondaryHighlight: boolean;\n  $dim: boolean;\n}>`\n  opacity: ${({$dim}) => ($dim ? 0.3 : 1)};\n  pointer-events: auto;\n\n  .highlight-box {\n    border-radius: 13px;\n    background: ${(p) => (p.$selected ? NodeHighlightColors.Background : 'transparent')};\n  }\n  .node-box {\n    border: ${(p) =>\n      p.$selected\n        ? `2px dashed ${NodeHighlightColors.Border}`\n        : p.$secondaryHighlight\n        ? `2px solid ${Colors.Blue500}55`\n        : '2px solid #dcd5ca'};\n\n    border-width: ${(p) => (p.$minified ? '3px' : '2px')};\n    border-radius: 8px;\n    background: ${(p) => (p.$minified ? Colors.Gray50 : Colors.White)};\n  }\n  .composite-marker {\n    outline: ${(p) => (p.$minified ? '3px' : '2px')} solid\n      ${(p) => (p.$selected ? 'transparent' : Colors.Yellow200)};\n    outline-offset: ${(p) => (p.$minified ? '5px' : '3px')};\n    border-radius: 3px;\n  }\n  .dynamic-marker {\n    transform: translate(-5px, -5px);\n    border: ${(p) => (p.$minified ? '3px' : '2px')} solid #dcd5ca;\n    border-radius: 3px;\n  }\n  .config-marker {\n    position: absolute;\n    transform: ${(p) => (p.$minified ? ' translate(-100%, -28px)' : ' translate(-100%, -21px)')};\n    font-size: ${(p) => (p.$minified ? '24px' : '12px')};\n    font-family: ${FontFamily.monospace};\n    font-weight: 700;\n    opacity: 0.5;\n  }\n  .name {\n    display: flex;\n    gap: 5px;\n    padding: 4px ${(p) => (p.$minified ? '8px' : '3px')};\n    font-size: ${(p) => (p.$minified ? '32px' : '14px')};\n    font-family: ${FontFamily.monospace};\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    align-items: center;\n    font-weight: 600;\n    .label {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n  .assets {\n    padding: 0 4px;\n    white-space: nowrap;\n    line-height: 22px;\n    height: 22px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    background: #f5f3ef;\n    font-size: 12px;\n    display: flex;\n    gap: 4px;\n    align-items: center;\n  }\n  .description {\n    padding: 0 8px;\n    white-space: nowrap;\n    line-height: 22px;\n    height: 22px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    background: #f5f3ef;\n    border-top: 1px solid #e6e1d8;\n    border-bottom-left-radius: 8px;\n    border-bottom-right-radius: 8px;\n    font-size: 12px;\n  }\n`;\n","var _g, _path, _path2, _path3, _path4, _path5, _path6, _path7, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgAirbyte = function SvgAirbyte(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 59,\n    height: 15,\n    viewBox: \"0 -1 59 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_339_2391)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M4.32238 1.58501C5.72154 0.0148234 8.03851 -0.44579 9.94339 0.460546C12.4742 1.66487 13.3975 4.73273 12.0196 7.09921L8.91989 12.417C8.74665 12.7141 8.4616 12.9309 8.12734 13.0198C7.79308 13.1086 7.43691 13.0623 7.13707 12.8909L10.8899 6.45162C11.8896 4.73408 11.2209 2.50778 9.38603 1.63123C8.00929 0.973563 6.32628 1.3021 5.30921 2.43314C4.7482 3.05405 4.43321 3.8557 4.42271 4.6894C4.41221 5.52314 4.7069 6.33232 5.25208 6.96697C5.35006 7.08085 5.45551 7.1882 5.56773 7.28834L3.37686 11.0543C3.29118 11.2015 3.17712 11.3306 3.04116 11.434C2.90521 11.5375 2.75004 11.6134 2.5845 11.6575C2.41897 11.7015 2.24632 11.7127 2.07641 11.6905C1.9065 11.6684 1.74265 11.6132 1.59423 11.5282L3.97264 7.43974C3.631 6.95122 3.38566 6.40294 3.24956 5.82391L1.7921 8.33428C1.61885 8.63143 1.33381 8.84825 0.999542 8.93713C0.665278 9.02596 0.309122 8.97964 0.00927734 8.80824L3.77825 2.33278C3.93513 2.06686 4.11734 1.81646 4.32238 1.58501ZM8.67251 3.64617C9.5802 4.16613 9.89368 5.32252 9.36847 6.22247L5.75427 12.4162C5.58103 12.7134 5.29598 12.9301 4.96172 13.019C4.62746 13.1079 4.27129 13.0615 3.97145 12.8902L7.32735 7.12377C7.05807 7.06756 6.80434 6.95406 6.5836 6.79109C6.36286 6.62809 6.18043 6.41955 6.04889 6.17985C5.91731 5.94011 5.83977 5.67494 5.82161 5.40258C5.80345 5.13025 5.84508 4.85725 5.94366 4.60243C6.04224 4.34761 6.19537 4.11701 6.39253 3.92661C6.58969 3.73622 6.82616 3.59055 7.08561 3.49963C7.34506 3.40871 7.62129 3.37473 7.89528 3.40003C8.16927 3.42533 8.43444 3.50931 8.67251 3.64617ZM7.35788 4.81019C7.29577 4.85748 7.24364 4.91645 7.20452 4.98371H7.20433C7.14536 5.08505 7.11805 5.20143 7.12574 5.31819C7.13348 5.4349 7.17593 5.54677 7.24775 5.63956C7.31958 5.73235 7.41748 5.80196 7.52918 5.83955C7.64087 5.87717 7.76127 5.88106 7.87521 5.85079C7.98915 5.82048 8.09147 5.7574 8.16919 5.66942C8.24696 5.58144 8.29669 5.4726 8.31209 5.35663C8.32749 5.24062 8.30787 5.12271 8.2557 5.01779C8.20353 4.91287 8.12117 4.82564 8.01904 4.76715C7.95122 4.72829 7.87637 4.7031 7.79872 4.69295C7.72107 4.68283 7.64218 4.68794 7.56655 4.70806C7.49091 4.72818 7.42002 4.76286 7.35788 4.81019Z\",\n    fill: \"white\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.4021 9.87925H16.7146L19.787 1.15198H21.7387L24.8155 9.87925H23.128L20.797 2.94175H20.7288L18.4021 9.87925ZM18.4575 6.45738H23.0598V7.72726H18.4575V6.45738Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.9416 9.87925V3.3338H27.4842V9.87925H25.9416ZM26.7172 2.40482C26.4729 2.40482 26.2626 2.32385 26.0865 2.16192C25.9104 1.99715 25.8223 1.7997 25.8223 1.56959C25.8223 1.33664 25.9104 1.13919 26.0865 0.977261C26.2626 0.812489 26.4729 0.730103 26.7172 0.730103C26.9643 0.730103 27.1746 0.812489 27.3479 0.977261C27.524 1.13919 27.6121 1.33664 27.6121 1.56959C27.6121 1.7997 27.524 1.99715 27.3479 2.16192C27.1746 2.32385 26.9643 2.40482 26.7172 2.40482Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.0685 9.87925V3.3338H30.5642V4.42471H30.6324C30.7517 4.04686 30.9563 3.75567 31.246 3.55113C31.5386 3.34374 31.8725 3.24005 32.2475 3.24005C32.3327 3.24005 32.4279 3.24431 32.533 3.25283C32.6409 3.25851 32.7304 3.26846 32.8014 3.28266V4.70169C32.7361 4.67897 32.6324 4.65908 32.4903 4.64203C32.3511 4.62215 32.2162 4.61221 32.0855 4.61221C31.8043 4.61221 31.5514 4.67328 31.327 4.79544C31.1054 4.91476 30.9307 5.08095 30.8028 5.29402C30.675 5.50709 30.6111 5.75283 30.6111 6.03124V9.87925H29.0685Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.8924 9.87925V1.15198H35.435V4.41618H35.499C35.5785 4.25709 35.6907 4.08806 35.8356 3.90908C35.9805 3.72726 36.1765 3.57243 36.4237 3.44459C36.6708 3.31391 36.9862 3.24857 37.3697 3.24857C37.8754 3.24857 38.3313 3.37783 38.7376 3.63635C39.1467 3.89203 39.4706 4.2713 39.7092 4.77414C39.9507 5.27414 40.0714 5.88777 40.0714 6.61505C40.0714 7.3338 39.9535 7.94459 39.7177 8.44743C39.4819 8.95027 39.1609 9.3338 38.7546 9.598C38.3484 9.86221 37.8882 9.99431 37.374 9.99431C36.999 9.99431 36.6879 9.93181 36.4407 9.80681C36.1936 9.68181 35.9947 9.53124 35.8441 9.3551C35.6964 9.17613 35.5813 9.00709 35.499 8.848H35.4095V9.87925H33.8924ZM35.4052 6.60652C35.4052 7.02982 35.4649 7.40056 35.5842 7.71874C35.7063 8.03692 35.8811 8.2855 36.1083 8.46448C36.3384 8.64061 36.6169 8.72868 36.9436 8.72868C37.2845 8.72868 37.57 8.63777 37.8001 8.45595C38.0302 8.2713 38.2035 8.01988 38.32 7.70169C38.4393 7.38067 38.499 7.01561 38.499 6.60652C38.499 6.20027 38.4407 5.83948 38.3242 5.52414C38.2078 5.2088 38.0345 4.96164 37.8044 4.78266C37.5742 4.60368 37.2873 4.51419 36.9436 4.51419C36.614 4.51419 36.3342 4.60084 36.1041 4.77414C35.874 4.94743 35.6992 5.19033 35.5799 5.50283C35.4635 5.81533 35.4052 6.18323 35.4052 6.60652Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.117 12.3338C41.9067 12.3338 41.7121 12.3168 41.5331 12.2827C41.357 12.2514 41.2164 12.2145 41.1113 12.1719L41.4692 10.9702C41.6937 11.0355 41.8939 11.0668 42.0701 11.0639C42.2462 11.0611 42.401 11.0057 42.5346 10.8977C42.6709 10.7926 42.786 10.6165 42.8797 10.3693L43.0118 10.0156L40.6383 3.3338H42.2746L43.7831 8.27698H43.8513L45.3641 3.3338H47.0047L44.384 10.6719C44.2618 11.0185 44.0999 11.3153 43.8982 11.5625C43.6965 11.8125 43.4493 12.0028 43.1567 12.1335C42.867 12.267 42.5204 12.3338 42.117 12.3338Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M51.3386 3.3338V4.52698H47.5758V3.3338H51.3386ZM48.5048 1.76561H50.0474V7.9105C50.0474 8.11789 50.0787 8.27698 50.1412 8.38777C50.2065 8.49573 50.2918 8.56959 50.3969 8.60936C50.502 8.64914 50.6185 8.66902 50.7463 8.66902C50.8429 8.66902 50.931 8.66192 51.0105 8.64772C51.0929 8.63351 51.1554 8.62073 51.198 8.60936L51.458 9.81533C51.3756 9.84374 51.2577 9.87499 51.1043 9.90908C50.9537 9.94317 50.769 9.96306 50.5503 9.96874C50.1639 9.9801 49.8159 9.92186 49.5062 9.79402C49.1966 9.66334 48.9508 9.46164 48.769 9.18891C48.5901 8.91618 48.502 8.57527 48.5048 8.16618V1.76561Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.4541 10.0071C54.7979 10.0071 54.2311 9.87073 53.7538 9.598C53.2794 9.32243 52.9144 8.93323 52.6587 8.43039C52.403 7.9247 52.2752 7.32953 52.2752 6.64488C52.2752 5.97158 52.403 5.38067 52.6587 4.87215C52.9172 4.36078 53.278 3.96306 53.7411 3.67897C54.2041 3.39203 54.7482 3.24857 55.3732 3.24857C55.7766 3.24857 56.1573 3.31391 56.5152 3.44459C56.876 3.57243 57.1942 3.7713 57.4698 4.04118C57.7482 4.31107 57.9669 4.65482 58.126 5.07243C58.2851 5.48721 58.3646 5.98152 58.3646 6.55539V7.0284H52.9996V5.98863H56.886C56.8831 5.69317 56.8192 5.43039 56.6942 5.20027C56.5692 4.96732 56.3945 4.78408 56.17 4.65056C55.9485 4.51703 55.6899 4.45027 55.3945 4.45027C55.0791 4.45027 54.8021 4.52698 54.5635 4.68039C54.3249 4.83095 54.1388 5.02982 54.0053 5.27698C53.8746 5.5213 53.8078 5.78976 53.805 6.08238V6.99005C53.805 7.37073 53.8746 7.69743 54.0138 7.97016C54.153 8.24005 54.3476 8.44743 54.5976 8.59232C54.8476 8.73436 55.1402 8.80539 55.4754 8.80539C55.6999 8.80539 55.903 8.77414 56.0848 8.71164C56.2666 8.6463 56.4243 8.55113 56.5578 8.42613C56.6913 8.30113 56.7922 8.1463 56.8604 7.96164L58.3007 8.12357C58.2098 8.50425 58.0365 8.83664 57.7808 9.12073C57.528 9.40198 57.2041 9.62073 56.8092 9.77698C56.4144 9.93039 55.9627 10.0071 55.4541 10.0071Z\",\n    fill: \"white\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_339_2391\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 12.7054,\n    height: 13.064,\n    fill: \"white\",\n    transform: \"translate(0.00927734)\"\n  })))));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgAirbyte);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/airbyte.831d1c92d12b411d2b6a59ece18c806c.svg\";","var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgDbt = function SvgDbt(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 38,\n    height: 24,\n    viewBox: \"8 0 38 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.8122 5.30325C22.1513 5.63347 22.3731 6.06936 22.4252 6.54484C22.4252 6.74297 22.3731 6.87509 22.2557 7.12602C22.1383 7.37699 20.6905 9.91306 20.2602 10.6131C20.0124 11.0226 19.8819 11.5113 19.8819 11.9868C19.8819 12.4755 20.0124 12.951 20.2602 13.3605C20.6905 14.0605 22.1383 16.6098 22.2557 16.8607C22.3731 17.1117 22.4252 17.2306 22.4252 17.4287C22.3731 17.9042 22.1644 18.3401 21.8253 18.6571C21.4992 19.0005 21.0688 19.2251 20.6123 19.2647C20.4167 19.2647 20.2862 19.2119 20.0515 19.093C19.8167 18.9741 17.2603 17.5476 16.5691 17.1117C16.5169 17.0853 16.4647 17.0457 16.3995 17.0192L12.9823 14.9719C13.0606 15.6324 13.3475 16.2664 13.817 16.7287C13.9084 16.8211 13.9996 16.9004 14.104 16.9796C14.0257 17.0192 13.9344 17.0589 13.8562 17.1117C13.1649 17.5476 10.6477 19.0138 10.3999 19.1326C10.1521 19.2515 10.0347 19.3043 9.82597 19.3043C9.35645 19.2515 8.92603 19.0402 8.613 18.6967C8.27391 18.3665 8.05218 17.9307 8 17.4552C8.01303 17.257 8.06521 17.0589 8.16955 16.8872C8.28694 16.6362 9.7347 14.0869 10.1651 13.3869C10.4129 12.9774 10.5433 12.5019 10.5433 12.0132C10.5433 11.5245 10.4129 11.049 10.1651 10.6395C9.7347 9.91306 8.27391 7.36378 8.16955 7.11281C8.06521 6.9411 8.01303 6.74297 8 6.54484C8.05218 6.06936 8.26085 5.63347 8.59997 5.30325C8.92603 4.95983 9.35645 4.74849 9.82597 4.69565C10.0216 4.70886 10.2172 4.7617 10.3999 4.86736C10.6085 4.95983 12.4475 6.04294 13.4258 6.62412L13.6475 6.75618C13.7258 6.80901 13.791 6.84864 13.8432 6.87509L13.9475 6.9411L17.4299 9.02807C17.3516 8.23555 16.9473 7.50907 16.3212 7.02035C16.3995 6.98076 16.4908 6.9411 16.5691 6.88827C17.2603 6.45241 19.7776 4.97303 20.0254 4.86736C20.1949 4.7617 20.3906 4.70886 20.5993 4.69565C21.0558 4.74849 21.4862 4.95983 21.8122 5.30325ZM15.3952 12.9378L16.1387 12.1849C16.243 12.0793 16.243 11.9207 16.1387 11.8151L15.3952 11.0622C15.2909 10.9565 15.1344 10.9565 15.03 11.0622L14.2866 11.8151C14.1822 11.9207 14.1822 12.0793 14.2866 12.1849L15.03 12.9378C15.1213 13.0303 15.2909 13.0303 15.3952 12.9378Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.1227 16.4212C28.6085 16.4212 28.1483 16.2891 27.742 16.0249C27.3358 15.7607 27.0147 15.3771 26.7789 14.8743C26.5431 14.3714 26.4252 13.7607 26.4252 13.0419C26.4252 12.3146 26.5446 11.701 26.7832 11.201C27.0247 10.6982 27.35 10.3189 27.7591 10.0632C28.1681 9.80469 28.6241 9.67543 29.1269 9.67543C29.5105 9.67543 29.8258 9.74077 30.073 9.87145C30.3201 9.99929 30.5162 10.1541 30.661 10.3359C30.8059 10.5149 30.9181 10.6839 30.9977 10.843H31.0616V7.57883H32.6085V16.3061H31.0914V15.2749H30.9977C30.9181 15.4339 30.8031 15.603 30.6525 15.782C30.5019 15.9581 30.3031 16.1087 30.0559 16.2337C29.8088 16.3587 29.4977 16.4212 29.1227 16.4212ZM29.5531 15.1555C29.8798 15.1555 30.1582 15.0675 30.3883 14.8913C30.6184 14.7124 30.7931 14.4638 30.9125 14.1456C31.0318 13.8274 31.0914 13.4567 31.0914 13.0334C31.0914 12.6101 31.0318 12.2422 30.9125 11.9297C30.796 11.6172 30.6227 11.3743 30.3926 11.201C30.1653 11.0277 29.8855 10.9411 29.5531 10.9411C29.2093 10.9411 28.9224 11.0305 28.6923 11.2095C28.4622 11.3885 28.2889 11.6357 28.1724 11.951C28.0559 12.2663 27.9977 12.6271 27.9977 13.0334C27.9977 13.4425 28.0559 13.8075 28.1724 14.1286C28.2917 14.4467 28.4664 14.6982 28.6966 14.8828C28.9295 15.0646 29.215 15.1555 29.5531 15.1555Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.3184 16.3061V7.57883H35.8611V10.843H35.925C36.0045 10.6839 36.1167 10.5149 36.2616 10.3359C36.4065 10.1541 36.6025 9.99929 36.8497 9.87145C37.0969 9.74077 37.4122 9.67543 37.7957 9.67543C38.3014 9.67543 38.7574 9.80469 39.1636 10.0632C39.5727 10.3189 39.8966 10.6982 40.1352 11.201C40.3767 11.701 40.4974 12.3146 40.4974 13.0419C40.4974 13.7607 40.3795 14.3714 40.1437 14.8743C39.9079 15.3771 39.5869 15.7607 39.1807 16.0249C38.7744 16.2891 38.3142 16.4212 37.8 16.4212C37.425 16.4212 37.1139 16.3587 36.8667 16.2337C36.6196 16.1087 36.4207 15.9581 36.2701 15.782C36.1224 15.603 36.0074 15.4339 35.925 15.2749H35.8355V16.3061H34.3184ZM35.8312 13.0334C35.8312 13.4567 35.8909 13.8274 36.0102 14.1456C36.1324 14.4638 36.3071 14.7124 36.5344 14.8913C36.7645 15.0675 37.0429 15.1555 37.3696 15.1555C37.7105 15.1555 37.996 15.0646 38.2261 14.8828C38.4562 14.6982 38.6295 14.4467 38.746 14.1286C38.8653 13.8075 38.925 13.4425 38.925 13.0334C38.925 12.6271 38.8667 12.2663 38.7503 11.951C38.6338 11.6357 38.4605 11.3885 38.2304 11.2095C38.0003 11.0305 37.7133 10.9411 37.3696 10.9411C37.04 10.9411 36.7602 11.0277 36.5301 11.201C36.3 11.3743 36.1253 11.6172 36.0059 11.9297C35.8895 12.2422 35.8312 12.6101 35.8312 13.0334Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.0753 9.76065V10.9538H41.3125V9.76065H45.0753ZM42.2415 8.19247H43.7841V14.3374C43.7841 14.5447 43.8153 14.7038 43.8778 14.8146C43.9432 14.9226 44.0284 14.9964 44.1335 15.0362C44.2386 15.076 44.3551 15.0959 44.483 15.0959C44.5795 15.0959 44.6676 15.0888 44.7472 15.0746C44.8295 15.0604 44.892 15.0476 44.9347 15.0362L45.1946 16.2422C45.1122 16.2706 44.9943 16.3018 44.8409 16.3359C44.6903 16.37 44.5057 16.3899 44.2869 16.3956C43.9006 16.407 43.5526 16.3487 43.2429 16.2209C42.9332 16.0902 42.6875 15.8885 42.5057 15.6158C42.3267 15.343 42.2386 15.0021 42.2415 14.593V8.19247Z\",\n    fill: \"white\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgDbt);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/dbt.0ee428bd7bccd9dd4e1be9543937a9ad.svg\";","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgDuckdb = function SvgDuckdb(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 65,\n    height: 24,\n    viewBox: \"8 0 65 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.5898 5.5C10.9426 5.5 8 8.41667 8 12C8 15.5833 10.9426 18.5 14.5898 18.5C18.2369 18.5 21.1795 15.5833 21.1795 12C21.1795 8.41667 18.2369 5.5 14.5898 5.5ZM13.2221 14.7083C11.7301 14.7083 10.4867 13.5 10.4867 12C10.4867 10.5 11.7301 9.29167 13.2221 9.29167C14.7141 9.29167 15.9575 10.5 15.9575 12C15.9575 13.5 14.7141 14.7083 13.2221 14.7083ZM18.1126 12.9583H16.8278V11.0417H18.1126C18.6514 11.0417 19.1073 11.4583 19.1073 12C19.1073 12.5417 18.6514 12.9583 18.1126 12.9583Z\",\n    fill: \"#171615\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.3349 16H26.3775V7.27273H29.3945C30.261 7.27273 31.0053 7.44744 31.6275 7.79688C32.2525 8.14347 32.7326 8.64205 33.0678 9.29261C33.403 9.94318 33.5707 10.7216 33.5707 11.6278C33.5707 12.5369 33.4016 13.3182 33.0636 13.9716C32.7283 14.625 32.244 15.1264 31.6104 15.4759C30.9797 15.8253 30.2212 16 29.3349 16ZM27.9584 14.6321H29.2582C29.8661 14.6321 30.3732 14.5213 30.7795 14.2997C31.1857 14.0753 31.4911 13.7415 31.6957 13.2983C31.9002 12.8523 32.0025 12.2955 32.0025 11.6278C32.0025 10.9602 31.9002 10.4062 31.6957 9.96591C31.4911 9.52273 31.1886 9.19176 30.788 8.97301C30.3903 8.75142 29.8959 8.64062 29.305 8.64062H27.9584V14.6321ZM39.1744 13.2472V9.45455H40.7171V16H39.2213V14.8366H39.1531C39.0054 15.2031 38.7625 15.5028 38.4244 15.7358C38.0892 15.9687 37.6759 16.0852 37.1844 16.0852C36.7554 16.0852 36.3761 15.9901 36.0466 15.7997C35.7199 15.6065 35.4642 15.3267 35.2796 14.9602C35.0949 14.5909 35.0026 14.1449 35.0026 13.6222V9.45455H36.5452V13.3835C36.5452 13.7983 36.6588 14.1278 36.8861 14.3722C37.1134 14.6165 37.4117 14.7386 37.781 14.7386C38.0082 14.7386 38.2284 14.6832 38.4415 14.5724C38.6546 14.4616 38.8293 14.2969 38.9656 14.0781C39.1048 13.8565 39.1744 13.5795 39.1744 13.2472ZM45.1564 16.1278C44.503 16.1278 43.9419 15.9844 43.4732 15.6974C43.0073 15.4105 42.6479 15.0142 42.3951 14.5085C42.1451 14 42.0201 13.4148 42.0201 12.7528C42.0201 12.0881 42.1479 11.5014 42.4036 10.9929C42.6593 10.4815 43.0201 10.0838 43.486 9.79972C43.9547 9.51278 44.5087 9.36932 45.1479 9.36932C45.6792 9.36932 46.1493 9.46733 46.5584 9.66335C46.9703 9.85653 47.2985 10.1307 47.5428 10.4858C47.7871 10.8381 47.9263 11.25 47.9604 11.7216H46.486C46.4263 11.4062 46.2843 11.1435 46.0598 10.9332C45.8382 10.7202 45.5414 10.6136 45.1692 10.6136C44.8539 10.6136 44.5769 10.6989 44.3382 10.8693C44.0996 11.0369 43.9135 11.2784 43.78 11.5938C43.6493 11.9091 43.584 12.2869 43.584 12.7273C43.584 13.1733 43.6493 13.5568 43.78 13.8778C43.9107 14.196 44.0939 14.4418 44.3297 14.6151C44.5684 14.7855 44.8482 14.8707 45.1692 14.8707C45.3965 14.8707 45.5996 14.8281 45.7786 14.7429C45.9604 14.6548 46.1124 14.5284 46.2345 14.3636C46.3567 14.1989 46.4405 13.9986 46.486 13.7628H47.9604C47.9235 14.2259 47.7871 14.6364 47.5513 14.9943C47.3155 15.3494 46.9945 15.6278 46.5882 15.8295C46.182 16.0284 45.7047 16.1278 45.1564 16.1278ZM50.6313 13.946L50.627 12.0838H50.8742L53.2265 9.45455H55.029L52.1356 12.6761H51.816L50.6313 13.946ZM49.225 16V7.27273H50.7677V16H49.225ZM53.333 16L51.2023 13.0213L52.2421 11.9347L55.1782 16H53.333ZM59.0806 16H56.1232V7.27273H59.1403C60.0067 7.27273 60.7511 7.44744 61.3732 7.79688C61.9982 8.14347 62.4783 8.64205 62.8136 9.29261C63.1488 9.94318 63.3164 10.7216 63.3164 11.6278C63.3164 12.5369 63.1474 13.3182 62.8093 13.9716C62.4741 14.625 61.9897 15.1264 61.3562 15.4759C60.7255 15.8253 59.967 16 59.0806 16ZM57.7042 14.6321H59.0039C59.6119 14.6321 60.119 14.5213 60.5252 14.2997C60.9315 14.0753 61.2369 13.7415 61.4414 13.2983C61.646 12.8523 61.7482 12.2955 61.7482 11.6278C61.7482 10.9602 61.646 10.4062 61.4414 9.96591C61.2369 9.52273 60.9343 9.19176 60.5337 8.97301C60.136 8.75142 59.6417 8.64062 59.0508 8.64062H57.7042V14.6321ZM64.8165 16V7.27273H68.1574C68.7881 7.27273 69.3122 7.37216 69.7298 7.57102C70.1503 7.76705 70.4642 8.03551 70.6716 8.37642C70.8818 8.71733 70.9869 9.10369 70.9869 9.53551C70.9869 9.89062 70.9188 10.1946 70.7824 10.4474C70.646 10.6974 70.4628 10.9006 70.2327 11.0568C70.0026 11.2131 69.7455 11.3253 69.4614 11.3935V11.4787C69.771 11.4957 70.0679 11.5909 70.352 11.7642C70.6389 11.9347 70.8733 12.1761 71.0551 12.4886C71.237 12.8011 71.3279 13.179 71.3279 13.6222C71.3279 14.0739 71.2185 14.4801 70.9997 14.8409C70.781 15.1989 70.4514 15.4815 70.0111 15.6889C69.5708 15.8963 69.0168 16 68.3492 16H64.8165ZM66.3975 14.679H68.0977C68.6716 14.679 69.085 14.5696 69.3378 14.3509C69.5935 14.1293 69.7213 13.8452 69.7213 13.4986C69.7213 13.2401 69.6574 13.0071 69.5296 12.7997C69.4017 12.5895 69.2199 12.4247 68.9841 12.3054C68.7483 12.1832 68.4671 12.1222 68.1404 12.1222H66.3975V14.679ZM66.3975 10.9844H67.9614C68.2341 10.9844 68.4798 10.9347 68.6986 10.8352C68.9173 10.733 69.0892 10.5895 69.2142 10.4048C69.3421 10.2173 69.406 9.99574 69.406 9.74006C69.406 9.40199 69.2867 9.12358 69.048 8.90483C68.8122 8.68608 68.4614 8.5767 67.9955 8.5767H66.3975V10.9844Z\",\n    fill: \"#171615\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgDuckdb);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/duckdb.fcda6239d3aa209b270aba74764efe42.svg\";","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgFivetran = function SvgFivetran(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 60,\n    height: 13,\n    viewBox: \"0 0 60 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.11631 6.5068H8.42157C8.47316 6.5068 8.52263 6.4863 8.55911 6.44982C8.59559 6.41334 8.61609 6.36387 8.61609 6.31228C8.61599 6.28558 8.6107 6.25915 8.60053 6.23446L6.35573 0.124492C6.34187 0.088543 6.31765 0.0575211 6.28613 0.0353571C6.25462 0.013193 6.21723 0.000888257 6.17871 0H4.86957C4.81798 0 4.76851 0.0204912 4.73203 0.0569714C4.69555 0.0934516 4.67505 0.142932 4.67505 0.194523C4.67508 0.217079 4.67902 0.239458 4.68672 0.26066L6.93346 6.3862C6.9483 6.42234 6.97369 6.45317 7.0063 6.47468C7.03891 6.49619 7.07725 6.50738 7.11631 6.5068V6.5068Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.885 13H8.19026C8.24185 13 8.29132 12.9795 8.3278 12.943C8.36428 12.9065 8.38478 12.8571 8.38478 12.8055C8.38475 12.7829 8.3808 12.7605 8.37311 12.7393L3.74539 0.128398C3.73141 0.0921465 3.7069 0.060918 3.675 0.038729C3.6431 0.0165401 3.60529 0.00441078 3.56643 0.00390625H2.26313C2.21154 0.00390625 2.16206 0.0243975 2.12558 0.0608777C2.0891 0.0973578 2.0686 0.146839 2.0686 0.198429C2.06863 0.220985 2.07258 0.243364 2.08027 0.264567L6.70799 12.8775C6.72215 12.913 6.7465 12.9437 6.77799 12.9655C6.80948 12.9873 6.84671 12.9993 6.885 13Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.31336 13H5.61666C5.66566 13.0002 5.71292 12.9818 5.74899 12.9487C5.78505 12.9155 5.80726 12.8699 5.81118 12.8211C5.81111 12.7953 5.80718 12.7698 5.79951 12.7452L3.54694 6.62938C3.53308 6.59343 3.50885 6.5624 3.47734 6.54024C3.44582 6.51808 3.40843 6.50577 3.36991 6.50488H2.05883C2.00929 6.50786 1.96276 6.52966 1.92876 6.56583C1.89477 6.60199 1.87589 6.64978 1.87598 6.69941C1.87592 6.7207 1.87988 6.74183 1.88765 6.76165L4.13051 12.8794C4.14535 12.9156 4.17072 12.9464 4.20333 12.9679C4.23595 12.9894 4.27429 13.0006 4.31336 13Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.27386 0.266514L8.32623 3.12795C8.34009 3.1639 8.36431 3.19493 8.39582 3.21709C8.42734 3.23925 8.46473 3.25156 8.50325 3.25245H9.80266C9.85425 3.25245 9.90373 3.23195 9.94021 3.19547C9.97669 3.15899 9.99719 3.10951 9.99719 3.05792C9.99716 3.03537 9.99321 3.01298 9.98551 2.99178L8.93315 0.128398C8.91929 0.0924493 8.89507 0.0614274 8.86355 0.0392633C8.83204 0.0170993 8.79464 0.00479451 8.75613 0.00390625H7.45087C7.39928 0.00390625 7.34981 0.0243975 7.31333 0.0608777C7.27684 0.0973578 7.25635 0.146839 7.25635 0.198429C7.258 0.221999 7.26394 0.245071 7.27386 0.266514V0.266514Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.90704 13H3.21035C3.26194 13 3.31142 12.9795 3.3479 12.943C3.38438 12.9065 3.40488 12.857 3.40488 12.8055C3.40485 12.7829 3.4009 12.7605 3.39321 12.7393L2.335 9.87009C2.32101 9.83384 2.2965 9.80262 2.2646 9.78043C2.23271 9.75824 2.19489 9.74611 2.15604 9.74561H0.854679C0.803089 9.74561 0.753614 9.76609 0.717134 9.80257C0.680653 9.83905 0.660156 9.88854 0.660156 9.94013C0.660227 9.96331 0.664172 9.98632 0.671827 10.0082L1.72419 12.8774C1.73873 12.9139 1.76399 12.9452 1.79663 12.9671C1.82927 12.9889 1.86776 13.0004 1.90704 13V13Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.9973 11.0085V2.28125H19.5882V3.60653H15.5783V5.97585H19.2047V7.30114H15.5783V11.0085H13.9973Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.9583 11.0085V4.46307H22.501V11.0085H20.9583ZM21.7339 3.53409C21.4896 3.53409 21.2794 3.45312 21.1032 3.29119C20.9271 3.12642 20.839 2.92898 20.839 2.69886C20.839 2.46591 20.9271 2.26847 21.1032 2.10653C21.2794 1.94176 21.4896 1.85938 21.7339 1.85938C21.9811 1.85938 22.1913 1.94176 22.3646 2.10653C22.5407 2.26847 22.6288 2.46591 22.6288 2.69886C22.6288 2.92898 22.5407 3.12642 22.3646 3.29119C22.1913 3.45312 21.9811 3.53409 21.7339 3.53409Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.9318 4.46307L27.6008 11.0085H25.8963L23.5653 4.46307H25.2102L26.7145 9.32528H26.7827L28.2912 4.46307H29.9318Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.6723 11.1364C33.0161 11.1364 32.4493 11 31.972 10.7273C31.4976 10.4517 31.1325 10.0625 30.8768 9.55966C30.6212 9.05398 30.4933 8.45881 30.4933 7.77415C30.4933 7.10085 30.6212 6.50994 30.8768 6.00142C31.1354 5.49006 31.4962 5.09233 31.9592 4.80824C32.4223 4.52131 32.9663 4.37784 33.5913 4.37784C33.9947 4.37784 34.3754 4.44318 34.7334 4.57386C35.0942 4.7017 35.4124 4.90057 35.6879 5.17045C35.9663 5.44034 36.1851 5.78409 36.3442 6.2017C36.5033 6.61648 36.5828 7.1108 36.5828 7.68466V8.15767H31.2178V7.1179H35.1041C35.1013 6.82244 35.0374 6.55966 34.9124 6.32955C34.7874 6.09659 34.6126 5.91335 34.3882 5.77983C34.1666 5.64631 33.9081 5.57955 33.6126 5.57955C33.2973 5.57955 33.0203 5.65625 32.7817 5.80966C32.543 5.96023 32.357 6.15909 32.2234 6.40625C32.0928 6.65057 32.026 6.91903 32.0232 7.21165V8.11932C32.0232 8.5 32.0928 8.8267 32.232 9.09943C32.3712 9.36932 32.5658 9.5767 32.8158 9.72159C33.0658 9.86364 33.3584 9.93466 33.6936 9.93466C33.918 9.93466 34.1212 9.90341 34.303 9.84091C34.4848 9.77557 34.6425 9.6804 34.776 9.5554C34.9095 9.4304 35.0104 9.27557 35.0786 9.09091L36.5189 9.25284C36.428 9.63352 36.2547 9.96591 35.999 10.25C35.7462 10.5312 35.4223 10.75 35.0274 10.9062C34.6325 11.0597 34.1808 11.1364 33.6723 11.1364Z\",\n    fill: \"white\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.1543 4.46307V5.65625H37.3915V4.46307H41.1543ZM38.3205 2.89489H39.8631V9.03977C39.8631 9.24716 39.8943 9.40625 39.9568 9.51705C40.0222 9.625 40.1074 9.69886 40.2125 9.73864C40.3176 9.77841 40.4341 9.7983 40.562 9.7983C40.6585 9.7983 40.7466 9.79119 40.8262 9.77699C40.9085 9.76278 40.971 9.75 41.0137 9.73864L41.2736 10.9446C41.1912 10.973 41.0733 11.0043 40.9199 11.0384C40.7693 11.0724 40.5847 11.0923 40.3659 11.098C39.9796 11.1094 39.6316 11.0511 39.3219 10.9233C39.0122 10.7926 38.7665 10.5909 38.5847 10.3182C38.4057 10.0455 38.3176 9.70455 38.3205 9.29545V2.89489Z\",\n    fill: \"white\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.4424 11.0085V4.46307H43.9381V5.55398H44.0063C44.1256 5.17614 44.3302 4.88494 44.6199 4.6804C44.9125 4.47301 45.2463 4.36932 45.6213 4.36932C45.7066 4.36932 45.8017 4.37358 45.9069 4.3821C46.0148 4.38778 46.1043 4.39773 46.1753 4.41193V5.83097C46.11 5.80824 46.0063 5.78835 45.8642 5.77131C45.725 5.75142 45.5901 5.74148 45.4594 5.74148C45.1782 5.74148 44.9253 5.80256 44.7009 5.92472C44.4793 6.04403 44.3046 6.21023 44.1767 6.4233C44.0489 6.63636 43.985 6.8821 43.985 7.16051V11.0085H42.4424Z\",\n    fill: \"white\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.9645 11.1406C48.5497 11.1406 48.1761 11.0668 47.8437 10.919C47.5142 10.7685 47.2528 10.5469 47.0596 10.2543C46.8693 9.96165 46.7741 9.60085 46.7741 9.17188C46.7741 8.80256 46.8423 8.49716 46.9787 8.25568C47.115 8.0142 47.3011 7.82102 47.5369 7.67614C47.7727 7.53125 48.0383 7.42188 48.3338 7.34801C48.6321 7.27131 48.9403 7.21591 49.2585 7.18182C49.642 7.14205 49.9531 7.10653 50.1917 7.07528C50.4304 7.04119 50.6037 6.99006 50.7116 6.92188C50.8224 6.85085 50.8778 6.74148 50.8778 6.59375V6.56818C50.8778 6.24716 50.7827 5.99858 50.5923 5.82244C50.402 5.64631 50.1278 5.55824 49.7699 5.55824C49.392 5.55824 49.0923 5.64063 48.8707 5.8054C48.652 5.97017 48.5042 6.16477 48.4275 6.3892L46.9872 6.18466C47.1008 5.78693 47.2883 5.45455 47.5497 5.1875C47.8111 4.91761 48.1307 4.71591 48.5085 4.58239C48.8863 4.44602 49.304 4.37784 49.7613 4.37784C50.0767 4.37784 50.3906 4.41477 50.7031 4.48864C51.0156 4.5625 51.3011 4.68466 51.5596 4.85511C51.8182 5.02273 52.0256 5.25142 52.1818 5.54119C52.3409 5.83097 52.4204 6.19318 52.4204 6.62784V11.0085H50.9375V10.1094H50.8863C50.7926 10.2912 50.6605 10.4616 50.49 10.6207C50.3224 10.777 50.1108 10.9034 49.8551 11C49.6023 11.0938 49.3054 11.1406 48.9645 11.1406ZM49.365 10.0071C49.6747 10.0071 49.9432 9.94602 50.1704 9.82386C50.3977 9.69886 50.5724 9.53409 50.6946 9.32955C50.8196 9.125 50.8821 8.90199 50.8821 8.66051V7.8892C50.8338 7.92898 50.7514 7.96591 50.6349 8C50.5213 8.03409 50.3935 8.06392 50.2514 8.08949C50.1094 8.11506 49.9687 8.13778 49.8295 8.15767C49.6903 8.17756 49.5696 8.1946 49.4673 8.20881C49.2372 8.24006 49.0312 8.29119 48.8494 8.36222C48.6676 8.43324 48.5241 8.53267 48.419 8.66051C48.3139 8.78551 48.2613 8.94744 48.2613 9.14631C48.2613 9.4304 48.365 9.64489 48.5724 9.78977C48.7798 9.93466 49.044 10.0071 49.365 10.0071Z\",\n    fill: \"white\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.5122 7.1733V11.0085H53.9695V4.46307H55.444V5.57528H55.5207C55.6712 5.20881 55.9113 4.91761 56.2408 4.7017C56.5732 4.4858 56.9837 4.37784 57.4724 4.37784C57.9241 4.37784 58.3176 4.47443 58.6528 4.66761C58.9908 4.8608 59.2522 5.14063 59.4369 5.5071C59.6244 5.87358 59.7167 6.31818 59.7139 6.84091V11.0085H58.1712V7.07955C58.1712 6.64205 58.0576 6.29972 57.8303 6.05256C57.6059 5.8054 57.2948 5.68182 56.8971 5.68182C56.6272 5.68182 56.3872 5.74148 56.1769 5.8608C55.9695 5.97727 55.8062 6.14631 55.6869 6.3679C55.5704 6.58949 55.5122 6.85795 55.5122 7.1733Z\",\n    fill: \"white\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgFivetran);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/fivetran.ab8cd15a3801b1eba1e1797168340c79.svg\";","var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgGooglesheets = function SvgGooglesheets(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 99,\n    height: 24,\n    viewBox: \"8 0 99 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.5314 17.7631C17.5312 17.9584 17.4519 18.1458 17.3109 18.2839C17.1698 18.422 16.9786 18.4997 16.7792 18.4999H8.75282C8.55337 18.4999 8.36207 18.4223 8.22092 18.2843C8.07977 18.1463 8.00032 17.959 8 17.7637V6.25709C7.99992 6.16024 8.01934 6.06432 8.05714 5.97482C8.09495 5.88533 8.1504 5.80401 8.22032 5.73553C8.29024 5.66704 8.37327 5.61273 8.46464 5.5757C8.55601 5.53867 8.65394 5.51965 8.75282 5.51973H13.9039L17.5314 9.14313V17.7631Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.5314 9.13749H14.6639C14.4645 9.13733 14.2732 9.05966 14.1322 8.92152C13.9912 8.78338 13.9119 8.59607 13.9117 8.40072V5.5L17.5314 9.13749Z\",\n    fill: \"#8ED1B1\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M15.2365 16.107H10.2766V11.8948H15.2365V16.107ZM13.0649 12.5024V13.2398H14.6269V12.5036L13.0649 12.5024ZM13.0649 13.7042V14.4086H14.6269V13.7006L13.0649 13.7042ZM13.0649 14.8578V15.51H14.6269V14.8542L13.0649 14.8578ZM12.4517 15.5065V14.8542H10.8903V15.5065H12.4517ZM12.4517 14.401V13.7006H10.8903V14.4045L12.4517 14.401ZM12.4517 13.2474V12.5024H10.8903V13.2398L12.4517 13.2474Z\",\n    fill: \"#23A566\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.3467 10.0597C28.2757 9.82955 28.1777 9.62358 28.0527 9.44176C27.9305 9.2571 27.7828 9.09943 27.6095 8.96875C27.4391 8.83807 27.243 8.74006 27.0214 8.67472C26.7999 8.60653 26.5584 8.57244 26.297 8.57244C25.8283 8.57244 25.4107 8.69034 25.0442 8.92614C24.6777 9.16193 24.3893 9.50852 24.1791 9.96591C23.9717 10.4205 23.868 10.9744 23.868 11.6278C23.868 12.2869 23.9717 12.8452 24.1791 13.3026C24.3865 13.7599 24.6749 14.108 25.0442 14.3466C25.4135 14.5824 25.8425 14.7003 26.3311 14.7003C26.7743 14.7003 27.1578 14.6151 27.4817 14.4446C27.8084 14.2741 28.0598 14.0327 28.2359 13.7202C28.4121 13.4048 28.5001 13.0355 28.5001 12.6122L28.8581 12.6676H26.4888V11.4318H30.03V12.4801C30.03 13.2273 29.8709 13.8736 29.5527 14.419C29.2345 14.9645 28.797 15.3849 28.2402 15.6804C27.6834 15.973 27.0442 16.1193 26.3226 16.1193C25.5186 16.1193 24.8126 15.9389 24.2047 15.5781C23.5996 15.2145 23.1266 14.6989 22.7857 14.0312C22.4476 13.3608 22.2786 12.5653 22.2786 11.6449C22.2786 10.9403 22.378 10.3111 22.5768 9.7571C22.7786 9.20312 23.0598 8.73295 23.4206 8.34659C23.7814 7.95739 24.2047 7.66193 24.6905 7.46023C25.1763 7.25568 25.7047 7.15341 26.2757 7.15341C26.7587 7.15341 27.2089 7.22443 27.6266 7.36648C28.0442 7.50568 28.4149 7.70455 28.7388 7.96307C29.0655 8.22159 29.3339 8.52841 29.5442 8.88352C29.7544 9.23864 29.8922 9.63068 29.9575 10.0597H28.3467ZM34.3436 16.1278C33.7044 16.1278 33.1504 15.9872 32.6817 15.706C32.2129 15.4247 31.8493 15.0312 31.5908 14.5256C31.3351 14.0199 31.2073 13.429 31.2073 12.7528C31.2073 12.0767 31.3351 11.4844 31.5908 10.9759C31.8493 10.4673 32.2129 10.0724 32.6817 9.79119C33.1504 9.50994 33.7044 9.36932 34.3436 9.36932C34.9828 9.36932 35.5368 9.50994 36.0056 9.79119C36.4743 10.0724 36.8365 10.4673 37.0922 10.9759C37.3507 11.4844 37.48 12.0767 37.48 12.7528C37.48 13.429 37.3507 14.0199 37.0922 14.5256C36.8365 15.0312 36.4743 15.4247 36.0056 15.706C35.5368 15.9872 34.9828 16.1278 34.3436 16.1278ZM34.3522 14.892C34.6987 14.892 34.9885 14.7969 35.2215 14.6065C35.4544 14.4134 35.6277 14.1548 35.7414 13.831C35.8578 13.5071 35.9161 13.1463 35.9161 12.7486C35.9161 12.348 35.8578 11.9858 35.7414 11.6619C35.6277 11.3352 35.4544 11.0753 35.2215 10.8821C34.9885 10.6889 34.6987 10.5923 34.3522 10.5923C33.997 10.5923 33.7016 10.6889 33.4658 10.8821C33.2328 11.0753 33.0581 11.3352 32.9416 11.6619C32.828 11.9858 32.7712 12.348 32.7712 12.7486C32.7712 13.1463 32.828 13.5071 32.9416 13.831C33.0581 14.1548 33.2328 14.4134 33.4658 14.6065C33.7016 14.7969 33.997 14.892 34.3522 14.892ZM41.6424 16.1278C41.0032 16.1278 40.4492 15.9872 39.9804 15.706C39.5117 15.4247 39.1481 15.0312 38.8895 14.5256C38.6338 14.0199 38.506 13.429 38.506 12.7528C38.506 12.0767 38.6338 11.4844 38.8895 10.9759C39.1481 10.4673 39.5117 10.0724 39.9804 9.79119C40.4492 9.50994 41.0032 9.36932 41.6424 9.36932C42.2816 9.36932 42.8356 9.50994 43.3043 9.79119C43.7731 10.0724 44.1353 10.4673 44.3909 10.9759C44.6495 11.4844 44.7787 12.0767 44.7787 12.7528C44.7787 13.429 44.6495 14.0199 44.3909 14.5256C44.1353 15.0312 43.7731 15.4247 43.3043 15.706C42.8356 15.9872 42.2816 16.1278 41.6424 16.1278ZM41.6509 14.892C41.9975 14.892 42.2873 14.7969 42.5202 14.6065C42.7532 14.4134 42.9265 14.1548 43.0401 13.831C43.1566 13.5071 43.2148 13.1463 43.2148 12.7486C43.2148 12.348 43.1566 11.9858 43.0401 11.6619C42.9265 11.3352 42.7532 11.0753 42.5202 10.8821C42.2873 10.6889 41.9975 10.5923 41.6509 10.5923C41.2958 10.5923 41.0003 10.6889 40.7645 10.8821C40.5316 11.0753 40.3569 11.3352 40.2404 11.6619C40.1267 11.9858 40.0699 12.348 40.0699 12.7486C40.0699 13.1463 40.1267 13.5071 40.2404 13.831C40.3569 14.1548 40.5316 14.4134 40.7645 14.6065C41.0003 14.7969 41.2958 14.892 41.6509 14.892ZM48.9326 18.5909C48.3786 18.5909 47.9028 18.5156 47.505 18.3651C47.1073 18.2173 46.7877 18.0185 46.5462 17.7685C46.3047 17.5185 46.1371 17.2415 46.0434 16.9375L47.4326 16.6009C47.4951 16.7287 47.586 16.8551 47.7053 16.9801C47.8246 17.108 47.9851 17.2131 48.1868 17.2955C48.3914 17.3807 48.6485 17.4233 48.9582 17.4233C49.3957 17.4233 49.7579 17.3168 50.0448 17.1037C50.3317 16.8935 50.4752 16.5469 50.4752 16.0639V14.8239H50.3985C50.319 14.983 50.2025 15.1463 50.0491 15.3139C49.8985 15.4815 49.6982 15.6222 49.4482 15.7358C49.2011 15.8494 48.89 15.9062 48.515 15.9062C48.0121 15.9062 47.5562 15.7884 47.1471 15.5526C46.7408 15.3139 46.417 14.9588 46.1755 14.4872C45.9368 14.0128 45.8175 13.419 45.8175 12.706C45.8175 11.9872 45.9368 11.3807 46.1755 10.8864C46.417 10.3892 46.7422 10.0128 47.1513 9.7571C47.5604 9.49858 48.0164 9.36932 48.5192 9.36932C48.9028 9.36932 49.2181 9.43466 49.4653 9.56534C49.7153 9.69318 49.9141 9.84801 50.0618 10.0298C50.2096 10.2088 50.3218 10.3778 50.3985 10.5369H50.4837V9.45455H52.005V16.1065C52.005 16.6662 51.8715 17.1293 51.6045 17.4957C51.3374 17.8622 50.9724 18.1364 50.5093 18.3182C50.0462 18.5 49.5207 18.5909 48.9326 18.5909ZM48.9454 14.696C49.2721 14.696 49.5505 14.6165 49.7806 14.4574C50.0107 14.2983 50.1854 14.0696 50.3047 13.7713C50.4241 13.473 50.4837 13.1151 50.4837 12.6974C50.4837 12.2855 50.4241 11.9247 50.3047 11.6151C50.1883 11.3054 50.015 11.0653 49.7849 10.8949C49.5576 10.7216 49.2778 10.6349 48.9454 10.6349C48.6016 10.6349 48.3147 10.7244 48.0846 10.9034C47.8545 11.0824 47.6812 11.3281 47.5647 11.6406C47.4482 11.9503 47.39 12.3026 47.39 12.6974C47.39 13.098 47.4482 13.4489 47.5647 13.75C47.684 14.0483 47.8587 14.2812 48.0888 14.4489C48.3218 14.6136 48.6073 14.696 48.9454 14.696ZM55.1266 7.27273V16H53.584V7.27273H55.1266ZM59.6085 16.1278C58.9523 16.1278 58.3855 15.9915 57.9083 15.7188C57.4338 15.4432 57.0688 15.054 56.8131 14.5511C56.5574 14.0455 56.4296 13.4503 56.4296 12.7656C56.4296 12.0923 56.5574 11.5014 56.8131 10.9929C57.0716 10.4815 57.4324 10.0838 57.8955 9.79972C58.3586 9.51278 58.9026 9.36932 59.5276 9.36932C59.931 9.36932 60.3117 9.43466 60.6696 9.56534C61.0304 9.69318 61.3486 9.89205 61.6242 10.1619C61.9026 10.4318 62.1213 10.7756 62.2804 11.1932C62.4395 11.608 62.5191 12.1023 62.5191 12.6761V13.1491H57.154V12.1094H61.0404C61.0375 11.8139 60.9736 11.5511 60.8486 11.321C60.7236 11.0881 60.5489 10.9048 60.3245 10.7713C60.1029 10.6378 59.8443 10.571 59.5489 10.571C59.2336 10.571 58.9566 10.6477 58.7179 10.8011C58.4793 10.9517 58.2932 11.1506 58.1597 11.3977C58.029 11.642 57.9622 11.9105 57.9594 12.2031V13.1108C57.9594 13.4915 58.029 13.8182 58.1682 14.0909C58.3074 14.3608 58.502 14.5682 58.752 14.7131C59.002 14.8551 59.2946 14.9261 59.6299 14.9261C59.8543 14.9261 60.0574 14.8949 60.2392 14.8324C60.4211 14.767 60.5787 14.6719 60.7122 14.5469C60.8458 14.4219 60.9466 14.267 61.0148 14.0824L62.4551 14.2443C62.3642 14.625 62.1909 14.9574 61.9353 15.2415C61.6824 15.5227 61.3586 15.7415 60.9637 15.8977C60.5688 16.0511 60.1171 16.1278 59.6085 16.1278ZM71.6077 9.67188C71.5679 9.29972 71.4003 9.00994 71.1048 8.80256C70.8122 8.59517 70.4315 8.49148 69.9628 8.49148C69.6332 8.49148 69.3506 8.54119 69.1148 8.64062C68.879 8.74006 68.6986 8.875 68.5736 9.04545C68.4486 9.21591 68.3847 9.41051 68.3818 9.62926C68.3818 9.81108 68.423 9.96875 68.5054 10.1023C68.5906 10.2358 68.7057 10.3494 68.8506 10.4432C68.9955 10.5341 69.156 10.6108 69.3321 10.6733C69.5082 10.7358 69.6858 10.7884 69.8648 10.831L70.683 11.0355C71.0125 11.1122 71.3293 11.2159 71.6332 11.3466C71.9401 11.4773 72.2142 11.642 72.4557 11.8409C72.7 12.0398 72.8932 12.2798 73.0352 12.5611C73.1773 12.8423 73.2483 13.1719 73.2483 13.5497C73.2483 14.0611 73.1176 14.5114 72.8562 14.9006C72.5949 15.2869 72.217 15.5895 71.7227 15.8082C71.2312 16.0241 70.6361 16.1321 69.9372 16.1321C69.2582 16.1321 68.6687 16.027 68.1687 15.8168C67.6716 15.6065 67.2824 15.2997 67.0011 14.8963C66.7227 14.4929 66.5722 14.0014 66.5494 13.4219H68.1048C68.1276 13.7259 68.2213 13.9787 68.3861 14.1804C68.5509 14.3821 68.7653 14.5327 69.0295 14.6321C69.2966 14.7315 69.5949 14.7812 69.9244 14.7812C70.2682 14.7812 70.5693 14.7301 70.8278 14.6278C71.0892 14.5227 71.2937 14.3778 71.4415 14.1932C71.5892 14.0057 71.6645 13.7869 71.6673 13.5369C71.6645 13.3097 71.5977 13.1222 71.467 12.9744C71.3364 12.8239 71.1531 12.6989 70.9173 12.5994C70.6844 12.4972 70.4116 12.4062 70.0991 12.3267L69.1062 12.071C68.3875 11.8864 67.8193 11.6065 67.4017 11.2315C66.9869 10.8537 66.7795 10.3523 66.7795 9.72727C66.7795 9.21307 66.9187 8.76278 67.1972 8.37642C67.4784 7.99006 67.8605 7.69034 68.3435 7.47727C68.8264 7.26136 69.3733 7.15341 69.9841 7.15341C70.6034 7.15341 71.146 7.26136 71.6119 7.47727C72.0807 7.69034 72.4486 7.98722 72.7156 8.3679C72.9827 8.74574 73.1205 9.1804 73.129 9.67188H71.6077ZM76.1301 12.1648V16H74.5875V7.27273H76.096V10.5668H76.1727C76.3262 10.1974 76.5634 9.90625 76.8844 9.69318C77.2083 9.47727 77.6202 9.36932 78.1202 9.36932C78.5747 9.36932 78.971 9.46449 79.3091 9.65483C79.6472 9.84517 79.9085 10.1236 80.0932 10.4901C80.2807 10.8565 80.3744 11.304 80.3744 11.8324V16H78.8318V12.071C78.8318 11.6307 78.7182 11.2884 78.4909 11.044C78.2665 10.7969 77.9512 10.6733 77.5449 10.6733C77.2722 10.6733 77.0279 10.733 76.8119 10.8523C76.5989 10.9687 76.4313 11.1378 76.3091 11.3594C76.1898 11.581 76.1301 11.8494 76.1301 12.1648ZM84.8426 16.1278C84.1863 16.1278 83.6196 15.9915 83.1423 15.7188C82.6679 15.4432 82.3028 15.054 82.0471 14.5511C81.7914 14.0455 81.6636 13.4503 81.6636 12.7656C81.6636 12.0923 81.7914 11.5014 82.0471 10.9929C82.3056 10.4815 82.6664 10.0838 83.1295 9.79972C83.5926 9.51278 84.1366 9.36932 84.7616 9.36932C85.165 9.36932 85.5457 9.43466 85.9037 9.56534C86.2645 9.69318 86.5826 9.89205 86.8582 10.1619C87.1366 10.4318 87.3554 10.7756 87.5145 11.1932C87.6735 11.608 87.7531 12.1023 87.7531 12.6761V13.1491H82.388V12.1094H86.2744C86.2716 11.8139 86.2076 11.5511 86.0826 11.321C85.9576 11.0881 85.7829 10.9048 85.5585 10.7713C85.3369 10.6378 85.0784 10.571 84.7829 10.571C84.4676 10.571 84.1906 10.6477 83.952 10.8011C83.7133 10.9517 83.5272 11.1506 83.3937 11.3977C83.263 11.642 83.1963 11.9105 83.1934 12.2031V13.1108C83.1934 13.4915 83.263 13.8182 83.4022 14.0909C83.5414 14.3608 83.736 14.5682 83.986 14.7131C84.236 14.8551 84.5287 14.9261 84.8639 14.9261C85.0883 14.9261 85.2914 14.8949 85.4733 14.8324C85.6551 14.767 85.8127 14.6719 85.9463 14.5469C86.0798 14.4219 86.1806 14.267 86.2488 14.0824L87.6892 14.2443C87.5983 14.625 87.425 14.9574 87.1693 15.2415C86.9164 15.5227 86.5926 15.7415 86.1977 15.8977C85.8028 16.0511 85.3511 16.1278 84.8426 16.1278ZM91.9538 16.1278C91.2976 16.1278 90.7308 15.9915 90.2535 15.7188C89.7791 15.4432 89.414 15.054 89.1584 14.5511C88.9027 14.0455 88.7748 13.4503 88.7748 12.7656C88.7748 12.0923 88.9027 11.5014 89.1584 10.9929C89.4169 10.4815 89.7777 10.0838 90.2407 9.79972C90.7038 9.51278 91.2478 9.36932 91.8728 9.36932C92.2763 9.36932 92.6569 9.43466 93.0149 9.56534C93.3757 9.69318 93.6939 9.89205 93.9694 10.1619C94.2478 10.4318 94.4666 10.7756 94.6257 11.1932C94.7848 11.608 94.8643 12.1023 94.8643 12.6761V13.1491H89.4993V12.1094H93.3856C93.3828 11.8139 93.3189 11.5511 93.1939 11.321C93.0689 11.0881 92.8942 10.9048 92.6697 10.7713C92.4481 10.6378 92.1896 10.571 91.8942 10.571C91.5788 10.571 91.3018 10.6477 91.0632 10.8011C90.8246 10.9517 90.6385 11.1506 90.505 11.3977C90.3743 11.642 90.3075 11.9105 90.3047 12.2031V13.1108C90.3047 13.4915 90.3743 13.8182 90.5135 14.0909C90.6527 14.3608 90.8473 14.5682 91.0973 14.7131C91.3473 14.8551 91.6399 14.9261 91.9751 14.9261C92.1996 14.9261 92.4027 14.8949 92.5845 14.8324C92.7663 14.767 92.924 14.6719 93.0575 14.5469C93.191 14.4219 93.2919 14.267 93.3601 14.0824L94.8004 14.2443C94.7095 14.625 94.5362 14.9574 94.2805 15.2415C94.0277 15.5227 93.7038 15.7415 93.3089 15.8977C92.914 16.0511 92.4623 16.1278 91.9538 16.1278ZM99.4358 9.45455V10.6477H95.673V9.45455H99.4358ZM96.602 7.88636H98.1446V14.0312C98.1446 14.2386 98.1759 14.3977 98.2384 14.5085C98.3037 14.6165 98.3889 14.6903 98.494 14.7301C98.5992 14.7699 98.7156 14.7898 98.8435 14.7898C98.9401 14.7898 99.0281 14.7827 99.1077 14.7685C99.1901 14.7543 99.2526 14.7415 99.2952 14.7301L99.5551 15.9361C99.4727 15.9645 99.3548 15.9957 99.2014 16.0298C99.0509 16.0639 98.8662 16.0838 98.6475 16.0895C98.2611 16.1009 97.9131 16.0426 97.6034 15.9148C97.2938 15.7841 97.048 15.5824 96.8662 15.3097C96.6872 15.0369 96.5992 14.696 96.602 14.2869V7.88636ZM105.803 11.1847L104.397 11.3381C104.357 11.196 104.288 11.0625 104.188 10.9375C104.092 10.8125 103.961 10.7116 103.796 10.6349C103.632 10.5582 103.43 10.5199 103.191 10.5199C102.87 10.5199 102.6 10.5895 102.382 10.7287C102.166 10.8679 102.059 11.0483 102.062 11.2699C102.059 11.4602 102.129 11.6151 102.271 11.7344C102.416 11.8537 102.654 11.9517 102.987 12.0284L104.103 12.267C104.722 12.4006 105.183 12.6122 105.484 12.902C105.788 13.1918 105.941 13.571 105.944 14.0398C105.941 14.4517 105.82 14.8153 105.582 15.1307C105.346 15.4432 105.018 15.6875 104.597 15.8636C104.177 16.0398 103.694 16.1278 103.149 16.1278C102.347 16.1278 101.703 15.9602 101.214 15.625C100.725 15.2869 100.434 14.8168 100.34 14.2145L101.845 14.0696C101.913 14.3651 102.058 14.5881 102.279 14.7386C102.501 14.8892 102.789 14.9645 103.144 14.9645C103.511 14.9645 103.805 14.8892 104.026 14.7386C104.251 14.5881 104.363 14.402 104.363 14.1804C104.363 13.9929 104.291 13.8381 104.146 13.7159C104.004 13.5937 103.782 13.5 103.481 13.4347L102.365 13.2003C101.737 13.0696 101.272 12.8494 100.971 12.5398C100.67 12.2273 100.521 11.8324 100.524 11.3551C100.521 10.9517 100.63 10.6023 100.852 10.3068C101.076 10.0085 101.387 9.77841 101.785 9.61648C102.186 9.4517 102.647 9.36932 103.17 9.36932C103.937 9.36932 104.541 9.53267 104.981 9.85938C105.424 10.1861 105.698 10.6278 105.803 11.1847Z\",\n    fill: \"white\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgGooglesheets);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/googlesheets.2cf7e53b57e40782a0d88c1177086a91.svg\";","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgJupyter = function SvgJupyter(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 13,\n    viewBox: \"0 0 56 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.2025 0.739428C10.209 0.892327 10.1705 1.04366 10.092 1.1742C10.0134 1.30474 9.89798 1.40927 9.76042 1.47376C9.62286 1.53824 9.46919 1.56035 9.31967 1.53694C9.16957 1.51342 9.02989 1.4457 8.91844 1.34244C8.80656 1.23874 8.72777 1.10432 8.69195 0.956034C8.65607 0.807817 8.66465 0.651798 8.71666 0.507741C8.76844 0.364464 8.86145 0.239704 8.98397 0.149158C9.10604 0.058938 9.25227 0.00723547 9.40392 0.000680834C9.60674 -0.00790018 9.80489 0.0649085 9.95466 0.203505C10.1044 0.342101 10.1934 0.534784 10.2022 0.739168L10.2025 0.739428Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.73262 9.83004C3.69138 9.83004 1.90886 9.08219 0.983154 7.97498C1.3277 8.96829 1.97023 9.829 2.82157 10.4382C3.67291 11.0475 4.69041 11.3744 5.73392 11.3744C6.77742 11.3744 7.79518 11.0472 8.64626 10.4382C9.49734 9.82926 10.1396 8.96829 10.4842 7.97498C9.55637 9.08219 7.77386 9.83004 5.73262 9.83004Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.73226 2.62881C7.7735 2.62881 9.55627 3.37692 10.4817 4.48387C10.1372 3.49055 9.49464 2.62985 8.6433 2.0206C7.79196 1.41135 6.77472 1.08423 5.73148 1.08423C4.68823 1.08423 3.67021 1.41135 2.81913 2.02034C1.96805 2.62933 1.32525 3.49029 0.980713 4.48361C1.90824 3.379 3.69101 2.62881 5.73226 2.62881Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.93046 11.983C2.93891 12.1755 2.89044 12.3663 2.79108 12.5314C2.69175 12.6962 2.54665 12.8278 2.37295 12.9089C2.19925 12.9901 2.00891 13.0182 1.81727 12.9885C1.62563 12.9589 1.45218 12.8736 1.31151 12.743C1.17083 12.6125 1.07176 12.4432 1.02625 12.2557C0.981204 12.0684 0.992236 11.8719 1.05798 11.6907C1.12377 11.5097 1.2413 11.3527 1.39602 11.2382C1.55074 11.1238 1.73484 11.0599 1.9257 11.0521C2.18131 11.0417 2.43016 11.1337 2.61894 11.3082C2.80762 11.4834 2.91956 11.726 2.93046 11.9832V11.983Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.21604 2.3782C1.10422 2.3834 0.992931 2.35427 0.89698 2.29551C0.801029 2.23674 0.72458 2.15041 0.677254 2.04822C0.629928 1.94602 0.614066 1.83109 0.631228 1.71928C0.648391 1.60746 0.698056 1.50293 0.773985 1.41972C0.849914 1.33651 0.948726 1.27775 1.05742 1.2507C1.16611 1.22366 1.28105 1.23042 1.38636 1.26942C1.49167 1.30843 1.5832 1.37786 1.64899 1.46965C1.72643 1.57661 1.76467 1.70697 1.75729 1.83882C1.7499 1.97066 1.69733 2.09594 1.60842 2.19357C1.50701 2.30539 1.36556 2.37143 1.21578 2.3782H1.21604Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.5327 3.30181H17.0753V10.2223C17.0753 10.6939 16.9858 11.0831 16.8068 11.3899C16.6278 11.6967 16.3693 11.9254 16.0312 12.076C15.6932 12.2265 15.2827 12.3018 14.7997 12.3018C14.7429 12.3018 14.6903 12.3004 14.642 12.2976C14.5937 12.2976 14.5412 12.2961 14.4844 12.2933V11.0362C14.527 11.039 14.5653 11.0405 14.5994 11.0405C14.6335 11.0433 14.669 11.0447 14.706 11.0447C15.0014 11.0447 15.2131 10.9723 15.3409 10.8274C15.4688 10.6853 15.5327 10.4765 15.5327 10.201V3.30181ZM16.2997 2.37284C16.0526 2.37284 15.8409 2.29187 15.6648 2.12994C15.4915 1.96517 15.4048 1.76772 15.4048 1.53761C15.4048 1.30465 15.4915 1.10721 15.6648 0.945279C15.8409 0.780506 16.0526 0.69812 16.2997 0.69812C16.544 0.69812 16.7528 0.780506 16.9261 0.945279C17.1023 1.10721 17.1903 1.30465 17.1903 1.53761C17.1903 1.76772 17.1023 1.96517 16.9261 2.12994C16.7528 2.29187 16.544 2.37284 16.2997 2.37284Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.8314 7.09443V3.30181H24.374V9.84727H22.8783V8.68392H22.8101C22.6624 9.05039 22.4195 9.35011 22.0814 9.58306C21.7462 9.81602 21.3328 9.9325 20.8414 9.9325C20.4124 9.9325 20.0331 9.83733 19.7036 9.64698C19.3769 9.4538 19.1212 9.17397 18.9365 8.8075C18.7519 8.43818 18.6595 7.99215 18.6595 7.46943V3.30181H20.2022V7.23079C20.2022 7.64556 20.3158 7.97511 20.5431 8.21943C20.7703 8.46375 21.0686 8.5859 21.4379 8.5859C21.6652 8.5859 21.8854 8.53051 22.0985 8.41971C22.3115 8.30892 22.4862 8.14414 22.6226 7.92539C22.7618 7.7038 22.8314 7.42681 22.8314 7.09443Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.9583 12.3018V3.30181H27.4753V4.3842H27.5648C27.6444 4.22511 27.7566 4.05607 27.9015 3.8771C28.0463 3.69528 28.2424 3.54045 28.4895 3.41261C28.7367 3.28193 29.052 3.21659 29.4356 3.21659C29.9412 3.21659 30.3972 3.34585 30.8034 3.60437C31.2125 3.86005 31.5364 4.23931 31.775 4.74215C32.0165 5.24215 32.1373 5.85579 32.1373 6.58306C32.1373 7.30181 32.0194 7.91261 31.7836 8.41545C31.5478 8.91829 31.2267 9.30181 30.8205 9.56602C30.4142 9.83022 29.954 9.96233 29.4398 9.96233C29.0648 9.96233 28.7537 9.89983 28.5066 9.77483C28.2594 9.64983 28.0606 9.49926 27.91 9.32312C27.7623 9.14414 27.6472 8.97511 27.5648 8.81602H27.5009V12.3018H25.9583ZM27.4711 6.57454C27.4711 6.99784 27.5307 7.36858 27.65 7.68676C27.7722 8.00494 27.9469 8.25352 28.1742 8.4325C28.4043 8.60863 28.6827 8.6967 29.0094 8.6967C29.3503 8.6967 29.6358 8.60579 29.8659 8.42397C30.0961 8.23931 30.2694 7.98789 30.3858 7.66971C30.5052 7.34869 30.5648 6.98363 30.5648 6.57454C30.5648 6.16829 30.5066 5.8075 30.3901 5.49215C30.2736 5.17681 30.1003 4.92965 29.8702 4.75068C29.6401 4.5717 29.3532 4.48221 29.0094 4.48221C28.6799 4.48221 28.4 4.56886 28.1699 4.74215C27.9398 4.91545 27.7651 5.15835 27.6458 5.47085C27.5293 5.78335 27.4711 6.15125 27.4711 6.57454Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.1924 12.3018C33.9822 12.3018 33.7876 12.2848 33.6086 12.2507C33.4324 12.2194 33.2918 12.1825 33.1867 12.1399L33.5447 10.9382C33.7691 11.0035 33.9694 11.0348 34.1455 11.0319C34.3216 11.0291 34.4765 10.9737 34.61 10.8657C34.7464 10.7606 34.8614 10.5845 34.9552 10.3373L35.0873 9.98363L32.7137 3.30181H34.3501L35.8586 8.245H35.9268L37.4395 3.30181H39.0802L36.4594 10.6399C36.3373 10.9865 36.1753 11.2833 35.9736 11.5305C35.7719 11.7805 35.5248 11.9708 35.2322 12.1015C34.9424 12.2351 34.5958 12.3018 34.1924 12.3018Z\",\n    fill: \"white\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.4141 3.30181V4.495H39.6513V3.30181H43.4141ZM40.5803 1.73363H42.1229V7.87852C42.1229 8.0859 42.1541 8.245 42.2166 8.35579C42.282 8.46375 42.3672 8.53761 42.4723 8.57738C42.5774 8.61715 42.6939 8.63704 42.8217 8.63704C42.9183 8.63704 43.0064 8.62994 43.0859 8.61573C43.1683 8.60153 43.2308 8.58875 43.2734 8.57738L43.5334 9.78335C43.451 9.81176 43.3331 9.84301 43.1797 9.8771C43.0291 9.91119 42.8445 9.93108 42.6257 9.93676C42.2394 9.94812 41.8913 9.88988 41.5817 9.76204C41.272 9.63136 41.0263 9.42965 40.8445 9.15693C40.6655 8.8842 40.5774 8.54329 40.5803 8.1342V1.73363Z\",\n    fill: \"white\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.5296 9.97511C46.8733 9.97511 46.3066 9.83875 45.8293 9.56602C45.3549 9.29045 44.9898 8.90125 44.7341 8.3984C44.4784 7.89272 44.3506 7.29755 44.3506 6.61289C44.3506 5.9396 44.4784 5.34869 44.7341 4.84017C44.9926 4.3288 45.3534 3.93107 45.8165 3.64698C46.2796 3.36005 46.8236 3.21659 47.4486 3.21659C47.852 3.21659 48.2327 3.28193 48.5907 3.41261C48.9514 3.54045 49.2696 3.73931 49.5452 4.0092C49.8236 4.27909 50.0424 4.62284 50.2014 5.04045C50.3605 5.45522 50.4401 5.94954 50.4401 6.5234V6.99642H45.075V5.95664H48.9614C48.9586 5.66119 48.8946 5.3984 48.7696 5.16829C48.6446 4.93534 48.4699 4.7521 48.2455 4.61858C48.0239 4.48505 47.7654 4.41829 47.4699 4.41829C47.1546 4.41829 46.8776 4.495 46.6389 4.6484C46.4003 4.79897 46.2142 4.99784 46.0807 5.245C45.95 5.48931 45.8833 5.75778 45.8804 6.05039V6.95806C45.8804 7.33874 45.95 7.66545 46.0892 7.93818C46.2284 8.20806 46.423 8.41545 46.673 8.56034C46.923 8.70238 47.2157 8.7734 47.5509 8.7734C47.7753 8.7734 47.9784 8.74215 48.1603 8.67965C48.3421 8.61431 48.4997 8.51914 48.6333 8.39414C48.7668 8.26914 48.8676 8.11431 48.9358 7.92965L50.3762 8.09159C50.2853 8.47227 50.112 8.80465 49.8563 9.08875C49.6034 9.37 49.2796 9.58875 48.8847 9.745C48.4898 9.8984 48.0381 9.97511 47.5296 9.97511Z\",\n    fill: \"white\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M51.7431 9.84727V3.30181H53.2388V4.39272H53.307C53.4263 4.01488 53.6309 3.72369 53.9206 3.51914C54.2133 3.31176 54.5471 3.20806 54.9221 3.20806C55.0073 3.20806 55.1025 3.21232 55.2076 3.22085C55.3155 3.22653 55.405 3.23647 55.476 3.25068V4.66971C55.4107 4.64698 55.307 4.6271 55.165 4.61005C55.0258 4.59017 54.8908 4.58022 54.7601 4.58022C54.4789 4.58022 54.226 4.6413 54.0016 4.76346C53.78 4.88278 53.6053 5.04897 53.4775 5.26204C53.3496 5.47511 53.2857 5.72085 53.2857 5.99926V9.84727H51.7431Z\",\n    fill: \"white\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgJupyter);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/jupyter.eae2a4caaa084a62aaa1092b1f673c3d.svg\";","var _g, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgNoteable = function SvgNoteable(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 71,\n    height: 15,\n    viewBox: \"0 0 71 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_339_2426)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.6429 0.858299C14.5207 0.786654 14.3781 0.786654 14.2559 0.858299L9.97916 3.27376L8.41101 0.981117C8.4008 0.970883 8.39063 0.960648 8.39063 0.950413L8.38046 0.940178C8.37026 0.919708 8.34989 0.909473 8.33972 0.899238L8.32952 0.889003C8.31935 0.878769 8.29897 0.868534 8.2786 0.858299C8.26843 0.858299 8.26843 0.848064 8.25826 0.848064C8.24806 0.837829 8.22769 0.837829 8.21752 0.827594C8.20735 0.827594 8.19715 0.817359 8.18698 0.817359C8.17678 0.817359 8.16661 0.817359 8.14623 0.807124C8.13607 0.807124 8.11569 0.807124 8.10552 0.807124C8.09532 0.807124 8.08515 0.807124 8.07495 0.807124C8.05461 0.807124 8.04441 0.807124 8.02403 0.817359C8.01387 0.817359 8.01387 0.817359 8.0037 0.817359C7.98333 0.817359 7.97312 0.827594 7.95278 0.837829C7.94258 0.837829 7.94258 0.837829 7.93241 0.848064C7.92221 0.848064 7.91204 0.858299 7.90187 0.858299L0.193473 5.20817C0.18329 5.20817 0.18329 5.21839 0.173108 5.21839H0.162925C0.142559 5.22865 0.122194 5.24909 0.112011 5.25935L0.101828 5.26957C0.0916454 5.27982 0.0814623 5.30027 0.0712796 5.31052L0.0610969 5.32074C0.0509139 5.34122 0.0407312 5.3617 0.0305484 5.38217V5.39239C0.0203656 5.41287 0.0203656 5.42309 0.0203656 5.44357C0.0203656 5.45379 0.0203656 5.45379 0.0203656 5.46405C0 5.50496 0 5.52544 0 5.54592V14.8393C0 14.9723 0.0712796 15.1054 0.193473 15.177C0.25457 15.2077 0.32585 15.2282 0.386946 15.2282C0.448043 15.2282 0.519321 15.2077 0.580421 15.177L4.85719 12.7616L6.41517 15.0645C6.41517 15.0645 6.41517 15.0645 6.42534 15.0747C6.42534 15.0849 6.43555 15.0849 6.43555 15.0952C6.44572 15.1054 6.44572 15.1054 6.45588 15.1156L6.46609 15.1259C6.47626 15.1361 6.47626 15.1361 6.48646 15.1463L6.49663 15.1566C6.5068 15.1668 6.517 15.1668 6.52717 15.177C6.52717 15.177 6.53737 15.177 6.53737 15.1873C6.53737 15.1873 6.53737 15.1873 6.54754 15.1873C6.55771 15.1975 6.56791 15.1975 6.57808 15.1975C6.58829 15.1975 6.58829 15.1975 6.59846 15.2077C6.60863 15.2077 6.61883 15.218 6.629 15.218C6.6392 15.218 6.6392 15.218 6.64937 15.2282C6.65954 15.2282 6.66974 15.2282 6.67991 15.2385H6.69011C6.71045 15.2385 6.72066 15.2385 6.74103 15.2385C6.74103 15.2385 6.74103 15.2385 6.7512 15.2385C6.76137 15.2385 6.78174 15.2385 6.79194 15.2385C6.80211 15.2385 6.80211 15.2385 6.81228 15.2385C6.82248 15.2385 6.83265 15.2384 6.84285 15.2282C6.85302 15.2282 6.85302 15.2282 6.86319 15.218C6.8734 15.218 6.88356 15.2077 6.89377 15.2077C6.90394 15.2077 6.90394 15.1975 6.91414 15.1975C6.91414 15.1975 6.92431 15.1975 6.92431 15.1873L14.6327 10.8374C14.7549 10.7658 14.8261 10.643 14.8261 10.4997V1.19605C14.8261 1.05277 14.7549 0.929943 14.6429 0.858299ZM0.773893 14.1842V6.79458L4.40914 12.127L0.773893 14.1842ZM6.54754 5.20817C6.42534 5.27982 6.35406 5.40262 6.35406 5.54592V13.5906L0.947002 5.67896L7.97312 1.7078L9.29691 3.65245L6.54754 5.20817ZM14.0624 10.2643L7.12796 14.1842V5.77109L14.0624 1.86133V10.2643Z\",\n    fill: \"#171615\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.1719 3.07031V11.7976H24.7656L20.6534 5.85298H20.581V11.7976H19V3.07031H20.4148L24.5227 9.01918H24.5994V3.07031H26.1719Z\",\n    fill: \"#171615\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.6794 11.9254C30.0402 11.9254 29.4862 11.7848 29.0175 11.5036C28.5487 11.2223 28.1851 10.8288 27.9266 10.3232C27.6709 9.81747 27.5431 9.22656 27.5431 8.55043C27.5431 7.87429 27.6709 7.28196 27.9266 6.77344C28.1851 6.26491 28.5487 5.87003 29.0175 5.58878C29.4862 5.30753 30.0402 5.1669 30.6794 5.1669C31.3186 5.1669 31.8726 5.30753 32.3414 5.58878C32.8101 5.87003 33.1723 6.26491 33.428 6.77344C33.6865 7.28196 33.8158 7.87429 33.8158 8.55043C33.8158 9.22656 33.6865 9.81747 33.428 10.3232C33.1723 10.8288 32.8101 11.2223 32.3414 11.5036C31.8726 11.7848 31.3186 11.9254 30.6794 11.9254ZM30.6879 10.6896C31.0345 10.6896 31.3243 10.5945 31.5573 10.4041C31.7902 10.2109 31.9635 9.95242 32.0772 9.62855C32.1936 9.30469 32.2519 8.94389 32.2519 8.54616C32.2519 8.1456 32.1936 7.78338 32.0772 7.45952C31.9635 7.13281 31.7902 6.87287 31.5573 6.67969C31.3243 6.48651 31.0345 6.38991 30.6879 6.38991C30.3328 6.38991 30.0374 6.48651 29.8016 6.67969C29.5686 6.87287 29.3939 7.13281 29.2774 7.45952C29.1638 7.78338 29.107 8.1456 29.107 8.54616C29.107 8.94389 29.1638 9.30469 29.2774 9.62855C29.3939 9.95242 29.5686 10.2109 29.8016 10.4041C30.0374 10.5945 30.3328 10.6896 30.6879 10.6896Z\",\n    fill: \"#171615\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.3915 5.25213V6.44531H34.6287V5.25213H38.3915ZM35.5577 3.68395H37.1003V9.82884C37.1003 10.0362 37.1316 10.1953 37.1941 10.3061C37.2594 10.4141 37.3446 10.4879 37.4498 10.5277C37.5549 10.5675 37.6713 10.5874 37.7992 10.5874C37.8958 10.5874 37.9838 10.5803 38.0634 10.5661C38.1458 10.5518 38.2083 10.5391 38.2509 10.5277L38.5108 11.7337C38.4284 11.7621 38.3105 11.7933 38.1571 11.8274C38.0066 11.8615 37.8219 11.8814 37.6032 11.8871C37.2168 11.8984 36.8688 11.8402 36.5591 11.7124C36.2495 11.5817 36.0037 11.38 35.8219 11.1072C35.6429 10.8345 35.5549 10.4936 35.5577 10.0845V3.68395Z\",\n    fill: \"#171615\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.507 11.9254C41.8508 11.9254 41.284 11.7891 40.8067 11.5163C40.3323 11.2408 39.9672 10.8516 39.7116 10.3487C39.4559 9.84304 39.328 9.24787 39.328 8.56321C39.328 7.88991 39.4559 7.29901 39.7116 6.79048C39.9701 6.27912 40.3309 5.88139 40.7939 5.5973C41.257 5.31037 41.8011 5.1669 42.4261 5.1669C42.8295 5.1669 43.2101 5.23224 43.5681 5.36293C43.9289 5.49077 44.2471 5.68963 44.5226 5.95952C44.8011 6.2294 45.0198 6.57315 45.1789 6.99077C45.338 7.40554 45.4175 7.89986 45.4175 8.47372V8.94673H40.0525V7.90696H43.9388C43.936 7.61151 43.8721 7.34872 43.7471 7.11861C43.6221 6.88565 43.4474 6.70242 43.2229 6.56889C43.0013 6.43537 42.7428 6.36861 42.4474 6.36861C42.132 6.36861 41.855 6.44531 41.6164 6.59872C41.3778 6.74929 41.1917 6.94815 41.0582 7.19531C40.9275 7.43963 40.8607 7.7081 40.8579 8.00071V8.90838C40.8579 9.28906 40.9275 9.61577 41.0667 9.88849C41.2059 10.1584 41.4005 10.3658 41.6505 10.5107C41.9005 10.6527 42.1931 10.7237 42.5283 10.7237C42.7528 10.7237 42.9559 10.6925 43.1377 10.63C43.3195 10.5646 43.4772 10.4695 43.6107 10.3445C43.7442 10.2195 43.8451 10.0646 43.9133 9.87997L45.3536 10.0419C45.2627 10.4226 45.0894 10.755 44.8337 11.0391C44.5809 11.3203 44.257 11.5391 43.8621 11.6953C43.4672 11.8487 43.0155 11.9254 42.507 11.9254Z\",\n    fill: \"#171615\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.6041 11.9297C48.1893 11.9297 47.8157 11.8558 47.4833 11.7081C47.1538 11.5575 46.8924 11.3359 46.6992 11.0433C46.5089 10.7507 46.4137 10.3899 46.4137 9.96094C46.4137 9.59162 46.4819 9.28622 46.6183 9.04474C46.7546 8.80327 46.9407 8.61009 47.1765 8.4652C47.4123 8.32031 47.6779 8.21094 47.9734 8.13707C48.2717 8.06037 48.5799 8.00497 48.8981 7.97088C49.2816 7.93111 49.5927 7.8956 49.8313 7.86435C50.07 7.83026 50.2433 7.77912 50.3512 7.71094C50.462 7.63991 50.5174 7.53054 50.5174 7.38281V7.35724C50.5174 7.03622 50.4222 6.78764 50.2319 6.61151C50.0416 6.43537 49.7674 6.3473 49.4095 6.3473C49.0316 6.3473 48.7319 6.42969 48.5103 6.59446C48.2916 6.75923 48.1438 6.95384 48.0671 7.17827L46.6268 6.97372C46.7404 6.57599 46.9279 6.24361 47.1893 5.97656C47.4506 5.70668 47.7702 5.50497 48.1481 5.37145C48.5259 5.23509 48.9435 5.1669 49.4009 5.1669C49.7163 5.1669 50.0302 5.20384 50.3427 5.2777C50.6552 5.35156 50.9407 5.47372 51.1992 5.64418C51.4577 5.81179 51.6651 6.04048 51.8214 6.33026C51.9805 6.62003 52.06 6.98224 52.06 7.4169V11.7976H50.5771V10.8984H50.5259C50.4322 11.0803 50.3001 11.2507 50.1296 11.4098C49.962 11.5661 49.7504 11.6925 49.4947 11.7891C49.2418 11.8828 48.945 11.9297 48.6041 11.9297ZM49.0046 10.7962C49.3143 10.7962 49.5827 10.7351 49.81 10.6129C50.0373 10.4879 50.212 10.3232 50.3342 10.1186C50.4592 9.91406 50.5217 9.69105 50.5217 9.44957V8.67827C50.4734 8.71804 50.391 8.75497 50.2745 8.78906C50.1609 8.82315 50.033 8.85298 49.891 8.87855C49.7489 8.90412 49.6083 8.92685 49.4691 8.94673C49.3299 8.96662 49.2092 8.98366 49.1069 8.99787C48.8768 9.02912 48.6708 9.08026 48.489 9.15128C48.3072 9.2223 48.1637 9.32173 48.0586 9.44957C47.9535 9.57457 47.9009 9.73651 47.9009 9.93537C47.9009 10.2195 48.0046 10.4339 48.212 10.5788C48.4194 10.7237 48.6836 10.7962 49.0046 10.7962Z\",\n    fill: \"#171615\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.6773 11.7976V3.07031H55.2199V6.33452H55.2838C55.3634 6.17543 55.4756 6.00639 55.6205 5.82741C55.7654 5.6456 55.9614 5.49077 56.2085 5.36293C56.4557 5.23224 56.7711 5.1669 57.1546 5.1669C57.6603 5.1669 58.1162 5.29616 58.5225 5.55469C58.9316 5.81037 59.2554 6.18963 59.4941 6.69247C59.7355 7.19247 59.8563 7.80611 59.8563 8.53338C59.8563 9.25213 59.7384 9.86293 59.5026 10.3658C59.2668 10.8686 58.9458 11.2521 58.5395 11.5163C58.1333 11.7805 57.673 11.9126 57.1588 11.9126C56.7838 11.9126 56.4728 11.8501 56.2256 11.7251C55.9784 11.6001 55.7796 11.4496 55.629 11.2734C55.4813 11.0945 55.3662 10.9254 55.2838 10.7663H55.1943V11.7976H53.6773ZM55.1901 8.52486C55.1901 8.94815 55.2497 9.31889 55.3691 9.63707C55.4912 9.95526 55.6659 10.2038 55.8932 10.3828C56.1233 10.5589 56.4017 10.647 56.7284 10.647C57.0693 10.647 57.3549 10.5561 57.585 10.3743C57.8151 10.1896 57.9884 9.93821 58.1049 9.62003C58.2242 9.29901 58.2838 8.93395 58.2838 8.52486C58.2838 8.11861 58.2256 7.75781 58.1091 7.44247C57.9926 7.12713 57.8193 6.87997 57.5892 6.70099C57.3591 6.52202 57.0722 6.43253 56.7284 6.43253C56.3989 6.43253 56.1191 6.51918 55.889 6.69247C55.6588 6.86577 55.4841 7.10866 55.3648 7.42116C55.2483 7.73366 55.1901 8.10156 55.1901 8.52486Z\",\n    fill: \"#171615\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.7083 3.07031V11.7976H61.1657V3.07031H62.7083Z\",\n    fill: \"#171615\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.1903 11.9254C66.534 11.9254 65.9673 11.7891 65.49 11.5163C65.0155 11.2408 64.6505 10.8516 64.3948 10.3487C64.1391 9.84304 64.0113 9.24787 64.0113 8.56321C64.0113 7.88991 64.1391 7.29901 64.3948 6.79048C64.6533 6.27912 65.0141 5.88139 65.4772 5.5973C65.9403 5.31037 66.4843 5.1669 67.1093 5.1669C67.5127 5.1669 67.8934 5.23224 68.2513 5.36293C68.6121 5.49077 68.9303 5.68963 69.2059 5.95952C69.4843 6.2294 69.703 6.57315 69.8621 6.99077C70.0212 7.40554 70.1008 7.89986 70.1008 8.47372V8.94673H64.7357V7.90696H68.6221C68.6192 7.61151 68.5553 7.34872 68.4303 7.11861C68.3053 6.88565 68.1306 6.70242 67.9062 6.56889C67.6846 6.43537 67.4261 6.36861 67.1306 6.36861C66.8153 6.36861 66.5383 6.44531 66.2996 6.59872C66.061 6.74929 65.8749 6.94815 65.7414 7.19531C65.6107 7.43963 65.544 7.7081 65.5411 8.00071V8.90838C65.5411 9.28906 65.6107 9.61577 65.7499 9.88849C65.8891 10.1584 66.0837 10.3658 66.3337 10.5107C66.5837 10.6527 66.8763 10.7237 67.2116 10.7237C67.436 10.7237 67.6391 10.6925 67.8209 10.63C68.0028 10.5646 68.1604 10.4695 68.294 10.3445C68.4275 10.2195 68.5283 10.0646 68.5965 9.87997L70.0369 10.0419C69.9459 10.4226 69.7726 10.755 69.517 11.0391C69.2641 11.3203 68.9403 11.5391 68.5454 11.6953C68.1505 11.8487 67.6988 11.9254 67.1903 11.9254Z\",\n    fill: \"#171615\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_339_2426\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 15,\n    height: 15,\n    fill: \"white\"\n  })))));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgNoteable);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/noteable.2bb7872d2befb63bee0769b61b3bdde2.svg\";","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgPandas = function SvgPandas(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 24,\n    viewBox: \"8 0 56 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.7025 6.26845H10.2818V9.21842H11.7025V6.26845Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.7025 12.3282H10.2818V15.2782H11.7025V12.3282Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.7025 10.0795H10.2818V11.4713H11.7025V10.0795Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.42072 8.69412H8V18.5H9.42072V8.69412Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.9377 14.7621H12.517V17.7121H13.9377V14.7621Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.9377 8.69766H12.517V11.6476H13.9377V8.69766Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.9377 12.5087H12.517V13.9005H13.9377V12.5087Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.1722 5.5H14.7515V15.3059H16.1722V5.5Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.1009 18.4545V9.45455H22.618V10.5369H22.7075C22.787 10.3778 22.8992 10.2088 23.0441 10.0298C23.189 9.84801 23.385 9.69318 23.6322 9.56534C23.8793 9.43466 24.1947 9.36932 24.5782 9.36932C25.0839 9.36932 25.5399 9.49858 25.9461 9.7571C26.3552 10.0128 26.6791 10.392 26.9177 10.8949C27.1592 11.3949 27.2799 12.0085 27.2799 12.7358C27.2799 13.4545 27.162 14.0653 26.9262 14.5682C26.6904 15.071 26.3694 15.4545 25.9632 15.7188C25.5569 15.983 25.0967 16.1151 24.5825 16.1151C24.2075 16.1151 23.8964 16.0526 23.6492 15.9276C23.4021 15.8026 23.2032 15.652 23.0526 15.4759C22.9049 15.2969 22.7899 15.1278 22.7075 14.9688H22.6436V18.4545H21.1009ZM22.6137 12.7273C22.6137 13.1506 22.6734 13.5213 22.7927 13.8395C22.9149 14.1577 23.0896 14.4062 23.3168 14.5852C23.547 14.7614 23.8254 14.8494 24.1521 14.8494C24.493 14.8494 24.7785 14.7585 25.0086 14.5767C25.2387 14.392 25.412 14.1406 25.5285 13.8224C25.6478 13.5014 25.7075 13.1364 25.7075 12.7273C25.7075 12.321 25.6492 11.9602 25.5328 11.6449C25.4163 11.3295 25.243 11.0824 25.0129 10.9034C24.7828 10.7244 24.4958 10.6349 24.1521 10.6349C23.8225 10.6349 23.5427 10.7216 23.3126 10.8949C23.0825 11.0682 22.9078 11.3111 22.7884 11.6236C22.672 11.9361 22.6137 12.304 22.6137 12.7273ZM30.4824 16.1321C30.0676 16.1321 29.6941 16.0582 29.3617 15.9105C29.0321 15.7599 28.7708 15.5384 28.5776 15.2457C28.3872 14.9531 28.2921 14.5923 28.2921 14.1634C28.2921 13.794 28.3603 13.4886 28.4966 13.2472C28.633 13.0057 28.8191 12.8125 29.0549 12.6676C29.2907 12.5227 29.5563 12.4134 29.8517 12.3395C30.15 12.2628 30.4583 12.2074 30.7765 12.1733C31.16 12.1335 31.4711 12.098 31.7097 12.0668C31.9483 12.0327 32.1216 11.9815 32.2296 11.9134C32.3404 11.8423 32.3958 11.733 32.3958 11.5852V11.5597C32.3958 11.2386 32.3006 10.9901 32.1103 10.8139C31.9199 10.6378 31.6458 10.5497 31.2878 10.5497C30.91 10.5497 30.6103 10.6321 30.3887 10.7969C30.1699 10.9616 30.0222 11.1562 29.9455 11.3807L28.5051 11.1761C28.6188 10.7784 28.8063 10.446 29.0676 10.179C29.329 9.90909 29.6486 9.70739 30.0265 9.57386C30.4043 9.4375 30.8219 9.36932 31.2793 9.36932C31.5946 9.36932 31.9086 9.40625 32.2211 9.48011C32.5336 9.55398 32.8191 9.67614 33.0776 9.84659C33.3361 10.0142 33.5435 10.2429 33.6997 10.5327C33.8588 10.8224 33.9384 11.1847 33.9384 11.6193V16H32.4554V15.1009H32.4043C32.3105 15.2827 32.1784 15.4531 32.008 15.6122C31.8404 15.7685 31.6287 15.8949 31.373 15.9915C31.1202 16.0852 30.8233 16.1321 30.4824 16.1321ZM30.883 14.9986C31.1926 14.9986 31.4611 14.9375 31.6884 14.8153C31.9157 14.6903 32.0904 14.5256 32.2125 14.321C32.3375 14.1165 32.4 13.8935 32.4 13.652V12.8807C32.3517 12.9205 32.2694 12.9574 32.1529 12.9915C32.0392 13.0256 31.9114 13.0554 31.7694 13.081C31.6273 13.1065 31.4867 13.1293 31.3475 13.1491C31.2083 13.169 31.0875 13.1861 30.9853 13.2003C30.7551 13.2315 30.5492 13.2827 30.3674 13.3537C30.1855 13.4247 30.0421 13.5241 29.937 13.652C29.8319 13.777 29.7793 13.9389 29.7793 14.1378C29.7793 14.4219 29.883 14.6364 30.0904 14.7812C30.2978 14.9261 30.562 14.9986 30.883 14.9986ZM37.0301 12.1648V16H35.4875V9.45455H36.9619V10.5668H37.0386C37.1892 10.2003 37.4292 9.90909 37.7588 9.69318C38.0912 9.47727 38.5017 9.36932 38.9903 9.36932C39.442 9.36932 39.8355 9.46591 40.1707 9.65909C40.5088 9.85227 40.7702 10.1321 40.9548 10.4986C41.1423 10.8651 41.2346 11.3097 41.2318 11.8324V16H39.6892V12.071C39.6892 11.6335 39.5755 11.2912 39.3483 11.044C39.1238 10.7969 38.8128 10.6733 38.415 10.6733C38.1452 10.6733 37.9051 10.733 37.6949 10.8523C37.4875 10.9687 37.3241 11.1378 37.2048 11.3594C37.0883 11.581 37.0301 11.8494 37.0301 12.1648ZM45.2269 16.1151C44.7127 16.1151 44.2525 15.983 43.8462 15.7188C43.44 15.4545 43.119 15.071 42.8832 14.5682C42.6474 14.0653 42.5295 13.4545 42.5295 12.7358C42.5295 12.0085 42.6488 11.3949 42.8874 10.8949C43.1289 10.392 43.4542 10.0128 43.8633 9.7571C44.2724 9.49858 44.7283 9.36932 45.2312 9.36932C45.6147 9.36932 45.93 9.43466 46.1772 9.56534C46.4244 9.69318 46.6204 9.84801 46.7653 10.0298C46.9102 10.2088 47.0224 10.3778 47.1019 10.5369H47.1658V7.27273H48.7127V16H47.1957V14.9688H47.1019C47.0224 15.1278 46.9073 15.2969 46.7567 15.4759C46.6062 15.652 46.4073 15.8026 46.1602 15.9276C45.913 16.0526 45.6019 16.1151 45.2269 16.1151ZM45.6573 14.8494C45.984 14.8494 46.2624 14.7614 46.4925 14.5852C46.7227 14.4062 46.8974 14.1577 47.0167 13.8395C47.136 13.5213 47.1957 13.1506 47.1957 12.7273C47.1957 12.304 47.136 11.9361 47.0167 11.6236C46.9002 11.3111 46.7269 11.0682 46.4968 10.8949C46.2695 10.7216 45.9897 10.6349 45.6573 10.6349C45.3136 10.6349 45.0266 10.7244 44.7965 10.9034C44.5664 11.0824 44.3931 11.3295 44.2766 11.6449C44.1602 11.9602 44.1019 12.321 44.1019 12.7273C44.1019 13.1364 44.1602 13.5014 44.2766 13.8224C44.396 14.1406 44.5707 14.392 44.8008 14.5767C45.0337 14.7585 45.3192 14.8494 45.6573 14.8494ZM52.238 16.1321C51.8232 16.1321 51.4497 16.0582 51.1173 15.9105C50.7877 15.7599 50.5264 15.5384 50.3332 15.2457C50.1428 14.9531 50.0477 14.5923 50.0477 14.1634C50.0477 13.794 50.1159 13.4886 50.2522 13.2472C50.3886 13.0057 50.5747 12.8125 50.8105 12.6676C51.0463 12.5227 51.3119 12.4134 51.6073 12.3395C51.9056 12.2628 52.2139 12.2074 52.5321 12.1733C52.9156 12.1335 53.2267 12.098 53.4653 12.0668C53.7039 12.0327 53.8772 11.9815 53.9852 11.9134C54.096 11.8423 54.1514 11.733 54.1514 11.5852V11.5597C54.1514 11.2386 54.0562 10.9901 53.8659 10.8139C53.6755 10.6378 53.4014 10.5497 53.0434 10.5497C52.6656 10.5497 52.3659 10.6321 52.1443 10.7969C51.9255 10.9616 51.7778 11.1562 51.7011 11.3807L50.2607 11.1761C50.3744 10.7784 50.5619 10.446 50.8232 10.179C51.0846 9.90909 51.4042 9.70739 51.7821 9.57386C52.1599 9.4375 52.5775 9.36932 53.0349 9.36932C53.3502 9.36932 53.6642 9.40625 53.9767 9.48011C54.2892 9.55398 54.5747 9.67614 54.8332 9.84659C55.0917 10.0142 55.2991 10.2429 55.4553 10.5327C55.6144 10.8224 55.694 11.1847 55.694 11.6193V16H54.211V15.1009H54.1599C54.0661 15.2827 53.934 15.4531 53.7636 15.6122C53.596 15.7685 53.3843 15.8949 53.1286 15.9915C52.8758 16.0852 52.5789 16.1321 52.238 16.1321ZM52.6386 14.9986C52.9482 14.9986 53.2167 14.9375 53.444 14.8153C53.6713 14.6903 53.846 14.5256 53.9681 14.321C54.0931 14.1165 54.1556 13.8935 54.1556 13.652V12.8807C54.1073 12.9205 54.025 12.9574 53.9085 12.9915C53.7948 13.0256 53.667 13.0554 53.525 13.081C53.3829 13.1065 53.2423 13.1293 53.1031 13.1491C52.9639 13.169 52.8431 13.1861 52.7409 13.2003C52.5107 13.2315 52.3048 13.2827 52.123 13.3537C51.9411 13.4247 51.7977 13.5241 51.6926 13.652C51.5875 13.777 51.5349 13.9389 51.5349 14.1378C51.5349 14.4219 51.6386 14.6364 51.846 14.7812C52.0534 14.9261 52.3176 14.9986 52.6386 14.9986ZM62.4164 11.1847L61.0101 11.3381C60.9704 11.196 60.9008 11.0625 60.8013 10.9375C60.7047 10.8125 60.574 10.7116 60.4093 10.6349C60.2445 10.5582 60.0428 10.5199 59.8042 10.5199C59.4831 10.5199 59.2133 10.5895 58.9945 10.7287C58.7786 10.8679 58.6721 11.0483 58.6749 11.2699C58.6721 11.4602 58.7417 11.6151 58.8837 11.7344C59.0286 11.8537 59.2672 11.9517 59.5996 12.0284L60.7161 12.267C61.3354 12.4006 61.7956 12.6122 62.0968 12.902C62.4008 13.1918 62.5542 13.571 62.557 14.0398C62.5542 14.4517 62.4334 14.8153 62.1948 15.1307C61.959 15.4432 61.6309 15.6875 61.2104 15.8636C60.79 16.0398 60.307 16.1278 59.7615 16.1278C58.9604 16.1278 58.3155 15.9602 57.8269 15.625C57.3383 15.2869 57.0471 14.8168 56.9533 14.2145L58.4576 14.0696C58.5258 14.3651 58.6706 14.5881 58.8922 14.7386C59.1138 14.8892 59.4022 14.9645 59.7573 14.9645C60.1238 14.9645 60.4178 14.8892 60.6394 14.7386C60.8638 14.5881 60.976 14.402 60.976 14.1804C60.976 13.9929 60.9036 13.8381 60.7587 13.7159C60.6167 13.5937 60.3951 13.5 60.0939 13.4347L58.9775 13.2003C58.3496 13.0696 57.8851 12.8494 57.584 12.5398C57.2829 12.2273 57.1337 11.8324 57.1365 11.3551C57.1337 10.9517 57.2431 10.6023 57.4647 10.3068C57.6891 10.0085 58.0002 9.77841 58.3979 9.61648C58.7985 9.4517 59.2601 9.36932 59.7829 9.36932C60.5499 9.36932 61.1536 9.53267 61.5939 9.85938C62.0371 10.1861 62.3113 10.6278 62.4164 11.1847Z\",\n    fill: \"white\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgPandas);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/pandas.a82d0d0fb891d2a2872df159767cc083.svg\";","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgPyspark = function SvgPyspark(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 66,\n    height: 24,\n    viewBox: \"8 0 66 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M11.4673 18.3737C10.91 18.1179 10.581 17.5241 10.6548 16.9077L11.0302 13.7743L8.86476 12.8655C8.32224 12.6378 7.97737 12.0905 8.00116 11.4949C8.02495 10.8993 8.41234 10.3821 8.97125 10.1998L11.6506 9.32575L12.1067 6.67619C12.2058 6.10086 12.6415 5.64569 13.2051 5.52881C13.7686 5.41193 14.3452 5.65715 14.6585 6.14696L15.876 8.0503L18.4451 7.39043C19.0308 7.23999 19.6454 7.48823 19.9694 8.00602C20.2933 8.52382 20.2533 9.19424 19.8703 9.6686L18.0321 11.945L19.0949 14.0423C19.3462 14.538 19.2886 15.1372 18.9477 15.5743C18.6069 16.0114 18.0457 16.2057 17.5128 16.071L15.2963 15.511L13.0881 18.0249C12.681 18.4883 12.0246 18.6296 11.4673 18.3737ZM14.8144 13.9251L17.8507 14.6923L16.3675 11.7656L18.7882 8.7678L15.2481 9.67708L13.4851 6.92082L12.8834 10.4159L9.39926 11.5525L12.5476 12.8738L12.0438 17.0792L14.8144 13.9251Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.3493 16V7.27273H28.6221C29.2925 7.27273 29.855 7.39773 30.3096 7.64773C30.767 7.89773 31.1121 8.24148 31.3451 8.67898C31.5809 9.11364 31.6988 9.60795 31.6988 10.1619C31.6988 10.7216 31.5809 11.2187 31.3451 11.6534C31.1093 12.0881 30.7613 12.4304 30.301 12.6804C29.8408 12.9276 29.2741 13.0511 28.6008 13.0511H26.4317V11.7514H28.3877C28.7797 11.7514 29.1008 11.6832 29.3508 11.5469C29.6008 11.4105 29.7854 11.223 29.9047 10.9844C30.0269 10.7457 30.088 10.4716 30.088 10.1619C30.088 9.85227 30.0269 9.57955 29.9047 9.34375C29.7854 9.10795 29.5993 8.92472 29.3465 8.79403C29.0965 8.66051 28.7741 8.59375 28.3792 8.59375H26.9303V16H25.3493ZM33.9606 18.4545C33.7504 18.4545 33.5557 18.4375 33.3768 18.4034C33.2006 18.3722 33.06 18.3352 32.9549 18.2926L33.3129 17.0909C33.5373 17.1563 33.7376 17.1875 33.9137 17.1847C34.0898 17.1818 34.2447 17.1264 34.3782 17.0185C34.5146 16.9134 34.6296 16.7372 34.7234 16.4901L34.8555 16.1364L32.4819 9.45455H34.1182L35.6268 14.3977H35.695L37.2077 9.45455H38.8484L36.2276 16.7926C36.1055 17.1392 35.9435 17.4361 35.7418 17.6832C35.5401 17.9332 35.293 18.1236 35.0004 18.2543C34.7106 18.3878 34.364 18.4545 33.9606 18.4545ZM44.7249 9.67188C44.6851 9.29972 44.5175 9.00994 44.222 8.80256C43.9294 8.59517 43.5487 8.49148 43.08 8.49148C42.7504 8.49148 42.4678 8.54119 42.232 8.64062C41.9962 8.74006 41.8158 8.875 41.6908 9.04545C41.5658 9.21591 41.5019 9.41051 41.499 9.62926C41.499 9.81108 41.5402 9.96875 41.6226 10.1023C41.7078 10.2358 41.8229 10.3494 41.9678 10.4432C42.1127 10.5341 42.2732 10.6108 42.4493 10.6733C42.6254 10.7358 42.803 10.7884 42.982 10.831L43.8002 11.0355C44.1297 11.1122 44.4465 11.2159 44.7504 11.3466C45.0573 11.4773 45.3314 11.642 45.5729 11.8409C45.8172 12.0398 46.0104 12.2798 46.1524 12.5611C46.2945 12.8423 46.3655 13.1719 46.3655 13.5497C46.3655 14.0611 46.2348 14.5114 45.9735 14.9006C45.7121 15.2869 45.3342 15.5895 44.8399 15.8082C44.3485 16.0241 43.7533 16.1321 43.0544 16.1321C42.3754 16.1321 41.786 16.027 41.286 15.8168C40.7888 15.6065 40.3996 15.2997 40.1183 14.8963C39.8399 14.4929 39.6894 14.0014 39.6666 13.4219H41.222C41.2448 13.7259 41.3385 13.9787 41.5033 14.1804C41.6681 14.3821 41.8825 14.5327 42.1467 14.6321C42.4138 14.7315 42.7121 14.7812 43.0416 14.7812C43.3854 14.7812 43.6865 14.7301 43.945 14.6278C44.2064 14.5227 44.411 14.3778 44.5587 14.1932C44.7064 14.0057 44.7817 13.7869 44.7845 13.5369C44.7817 13.3097 44.7149 13.1222 44.5842 12.9744C44.4536 12.8239 44.2703 12.6989 44.0345 12.5994C43.8016 12.4972 43.5289 12.4062 43.2164 12.3267L42.2235 12.071C41.5047 11.8864 40.9365 11.6065 40.5189 11.2315C40.1041 10.8537 39.8967 10.3523 39.8967 9.72727C39.8967 9.21307 40.036 8.76278 40.3144 8.37642C40.5956 7.99006 40.9777 7.69034 41.4607 7.47727C41.9436 7.26136 42.4905 7.15341 43.1013 7.15341C43.7206 7.15341 44.2632 7.26136 44.7291 7.47727C45.1979 7.69034 45.5658 7.98722 45.8328 8.3679C46.0999 8.74574 46.2377 9.1804 46.2462 9.67188H44.7249ZM47.7047 18.4545V9.45455H49.2218V10.5369H49.3113C49.3908 10.3778 49.503 10.2088 49.6479 10.0298C49.7928 9.84801 49.9888 9.69318 50.236 9.56534C50.4831 9.43466 50.7985 9.36932 51.182 9.36932C51.6877 9.36932 52.1436 9.49858 52.5499 9.7571C52.959 10.0128 53.2828 10.392 53.5215 10.8949C53.763 11.3949 53.8837 12.0085 53.8837 12.7358C53.8837 13.4545 53.7658 14.0653 53.53 14.5682C53.2942 15.071 52.9732 15.4545 52.5669 15.7188C52.1607 15.983 51.7005 16.1151 51.1863 16.1151C50.8113 16.1151 50.5002 16.0526 50.253 15.9276C50.0059 15.8026 49.807 15.652 49.6564 15.4759C49.5087 15.2969 49.3936 15.1278 49.3113 14.9688H49.2473V18.4545H47.7047ZM49.2175 12.7273C49.2175 13.1506 49.2772 13.5213 49.3965 13.8395C49.5186 14.1577 49.6934 14.4062 49.9206 14.5852C50.1507 14.7614 50.4292 14.8494 50.7559 14.8494C51.0968 14.8494 51.3823 14.7585 51.6124 14.5767C51.8425 14.392 52.0158 14.1406 52.1323 13.8224C52.2516 13.5014 52.3113 13.1364 52.3113 12.7273C52.3113 12.321 52.253 11.9602 52.1365 11.6449C52.0201 11.3295 51.8468 11.0824 51.6167 10.9034C51.3865 10.7244 51.0996 10.6349 50.7559 10.6349C50.4263 10.6349 50.1465 10.7216 49.9164 10.8949C49.6863 11.0682 49.5115 11.3111 49.3922 11.6236C49.2757 11.9361 49.2175 12.304 49.2175 12.7273ZM57.0862 16.1321C56.6714 16.1321 56.2979 16.0582 55.9655 15.9105C55.6359 15.7599 55.3746 15.5384 55.1814 15.2457C54.991 14.9531 54.8959 14.5923 54.8959 14.1634C54.8959 13.794 54.964 13.4886 55.1004 13.2472C55.2368 13.0057 55.4229 12.8125 55.6586 12.6676C55.8944 12.5227 56.1601 12.4134 56.4555 12.3395C56.7538 12.2628 57.0621 12.2074 57.3802 12.1733C57.7638 12.1335 58.0748 12.098 58.3135 12.0668C58.5521 12.0327 58.7254 11.9815 58.8334 11.9134C58.9442 11.8423 58.9996 11.733 58.9996 11.5852V11.5597C58.9996 11.2386 58.9044 10.9901 58.714 10.8139C58.5237 10.6378 58.2496 10.5497 57.8916 10.5497C57.5138 10.5497 57.214 10.6321 56.9925 10.7969C56.7737 10.9616 56.626 11.1562 56.5493 11.3807L55.1089 11.1761C55.2226 10.7784 55.4101 10.446 55.6714 10.179C55.9328 9.90909 56.2524 9.70739 56.6302 9.57386C57.0081 9.4375 57.4257 9.36932 57.8831 9.36932C58.1984 9.36932 58.5123 9.40625 58.8248 9.48011C59.1373 9.55398 59.4229 9.67614 59.6814 9.84659C59.9399 10.0142 60.1473 10.2429 60.3035 10.5327C60.4626 10.8224 60.5422 11.1847 60.5422 11.6193V16H59.0592V15.1009H59.0081C58.9143 15.2827 58.7822 15.4531 58.6118 15.6122C58.4442 15.7685 58.2325 15.8949 57.9768 15.9915C57.724 16.0852 57.4271 16.1321 57.0862 16.1321ZM57.4868 14.9986C57.7964 14.9986 58.0649 14.9375 58.2922 14.8153C58.5194 14.6903 58.6942 14.5256 58.8163 14.321C58.9413 14.1165 59.0038 13.8935 59.0038 13.652V12.8807C58.9555 12.9205 58.8731 12.9574 58.7567 12.9915C58.643 13.0256 58.5152 13.0554 58.3731 13.081C58.2311 13.1065 58.0905 13.1293 57.9513 13.1491C57.8121 13.169 57.6913 13.1861 57.589 13.2003C57.3589 13.2315 57.153 13.2827 56.9711 13.3537C56.7893 13.4247 56.6459 13.5241 56.5408 13.652C56.4356 13.777 56.3831 13.9389 56.3831 14.1378C56.3831 14.4219 56.4868 14.6364 56.6942 14.7812C56.9015 14.9261 57.1658 14.9986 57.4868 14.9986ZM62.0913 16V9.45455H63.587V10.5455H63.6552C63.7745 10.1676 63.9791 9.87642 64.2688 9.67188C64.5614 9.46449 64.8952 9.3608 65.2702 9.3608C65.3555 9.3608 65.4506 9.36506 65.5558 9.37358C65.6637 9.37926 65.7532 9.3892 65.8242 9.40341V10.8224C65.7589 10.7997 65.6552 10.7798 65.5131 10.7628C65.3739 10.7429 65.239 10.733 65.1083 10.733C64.8271 10.733 64.5742 10.794 64.3498 10.9162C64.1282 11.0355 63.9535 11.2017 63.8256 11.4148C63.6978 11.6278 63.6339 11.8736 63.6339 12.152V16H62.0913ZM68.2533 13.946L68.249 12.0838H68.4962L70.8485 9.45455H72.651L69.7576 12.6761H69.438L68.2533 13.946ZM66.847 16V7.27273H68.3897V16H66.847ZM70.955 16L68.8243 13.0213L69.8641 11.9347L72.8002 16H70.955Z\",\n    fill: \"white\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgPyspark);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/pyspark.cb4fc7015b5a51eb532c94e6bdd34c15.svg\";","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgPython = function SvgPython(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 58,\n    height: 13,\n    viewBox: \"0 0 58 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.13129 0C3.8521 0 4.05687 1.41889 4.05687 1.41889L4.06052 2.88885H7.18978V3.3302H2.81759C2.81759 3.3302 0.719238 3.09276 0.719238 6.39413C0.719238 9.69551 2.55073 9.57843 2.55073 9.57843H3.64378V8.04647C3.64378 8.04647 3.58486 6.21905 5.44602 6.21905C7.30719 6.21905 8.54969 6.21905 8.54969 6.21905C8.54969 6.21905 10.2934 6.24718 10.2934 4.53754C10.2934 2.8279 10.2934 1.7107 10.2934 1.7107C10.2934 1.7107 10.5582 0 7.13129 0L7.13129 0ZM5.40582 0.988483C5.71715 0.988483 5.96879 1.23956 5.96879 1.5502C5.96879 1.86085 5.71715 2.11192 5.40582 2.11192C5.09448 2.11192 4.84284 1.86085 4.84284 1.5502C4.84284 1.23956 5.09448 0.988483 5.40582 0.988483V0.988483Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.30728 13C10.5865 13 10.3817 11.5811 10.3817 11.5811L10.378 10.1111H7.24879V9.66977H11.621C11.621 9.66977 13.7193 9.90721 13.7193 6.60583C13.7193 3.30446 11.8878 3.42153 11.8878 3.42153H10.7948V4.9535C10.7948 4.9535 10.8537 6.78091 8.99254 6.78091C7.13138 6.78091 5.88888 6.78091 5.88888 6.78091C5.88888 6.78091 4.14512 6.75279 4.14512 8.46243C4.14512 10.1721 4.14512 11.2893 4.14512 11.2893C4.14512 11.2893 3.88037 13 7.30728 13H7.30728ZM9.03275 12.0115C8.72141 12.0115 8.46978 11.7604 8.46978 11.4498C8.46978 11.1391 8.72141 10.888 9.03275 10.888C9.34409 10.888 9.59573 11.1391 9.59573 11.4498C9.59573 11.7604 9.34409 12.0115 9.03275 12.0115Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.7192 9.63633V0.909058H20.992C21.6624 0.909058 22.2249 1.03406 22.6795 1.28406C23.1369 1.53406 23.482 1.87781 23.715 2.31531C23.9508 2.74997 24.0687 3.24429 24.0687 3.79826C24.0687 4.35792 23.9508 4.85508 23.715 5.28974C23.4792 5.7244 23.1312 6.06673 22.6709 6.31673C22.2107 6.56389 21.644 6.68747 20.9707 6.68747H18.8016V5.38775H20.7576C21.1496 5.38775 21.4707 5.31957 21.7207 5.18321C21.9707 5.04684 22.1553 4.85934 22.2746 4.62071C22.3968 4.38207 22.4579 4.10792 22.4579 3.79826C22.4579 3.4886 22.3968 3.21588 22.2746 2.98008C22.1553 2.74429 21.9692 2.56105 21.7164 2.43036C21.4664 2.29684 21.144 2.23008 20.7491 2.23008H19.3002V9.63633H17.7192Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.3305 12.0909C26.1203 12.0909 25.9257 12.0738 25.7467 12.0397C25.5705 12.0085 25.4299 11.9716 25.3248 11.9289L25.6828 10.7272C25.9072 10.7926 26.1075 10.8238 26.2836 10.821C26.4597 10.8181 26.6146 10.7628 26.7481 10.6548C26.8845 10.5497 26.9995 10.3735 27.0933 10.1264L27.2254 9.77269L24.8518 3.09088H26.4881L27.9967 8.03406H28.0649L29.5776 3.09088H31.2183L28.5975 10.4289C28.4754 10.7755 28.3134 11.0724 28.1117 11.3196C27.91 11.5696 27.6629 11.7599 27.3703 11.8906C27.0805 12.0241 26.7339 12.0909 26.3305 12.0909Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.5522 3.09088V4.28406H31.7894V3.09088H35.5522ZM32.7184 1.52269H34.261V7.66758C34.261 7.87497 34.2922 8.03406 34.3547 8.14485C34.4201 8.25281 34.5053 8.32667 34.6104 8.36644C34.7155 8.40622 34.832 8.4261 34.9598 8.4261C35.0564 8.4261 35.1445 8.419 35.224 8.4048C35.3064 8.39059 35.3689 8.37781 35.4115 8.36644L35.6715 9.57241C35.5891 9.60082 35.4712 9.63207 35.3178 9.66616C35.1672 9.70025 34.9826 9.72014 34.7638 9.72582C34.3774 9.73718 34.0294 9.67894 33.7198 9.5511C33.4101 9.42042 33.1644 9.21872 32.9826 8.94599C32.8036 8.67326 32.7155 8.33235 32.7184 7.92326V1.52269Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.5235 5.8011V9.63633H36.9809V0.909058H38.4894V4.20309H38.5661C38.7195 3.83377 38.9567 3.54258 39.2777 3.32951C39.6016 3.1136 40.0135 3.00565 40.5135 3.00565C40.9681 3.00565 41.3644 3.10082 41.7025 3.29116C42.0405 3.4815 42.3019 3.75991 42.4866 4.12639C42.6741 4.49286 42.7678 4.94031 42.7678 5.46872V9.63633H41.2252V5.70735C41.2252 5.26701 41.1116 4.92468 40.8843 4.68036C40.6599 4.43321 40.3445 4.30963 39.9383 4.30963C39.6655 4.30963 39.4212 4.36928 39.2053 4.4886C38.9922 4.60508 38.8246 4.77411 38.7025 4.99571C38.5831 5.2173 38.5235 5.48576 38.5235 5.8011Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.1933 9.76417C46.5541 9.76417 46.0001 9.62355 45.5314 9.3423C45.0626 9.06105 44.699 8.66758 44.4405 8.1619C44.1848 7.65622 44.057 7.06531 44.057 6.38917C44.057 5.71304 44.1848 5.12071 44.4405 4.61218C44.699 4.10366 45.0626 3.70877 45.5314 3.42752C46.0001 3.14627 46.5541 3.00565 47.1933 3.00565C47.8325 3.00565 48.3865 3.14627 48.8553 3.42752C49.324 3.70877 49.6862 4.10366 49.9419 4.61218C50.2004 5.12071 50.3297 5.71304 50.3297 6.38917C50.3297 7.06531 50.2004 7.65622 49.9419 8.1619C49.6862 8.66758 49.324 9.06105 48.8553 9.3423C48.3865 9.62355 47.8325 9.76417 47.1933 9.76417ZM47.2018 8.52838C47.5484 8.52838 47.8382 8.43321 48.0712 8.24286C48.3041 8.04968 48.4774 7.79116 48.5911 7.4673C48.7075 7.14343 48.7658 6.78264 48.7658 6.38491C48.7658 5.98434 48.7075 5.62213 48.5911 5.29826C48.4774 4.97156 48.3041 4.71161 48.0712 4.51843C47.8382 4.32525 47.5484 4.22866 47.2018 4.22866C46.8467 4.22866 46.5513 4.32525 46.3155 4.51843C46.0825 4.71161 45.9078 4.97156 45.7913 5.29826C45.6777 5.62213 45.6209 5.98434 45.6209 6.38491C45.6209 6.78264 45.6777 7.14343 45.7913 7.4673C45.9078 7.79116 46.0825 8.04968 46.3155 8.24286C46.5513 8.43321 46.8467 8.52838 47.2018 8.52838Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.1796 5.8011V9.63633H51.637V3.09088H53.1114V4.20309H53.1881C53.3387 3.83661 53.5787 3.54542 53.9083 3.32951C54.2406 3.1136 54.6512 3.00565 55.1398 3.00565C55.5915 3.00565 55.985 3.10224 56.3202 3.29542C56.6583 3.4886 56.9196 3.76843 57.1043 4.13491C57.2918 4.50139 57.3841 4.94599 57.3813 5.46872V9.63633H55.8387V5.70735C55.8387 5.26985 55.725 4.92752 55.4977 4.68036C55.2733 4.43321 54.9622 4.30963 54.5645 4.30963C54.2946 4.30963 54.0546 4.36928 53.8443 4.4886C53.637 4.60508 53.4736 4.77411 53.3543 4.99571C53.2378 5.2173 53.1796 5.48576 53.1796 5.8011Z\",\n    fill: \"white\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgPython);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/python.afa3ecdb65c066d3d5ef731f90c21a6d.svg\";","var _path, _path2, _path3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgPytorch = function SvgPytorch(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 63,\n    height: 24,\n    viewBox: \"8 0 63 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1704 9.28555L16.202 10.254C17.7867 11.8386 17.7867 14.3916 16.202 15.947C14.6174 17.5316 12.0643 17.5316 10.509 15.947C8.92438 14.3623 8.92438 11.8093 10.509 10.254L13.0181 7.74492L13.3702 7.39278V5.5L9.58465 9.28555C7.47178 11.3984 7.47178 14.8025 9.58465 16.9153C11.6975 19.0282 15.1016 19.0282 17.1704 16.9153C19.2833 14.7878 19.2833 11.3984 17.1704 9.28555Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.9819 8.3465C15.9819 8.73547 15.6666 9.05079 15.2777 9.05079C14.8887 9.05079 14.5734 8.73547 14.5734 8.3465C14.5734 7.95752 14.8887 7.64221 15.2777 7.64221C15.6666 7.64221 15.9819 7.95752 15.9819 8.3465Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.9853 16V7.27273H27.258C27.9285 7.27273 28.491 7.39773 28.9455 7.64773C29.4029 7.89773 29.7481 8.24148 29.981 8.67898C30.2168 9.11364 30.3347 9.60795 30.3347 10.1619C30.3347 10.7216 30.2168 11.2187 29.981 11.6534C29.7452 12.0881 29.3972 12.4304 28.937 12.6804C28.4768 12.9276 27.91 13.0511 27.2367 13.0511H25.0677V11.7514H27.0236C27.4157 11.7514 27.7367 11.6832 27.9867 11.5469C28.2367 11.4105 28.4214 11.223 28.5407 10.9844C28.6628 10.7457 28.7239 10.4716 28.7239 10.1619C28.7239 9.85227 28.6628 9.57955 28.5407 9.34375C28.4214 9.10795 28.2353 8.92472 27.9824 8.79403C27.7324 8.66051 27.41 8.59375 27.0151 8.59375H25.5662V16H23.9853ZM32.5965 18.4545C32.3863 18.4545 32.1917 18.4375 32.0127 18.4034C31.8366 18.3722 31.696 18.3352 31.5908 18.2926L31.9488 17.0909C32.1732 17.1563 32.3735 17.1875 32.5496 17.1847C32.7258 17.1818 32.8806 17.1264 33.0141 17.0185C33.1505 16.9134 33.2656 16.7372 33.3593 16.4901L33.4914 16.1364L31.1178 9.45455H32.7542L34.2627 14.3977H34.3309L35.8437 9.45455H37.4843L34.8636 16.7926C34.7414 17.1392 34.5795 17.4361 34.3778 17.6832C34.1761 17.9332 33.9289 18.1236 33.6363 18.2543C33.3465 18.3878 32.9999 18.4545 32.5965 18.4545ZM37.8242 8.59801V7.27273H44.7873V8.59801H42.0899V16H40.5217V8.59801H37.8242ZM47.9653 16.1278C47.3261 16.1278 46.7721 15.9872 46.3034 15.706C45.8346 15.4247 45.471 15.0312 45.2125 14.5256C44.9568 14.0199 44.8289 13.429 44.8289 12.7528C44.8289 12.0767 44.9568 11.4844 45.2125 10.9759C45.471 10.4673 45.8346 10.0724 46.3034 9.79119C46.7721 9.50994 47.3261 9.36932 47.9653 9.36932C48.6045 9.36932 49.1585 9.50994 49.6272 9.79119C50.096 10.0724 50.4582 10.4673 50.7139 10.9759C50.9724 11.4844 51.1017 12.0767 51.1017 12.7528C51.1017 13.429 50.9724 14.0199 50.7139 14.5256C50.4582 15.0312 50.096 15.4247 49.6272 15.706C49.1585 15.9872 48.6045 16.1278 47.9653 16.1278ZM47.9738 14.892C48.3204 14.892 48.6102 14.7969 48.8431 14.6065C49.0761 14.4134 49.2494 14.1548 49.363 13.831C49.4795 13.5071 49.5378 13.1463 49.5378 12.7486C49.5378 12.348 49.4795 11.9858 49.363 11.6619C49.2494 11.3352 49.0761 11.0753 48.8431 10.8821C48.6102 10.6889 48.3204 10.5923 47.9738 10.5923C47.6187 10.5923 47.3233 10.6889 47.0875 10.8821C46.8545 11.0753 46.6798 11.3352 46.5633 11.6619C46.4497 11.9858 46.3929 12.348 46.3929 12.7486C46.3929 13.1463 46.4497 13.5071 46.5633 13.831C46.6798 14.1548 46.8545 14.4134 47.0875 14.6065C47.3233 14.7969 47.6187 14.892 47.9738 14.892ZM52.4089 16V9.45455H53.9047V10.5455H53.9729C54.0922 10.1676 54.2967 9.87642 54.5865 9.67188C54.8791 9.46449 55.2129 9.3608 55.5879 9.3608C55.6731 9.3608 55.7683 9.36506 55.8734 9.37358C55.9814 9.37926 56.0709 9.3892 56.1419 9.40341V10.8224C56.0766 10.7997 55.9729 10.7798 55.8308 10.7628C55.6916 10.7429 55.5567 10.733 55.426 10.733C55.1447 10.733 54.8919 10.794 54.6675 10.9162C54.4459 11.0355 54.2712 11.2017 54.1433 11.4148C54.0155 11.6278 53.9516 11.8736 53.9516 12.152V16H52.4089ZM59.7503 16.1278C59.0969 16.1278 58.5358 15.9844 58.0671 15.6974C57.6011 15.4105 57.2418 15.0142 56.9889 14.5085C56.7389 14 56.6139 13.4148 56.6139 12.7528C56.6139 12.0881 56.7418 11.5014 56.9974 10.9929C57.2531 10.4815 57.6139 10.0838 58.0798 9.79972C58.5486 9.51278 59.1026 9.36932 59.7418 9.36932C60.273 9.36932 60.7432 9.46733 61.1523 9.66335C61.5642 9.85653 61.8923 10.1307 62.1367 10.4858C62.381 10.8381 62.5202 11.25 62.5543 11.7216H61.0798C61.0202 11.4062 60.8781 11.1435 60.6537 10.9332C60.4321 10.7202 60.1352 10.6136 59.7631 10.6136C59.4477 10.6136 59.1707 10.6989 58.9321 10.8693C58.6935 11.0369 58.5074 11.2784 58.3739 11.5938C58.2432 11.9091 58.1778 12.2869 58.1778 12.7273C58.1778 13.1733 58.2432 13.5568 58.3739 13.8778C58.5046 14.196 58.6878 14.4418 58.9236 14.6151C59.1622 14.7855 59.4421 14.8707 59.7631 14.8707C59.9903 14.8707 60.1935 14.8281 60.3724 14.7429C60.5543 14.6548 60.7063 14.5284 60.8284 14.3636C60.9506 14.1989 61.0344 13.9986 61.0798 13.7628H62.5543C62.5173 14.2259 62.381 14.6364 62.1452 14.9943C61.9094 15.3494 61.5884 15.6278 61.1821 15.8295C60.7759 16.0284 60.2986 16.1278 59.7503 16.1278ZM65.3615 12.1648V16H63.8189V7.27273H65.3274V10.5668H65.4041C65.5576 10.1974 65.7948 9.90625 66.1158 9.69318C66.4397 9.47727 66.8516 9.36932 67.3516 9.36932C67.8061 9.36932 68.2024 9.46449 68.5405 9.65483C68.8786 9.84517 69.1399 10.1236 69.3246 10.4901C69.5121 10.8565 69.6059 11.304 69.6059 11.8324V16H68.0632V12.071C68.0632 11.6307 67.9496 11.2884 67.7223 11.044C67.4979 10.7969 67.1826 10.6733 66.7763 10.6733C66.5036 10.6733 66.2593 10.733 66.0434 10.8523C65.8303 10.9687 65.6627 11.1378 65.5405 11.3594C65.4212 11.581 65.3615 11.8494 65.3615 12.1648Z\",\n    fill: \"white\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgPytorch);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/pytorch.cdee5a1d92093f9999fa645e43dfb1f6.svg\";","var _g, _path, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgSlack = function SvgSlack(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 49,\n    height: 24,\n    viewBox: \"8 0 49 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1618_1441)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M12.7664 5.5C12.0478 5.50053 11.4662 6.08255 11.4667 6.79973C11.4662 7.51692 12.0483 8.09894 12.7669 8.09947H14.0671V6.80027C14.0677 6.08308 13.4855 5.50106 12.7664 5.5C12.7669 5.5 12.7669 5.5 12.7664 5.5V5.5ZM12.7664 8.96667H9.30021C8.58159 8.9672 7.99947 9.54922 8 10.2664C7.99894 10.9836 8.58106 11.5656 9.29968 11.5667H12.7664C13.485 11.5661 14.0671 10.9841 14.0666 10.2669C14.0671 9.54922 13.485 8.9672 12.7664 8.96667V8.96667Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M21 10.2664C21.0005 9.54922 20.4184 8.9672 19.6998 8.96667C18.9812 8.9672 18.399 9.54922 18.3996 10.2664V11.5667H19.6998C20.4184 11.5661 21.0005 10.9841 21 10.2664ZM17.5333 10.2664V6.79973C17.5338 6.08308 16.9522 5.50106 16.2336 5.5C15.515 5.50053 14.9329 6.08255 14.9334 6.79973V10.2664C14.9323 10.9836 15.5145 11.5656 16.2331 11.5667C16.9517 11.5661 17.5338 10.9841 17.5333 10.2664Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M16.2331 18.5C16.9517 18.4995 17.5338 17.9174 17.5333 17.2003C17.5338 16.4831 16.9517 15.9011 16.2331 15.9005H14.9329V17.2003C14.9323 17.9169 15.5145 18.4989 16.2331 18.5ZM16.2331 15.0328H19.6998C20.4184 15.0323 21.0005 14.4503 21 13.7331C21.0011 13.0159 20.4189 12.4339 19.7003 12.4328H16.2336C15.515 12.4333 14.9329 13.0153 14.9334 13.7325C14.9329 14.4503 15.5145 15.0323 16.2331 15.0328V15.0328Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 13.7331C7.99947 14.4503 8.58159 15.0323 9.30021 15.0328C10.0188 15.0323 10.601 14.4503 10.6004 13.7331V12.4333H9.30021C8.58159 12.4339 7.99947 13.0159 8 13.7331ZM11.4667 13.7331V17.1997C11.4656 17.9169 12.0478 18.4989 12.7664 18.5C13.485 18.4995 14.0671 17.9175 14.0666 17.2003V13.7341C14.0677 13.0169 13.4855 12.4349 12.7669 12.4339C12.0478 12.4339 11.4662 13.0159 11.4667 13.7331C11.4667 13.7336 11.4667 13.7331 11.4667 13.7331Z\",\n    fill: \"white\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.8226 9.67188C30.7828 9.29972 30.6152 9.00994 30.3198 8.80256C30.0272 8.59517 29.6465 8.49148 29.1777 8.49148C28.8482 8.49148 28.5655 8.54119 28.3297 8.64062C28.0939 8.74006 27.9135 8.875 27.7885 9.04545C27.6635 9.21591 27.5996 9.41051 27.5968 9.62926C27.5968 9.81108 27.638 9.96875 27.7203 10.1023C27.8056 10.2358 27.9206 10.3494 28.0655 10.4432C28.2104 10.5341 28.3709 10.6108 28.547 10.6733C28.7232 10.7358 28.9007 10.7884 29.0797 10.831L29.8979 11.0355C30.2274 11.1122 30.5442 11.2159 30.8482 11.3466C31.155 11.4773 31.4292 11.642 31.6706 11.8409C31.9149 12.0398 32.1081 12.2798 32.2502 12.5611C32.3922 12.8423 32.4632 13.1719 32.4632 13.5497C32.4632 14.0611 32.3326 14.5114 32.0712 14.9006C31.8098 15.2869 31.432 15.5895 30.9377 15.8082C30.4462 16.0241 29.851 16.1321 29.1522 16.1321C28.4732 16.1321 27.8837 16.027 27.3837 15.8168C26.8865 15.6065 26.4973 15.2997 26.2161 14.8963C25.9377 14.4929 25.7871 14.0014 25.7644 13.4219H27.3198C27.3425 13.7259 27.4363 13.9787 27.601 14.1804C27.7658 14.3821 27.9803 14.5327 28.2445 14.6321C28.5115 14.7315 28.8098 14.7812 29.1394 14.7812C29.4831 14.7812 29.7843 14.7301 30.0428 14.6278C30.3042 14.5227 30.5087 14.3778 30.6564 14.1932C30.8042 14.0057 30.8794 13.7869 30.8823 13.5369C30.8794 13.3097 30.8127 13.1222 30.682 12.9744C30.5513 12.8239 30.3681 12.6989 30.1323 12.5994C29.8993 12.4972 29.6266 12.4062 29.3141 12.3267L28.3212 12.071C27.6024 11.8864 27.0343 11.6065 26.6167 11.2315C26.2019 10.8537 25.9945 10.3523 25.9945 9.72727C25.9945 9.21307 26.1337 8.76278 26.4121 8.37642C26.6934 7.99006 27.0755 7.69034 27.5584 7.47727C28.0414 7.26136 28.5882 7.15341 29.199 7.15341C29.8184 7.15341 30.361 7.26136 30.8269 7.47727C31.2956 7.69034 31.6635 7.98722 31.9306 8.3679C32.1976 8.74574 32.3354 9.1804 32.3439 9.67188H30.8226ZM35.3451 7.27273V16H33.8025V7.27273H35.3451ZM38.8129 16.1321C38.3981 16.1321 38.0245 16.0582 37.6921 15.9105C37.3626 15.7599 37.1012 15.5384 36.908 15.2457C36.7177 14.9531 36.6225 14.5923 36.6225 14.1634C36.6225 13.794 36.6907 13.4886 36.8271 13.2472C36.9634 13.0057 37.1495 12.8125 37.3853 12.6676C37.6211 12.5227 37.8867 12.4134 38.1822 12.3395C38.4805 12.2628 38.7887 12.2074 39.1069 12.1733C39.4904 12.1335 39.8015 12.098 40.0401 12.0668C40.2788 12.0327 40.4521 11.9815 40.56 11.9134C40.6708 11.8423 40.7262 11.733 40.7262 11.5852V11.5597C40.7262 11.2386 40.631 10.9901 40.4407 10.8139C40.2504 10.6378 39.9762 10.5497 39.6183 10.5497C39.2404 10.5497 38.9407 10.6321 38.7191 10.7969C38.5004 10.9616 38.3526 11.1562 38.2759 11.3807L36.8356 11.1761C36.9492 10.7784 37.1367 10.446 37.3981 10.179C37.6594 9.90909 37.979 9.70739 38.3569 9.57386C38.7347 9.4375 39.1523 9.36932 39.6097 9.36932C39.9251 9.36932 40.239 9.40625 40.5515 9.48011C40.864 9.55398 41.1495 9.67614 41.408 9.84659C41.6665 10.0142 41.8739 10.2429 42.0302 10.5327C42.1893 10.8224 42.2688 11.1847 42.2688 11.6193V16H40.7859V15.1009H40.7347C40.641 15.2827 40.5089 15.4531 40.3384 15.6122C40.1708 15.7685 39.9592 15.8949 39.7035 15.9915C39.4506 16.0852 39.1538 16.1321 38.8129 16.1321ZM39.2134 14.9986C39.5231 14.9986 39.7915 14.9375 40.0188 14.8153C40.2461 14.6903 40.4208 14.5256 40.543 14.321C40.668 14.1165 40.7305 13.8935 40.7305 13.652V12.8807C40.6822 12.9205 40.5998 12.9574 40.4833 12.9915C40.3697 13.0256 40.2418 13.0554 40.0998 13.081C39.9577 13.1065 39.8171 13.1293 39.6779 13.1491C39.5387 13.169 39.418 13.1861 39.3157 13.2003C39.0856 13.2315 38.8796 13.2827 38.6978 13.3537C38.516 13.4247 38.3725 13.5241 38.2674 13.652C38.1623 13.777 38.1097 13.9389 38.1097 14.1378C38.1097 14.4219 38.2134 14.6364 38.4208 14.7812C38.6282 14.9261 38.8924 14.9986 39.2134 14.9986ZM46.673 16.1278C46.0196 16.1278 45.4585 15.9844 44.9898 15.6974C44.5239 15.4105 44.1645 15.0142 43.9117 14.5085C43.6617 14 43.5367 13.4148 43.5367 12.7528C43.5367 12.0881 43.6645 11.5014 43.9202 10.9929C44.1759 10.4815 44.5367 10.0838 45.0026 9.79972C45.4713 9.51278 46.0253 9.36932 46.6645 9.36932C47.1958 9.36932 47.6659 9.46733 48.075 9.66335C48.487 9.85653 48.8151 10.1307 49.0594 10.4858C49.3037 10.8381 49.4429 11.25 49.477 11.7216H48.0026C47.9429 11.4062 47.8009 11.1435 47.5764 10.9332C47.3548 10.7202 47.058 10.6136 46.6858 10.6136C46.3705 10.6136 46.0935 10.6989 45.8548 10.8693C45.6162 11.0369 45.4301 11.2784 45.2966 11.5938C45.1659 11.9091 45.1006 12.2869 45.1006 12.7273C45.1006 13.1733 45.1659 13.5568 45.2966 13.8778C45.4273 14.196 45.6105 14.4418 45.8463 14.6151C46.085 14.7855 46.3648 14.8707 46.6858 14.8707C46.9131 14.8707 47.1162 14.8281 47.2952 14.7429C47.477 14.6548 47.629 14.5284 47.7512 14.3636C47.8733 14.1989 47.9571 13.9986 48.0026 13.7628H49.477C49.4401 14.2259 49.3037 14.6364 49.0679 14.9943C48.8321 15.3494 48.5111 15.6278 48.1048 15.8295C47.6986 16.0284 47.2213 16.1278 46.673 16.1278ZM52.1479 13.946L52.1436 12.0838H52.3908L54.7431 9.45455H56.5456L53.6522 12.6761H53.3326L52.1479 13.946ZM50.7417 16V7.27273H52.2843V16H50.7417ZM54.8496 16L52.7189 13.0213L53.7587 11.9347L56.6948 16H54.8496Z\",\n    fill: \"white\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1618_1441\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 13,\n    height: 13,\n    fill: \"white\",\n    transform: \"translate(8 5.5)\"\n  })))));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgSlack);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/slack.6905013128d5a67c8ee26260be78303b.svg\";","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgSnowflake = function SvgSnowflake(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 77,\n    height: 13,\n    viewBox: \"0 0 77 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.1444 9.90771L8.40026 8.32243C8.01475 8.10047 7.52176 8.23248 7.29863 8.61799C7.21218 8.76986 7.1783 8.93692 7.19466 9.0993V12.1974C7.19466 12.6402 7.55447 13 7.9984 13C8.44115 13 8.80097 12.6402 8.80097 12.1974V10.4159L10.3383 11.3037C10.7239 11.5269 11.218 11.3937 11.44 11.0082C11.6631 10.6227 11.5311 10.1297 11.1444 9.90771Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.31953 6.51051C4.3242 6.2243 4.1735 5.95794 3.92584 5.81425L1.18168 4.23014C1.06252 4.16121 0.92584 4.125 0.789158 4.125C0.507616 4.125 0.245933 4.2757 0.105746 4.51869C-0.111543 4.89486 0.0181298 5.37734 0.394298 5.59463L1.97607 6.50701L0.394298 7.42056C0.212055 7.5257 0.0812138 7.69509 0.0274756 7.89836C-0.027431 8.10164 0.000606359 8.31425 0.105746 8.4965C0.245933 8.73949 0.507616 8.89019 0.787989 8.89019C0.92584 8.89019 1.06252 8.85397 1.18168 8.78505L3.92584 7.20093C4.17117 7.05841 4.32187 6.79439 4.31953 6.51051Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.80443 3.10748L4.54859 4.69159C4.86868 4.87734 5.26354 4.81659 5.51588 4.57009C5.67592 4.4229 5.77522 4.21262 5.77522 3.97897V0.803738C5.77522 0.359813 5.41541 0 4.97265 0C4.52873 0 4.16891 0.359813 4.16891 0.803738V2.61098L2.6105 1.71145C2.22499 1.48832 1.732 1.62033 1.50887 2.00584C1.28574 2.39136 1.41891 2.88435 1.80443 3.10748Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.97489 6.63904C7.97489 6.69978 7.93984 6.7839 7.89662 6.82829L6.809 7.91591C6.76578 7.95913 6.6805 7.99418 6.61975 7.99418H6.34288C6.28213 7.99418 6.19685 7.95913 6.15363 7.91591L5.06484 6.82829C5.02162 6.7839 4.98657 6.69978 4.98657 6.63904V6.36217C4.98657 6.30025 5.02162 6.21614 5.06484 6.17292L6.15363 5.08413C6.19685 5.04091 6.28213 5.00586 6.34288 5.00586H6.61975C6.6805 5.00586 6.76578 5.04091 6.809 5.08413L7.89662 6.17292C7.93984 6.21614 7.97489 6.30025 7.97489 6.36217V6.63904ZM7.0041 6.50586V6.49418C7.0041 6.44978 6.97839 6.38787 6.94685 6.35516L6.62559 6.03506C6.59405 6.00235 6.53213 5.97665 6.48657 5.97665H6.47489C6.4305 5.97665 6.36858 6.00235 6.33587 6.03506L6.01578 6.35516C5.98424 6.3867 5.95853 6.44862 5.95853 6.49418V6.50586C5.95853 6.55142 5.98424 6.61334 6.01578 6.64488L6.33587 6.96614C6.36858 6.99768 6.4305 7.02338 6.47489 7.02338H6.48657C6.53213 7.02338 6.59405 6.99768 6.62559 6.96614L6.94685 6.64488C6.97839 6.61334 7.0041 6.55142 7.0041 6.50586Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.40019 4.69159L11.1443 3.10748C11.5299 2.88551 11.663 2.39136 11.4399 2.00584C11.2168 1.62033 10.7238 1.48832 10.3383 1.71145L8.80089 2.5993V0.803738C8.80089 0.359813 8.44108 0 7.99832 0C7.55439 0 7.19458 0.359813 7.19458 0.803738V3.91589C7.17939 4.0771 7.21094 4.24533 7.29855 4.3972C7.52168 4.78271 8.01467 4.91472 8.40019 4.69159Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.09882 8.22894C4.91658 8.1939 4.72148 8.2231 4.54859 8.3224L1.80443 9.90768C1.41891 10.1296 1.28574 10.6226 1.50887 11.0081C1.732 11.3948 2.22499 11.5268 2.6105 11.3037L4.16891 10.4042V12.1974C4.16891 12.6402 4.52873 13 4.97265 13C5.41541 13 5.77522 12.6402 5.77522 12.1974V9.02217C5.77522 8.62147 5.482 8.28969 5.09882 8.22894Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.8593 4.50939C12.6373 4.12271 12.1432 3.9907 11.7577 4.21383L9.0135 5.79794C8.75065 5.94981 8.60579 6.22785 8.61046 6.51056C8.60812 6.7921 8.75298 7.06664 9.0135 7.21617L11.7577 8.80145C12.1432 9.02341 12.6362 8.8914 12.8593 8.50589C13.0824 8.12038 12.9492 7.62738 12.5637 7.40425L11.01 6.50706L12.5637 5.60986C12.9504 5.3879 13.0824 4.89491 12.8593 4.50939Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.026 4.67396C21.9862 4.3018 21.8186 4.01203 21.5232 3.80464C21.2306 3.59726 20.8499 3.49356 20.3811 3.49356C20.0516 3.49356 19.7689 3.54328 19.5331 3.64271C19.2973 3.74214 19.1169 3.87709 18.9919 4.04754C18.8669 4.218 18.803 4.4126 18.8002 4.63135C18.8002 4.81317 18.8414 4.97084 18.9237 5.10436C19.009 5.23788 19.124 5.35152 19.2689 5.44527C19.4138 5.53618 19.5743 5.61288 19.7504 5.67538C19.9266 5.73788 20.1041 5.79044 20.2831 5.83305L21.1013 6.0376C21.4308 6.1143 21.7476 6.218 22.0516 6.34868C22.3584 6.47936 22.6325 6.64413 22.874 6.843C23.1183 7.04186 23.3115 7.28192 23.4536 7.56317C23.5956 7.84442 23.6666 8.17396 23.6666 8.5518C23.6666 9.06317 23.536 9.51345 23.2746 9.90265C23.0132 10.289 22.6354 10.5916 22.1411 10.8103C21.6496 11.0262 21.0544 11.1342 20.3556 11.1342C19.6766 11.1342 19.0871 11.0291 18.5871 10.8188C18.0899 10.6086 17.7007 10.3018 17.4195 9.89839C17.1411 9.49498 16.9905 9.00351 16.9678 8.42396H18.5232C18.5459 8.72794 18.6396 8.98078 18.8044 9.18248C18.9692 9.38419 19.1837 9.53476 19.4479 9.63419C19.7149 9.73362 20.0132 9.78334 20.3428 9.78334C20.6865 9.78334 20.9877 9.7322 21.2462 9.62993C21.5075 9.52481 21.7121 9.37993 21.8598 9.19527C22.0075 9.00777 22.0828 8.78902 22.0857 8.53902C22.0828 8.31175 22.0161 8.12425 21.8854 7.97652C21.7547 7.82595 21.5715 7.70095 21.3357 7.60152C21.1027 7.49925 20.83 7.40834 20.5175 7.32879L19.5246 7.07311C18.8058 6.88845 18.2377 6.60862 17.82 6.23362C17.4053 5.85578 17.1979 5.35436 17.1979 4.72936C17.1979 4.21515 17.3371 3.76487 17.6155 3.37851C17.8968 2.99214 18.2789 2.69243 18.7618 2.47936C19.2448 2.26345 19.7916 2.1555 20.4024 2.1555C21.0218 2.1555 21.5644 2.26345 22.0303 2.47936C22.499 2.69243 22.8669 2.9893 23.134 3.36998C23.401 3.74782 23.5388 4.18248 23.5473 4.67396H22.026Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.5485 7.16686V11.0021H25.0059V4.45663H26.4803V5.56885H26.557C26.7076 5.20237 26.9476 4.91118 27.2772 4.69527C27.6096 4.47936 28.0201 4.3714 28.5087 4.3714C28.9604 4.3714 29.3539 4.468 29.6891 4.66118C30.0272 4.85436 30.2885 5.13419 30.4732 5.50067C30.6607 5.86714 30.753 6.31175 30.7502 6.83447V11.0021H29.2076V7.07311C29.2076 6.63561 29.0939 6.29328 28.8667 6.04612C28.6422 5.79896 28.3311 5.67538 27.9334 5.67538C27.6635 5.67538 27.4235 5.73504 27.2132 5.85436C27.0059 5.97084 26.8425 6.13987 26.7232 6.36146C26.6067 6.58305 26.5485 6.85152 26.5485 7.16686Z\",\n    fill: \"white\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.1714 11.1299C34.5322 11.1299 33.9783 10.9893 33.5095 10.7081C33.0408 10.4268 32.6771 10.0333 32.4186 9.52765C32.1629 9.02197 32.0351 8.43106 32.0351 7.75493C32.0351 7.07879 32.1629 6.48646 32.4186 5.97794C32.6771 5.46942 33.0408 5.07453 33.5095 4.79328C33.9783 4.51203 34.5322 4.3714 35.1714 4.3714C35.8106 4.3714 36.3646 4.51203 36.8334 4.79328C37.3021 5.07453 37.6643 5.46942 37.92 5.97794C38.1785 6.48646 38.3078 7.07879 38.3078 7.75493C38.3078 8.43106 38.1785 9.02197 37.92 9.52765C37.6643 10.0333 37.3021 10.4268 36.8334 10.7081C36.3646 10.9893 35.8106 11.1299 35.1714 11.1299ZM35.18 9.89413C35.5265 9.89413 35.8163 9.79896 36.0493 9.60862C36.2822 9.41544 36.4555 9.15692 36.5692 8.83305C36.6856 8.50919 36.7439 8.14839 36.7439 7.75067C36.7439 7.3501 36.6856 6.98788 36.5692 6.66402C36.4555 6.33731 36.2822 6.07737 36.0493 5.88419C35.8163 5.69101 35.5265 5.59442 35.18 5.59442C34.8248 5.59442 34.5294 5.69101 34.2936 5.88419C34.0606 6.07737 33.8859 6.33731 33.7694 6.66402C33.6558 6.98788 33.599 7.3501 33.599 7.75067C33.599 8.14839 33.6558 8.50919 33.7694 8.83305C33.8859 9.15692 34.0606 9.41544 34.2936 9.60862C34.5294 9.79896 34.8248 9.89413 35.18 9.89413Z\",\n    fill: \"white\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.7784 11.0021L38.929 4.45663H40.5014L41.652 9.0589H41.7117L42.8878 4.45663H44.4432L45.6193 9.03334H45.6832L46.8168 4.45663H48.3935L46.5398 11.0021H44.9332L43.706 6.57879H43.6165L42.3892 11.0021H40.7784Z\",\n    fill: \"white\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.7838 4.45663V5.64981H48.9145V4.45663H52.7838ZM49.8818 11.0021V3.83873C49.8818 3.39839 49.9728 3.03192 50.1546 2.7393C50.3392 2.44669 50.5864 2.22794 50.896 2.08305C51.2057 1.93817 51.5495 1.86572 51.9273 1.86572C52.1943 1.86572 52.4316 1.88703 52.6389 1.92964C52.8463 1.97226 52.9997 2.01061 53.0992 2.0447L52.7924 3.23788C52.727 3.218 52.6446 3.19811 52.5452 3.17822C52.4458 3.1555 52.335 3.14413 52.2128 3.14413C51.9259 3.14413 51.7227 3.21373 51.6034 3.35294C51.487 3.4893 51.4287 3.68532 51.4287 3.94101V11.0021H49.8818Z\",\n    fill: \"white\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.5325 2.27481V11.0021H53.9899V2.27481H55.5325Z\",\n    fill: \"white\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.0003 11.1342C58.5855 11.1342 58.2119 11.0603 57.8795 10.9126C57.55 10.762 57.2886 10.5404 57.0954 10.2478C56.9051 9.95521 56.8099 9.59442 56.8099 9.16544C56.8099 8.79612 56.8781 8.49072 57.0145 8.24925C57.1508 8.00777 57.3369 7.81459 57.5727 7.6697C57.8085 7.52481 58.0741 7.41544 58.3696 7.34158C58.6679 7.26487 58.9761 7.20947 59.2943 7.17538C59.6778 7.13561 59.9889 7.1001 60.2275 7.06885C60.4662 7.03476 60.6395 6.98362 60.7474 6.91544C60.8582 6.84442 60.9136 6.73504 60.9136 6.58731V6.56175C60.9136 6.24072 60.8185 5.99214 60.6281 5.81601C60.4378 5.63987 60.1636 5.5518 59.8057 5.5518C59.4278 5.5518 59.1281 5.63419 58.9065 5.79896C58.6878 5.96373 58.54 6.15834 58.4633 6.38277L57.023 6.17822C57.1366 5.7805 57.3241 5.44811 57.5855 5.18106C57.8469 4.91118 58.1665 4.70947 58.5443 4.57595C58.9221 4.43959 59.3398 4.3714 59.7971 4.3714C60.1125 4.3714 60.4264 4.40834 60.7389 4.4822C61.0514 4.55606 61.3369 4.67822 61.5954 4.84868C61.854 5.01629 62.0614 5.24498 62.2176 5.53476C62.3767 5.82453 62.4562 6.18675 62.4562 6.6214V11.0021H60.9733V10.1029H60.9221C60.8284 10.2848 60.6963 10.4552 60.5258 10.6143C60.3582 10.7706 60.1466 10.897 59.8909 10.9936C59.6381 11.0873 59.3412 11.1342 59.0003 11.1342ZM59.4008 10.0007C59.7105 10.0007 59.979 9.93959 60.2062 9.81743C60.4335 9.69243 60.6082 9.52766 60.7304 9.32311C60.8554 9.11856 60.9179 8.89555 60.9179 8.65408V7.88277C60.8696 7.92254 60.7872 7.95947 60.6707 7.99356C60.5571 8.02765 60.4293 8.05748 60.2872 8.08305C60.1452 8.10862 60.0045 8.13135 59.8653 8.15123C59.7261 8.17112 59.6054 8.18817 59.5031 8.20237C59.273 8.23362 59.067 8.28476 58.8852 8.35578C58.7034 8.4268 58.5599 8.52623 58.4548 8.65408C58.3497 8.77908 58.2971 8.94101 58.2971 9.13987C58.2971 9.42396 58.4008 9.63845 58.6082 9.78334C58.8156 9.92822 59.0798 10.0007 59.4008 10.0007Z\",\n    fill: \"white\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.4116 8.94811L65.4073 7.08589H65.6545L68.0068 4.45663H69.8093L66.9159 7.67822H66.5962L65.4116 8.94811ZM64.0053 11.0021V2.27481H65.548V11.0021H64.0053ZM68.1133 11.0021L65.9826 8.02339L67.0224 6.93675L69.9585 11.0021H68.1133Z\",\n    fill: \"white\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.4635 11.1299C72.8073 11.1299 72.2405 10.9936 71.7632 10.7208C71.2888 10.4453 70.9238 10.0561 70.6681 9.55322C70.4124 9.04754 70.2845 8.45237 70.2845 7.76771C70.2845 7.09442 70.4124 6.50351 70.6681 5.99498C70.9266 5.48362 71.2874 5.08589 71.7505 4.8018C72.2135 4.51487 72.7576 4.3714 73.3826 4.3714C73.786 4.3714 74.1667 4.43675 74.5246 4.56743C74.8854 4.69527 75.2036 4.89413 75.4792 5.16402C75.7576 5.43391 75.9763 5.77765 76.1354 6.19527C76.2945 6.61004 76.374 7.10436 76.374 7.67822V8.15123H71.009V7.11146H74.8953C74.8925 6.81601 74.8286 6.55322 74.7036 6.32311C74.5786 6.09016 74.4039 5.90692 74.1794 5.77339C73.9578 5.63987 73.6993 5.57311 73.4039 5.57311C73.0885 5.57311 72.8115 5.64981 72.5729 5.80322C72.3343 5.95379 72.1482 6.15265 72.0147 6.39981C71.884 6.64413 71.8172 6.9126 71.8144 7.20521V8.11288C71.8144 8.49356 71.884 8.82027 72.0232 9.093C72.1624 9.36288 72.357 9.57027 72.607 9.71515C72.857 9.8572 73.1496 9.92822 73.4848 9.92822C73.7093 9.92822 73.9124 9.89697 74.0942 9.83447C74.276 9.76913 74.4337 9.67396 74.5672 9.54896C74.7007 9.42396 74.8016 9.26913 74.8698 9.08447L76.3101 9.2464C76.2192 9.62709 76.0459 9.95947 75.7902 10.2436C75.5374 10.5248 75.2135 10.7436 74.8186 10.8998C74.4238 11.0532 73.9721 11.1299 73.4635 11.1299Z\",\n    fill: \"white\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgSnowflake);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/snowflake.e039c6fc0f20c698bee75e463ecbf234.svg\";","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgSql = function SvgSql(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"8 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.6585 9.67188C13.6187 9.29972 13.4511 9.00994 13.1556 8.80256C12.863 8.59517 12.4823 8.49148 12.0136 8.49148C11.684 8.49148 11.4014 8.54119 11.1656 8.64062C10.9298 8.74006 10.7494 8.875 10.6244 9.04545C10.4994 9.21591 10.4355 9.41051 10.4326 9.62926C10.4326 9.81108 10.4738 9.96875 10.5562 10.1023C10.6414 10.2358 10.7565 10.3494 10.9014 10.4432C11.0463 10.5341 11.2068 10.6108 11.3829 10.6733C11.559 10.7358 11.7366 10.7884 11.9156 10.831L12.7338 11.0355C13.0633 11.1122 13.3801 11.2159 13.684 11.3466C13.9909 11.4773 14.265 11.642 14.5065 11.8409C14.7508 12.0398 14.944 12.2798 15.086 12.5611C15.2281 12.8423 15.2991 13.1719 15.2991 13.5497C15.2991 14.0611 15.1684 14.5114 14.907 14.9006C14.6457 15.2869 14.2678 15.5895 13.7735 15.8082C13.282 16.0241 12.6869 16.1321 11.988 16.1321C11.309 16.1321 10.7195 16.027 10.2195 15.8168C9.72239 15.6065 9.33318 15.2997 9.05193 14.8963C8.77352 14.4929 8.62296 14.0014 8.60023 13.4219H10.1556C10.1784 13.7259 10.2721 13.9787 10.4369 14.1804C10.6016 14.3821 10.8161 14.5327 11.0803 14.6321C11.3474 14.7315 11.6457 14.7812 11.9752 14.7812C12.319 14.7812 12.6201 14.7301 12.8786 14.6278C13.14 14.5227 13.3445 14.3778 13.4923 14.1932C13.64 14.0057 13.7153 13.7869 13.7181 13.5369C13.7153 13.3097 13.6485 13.1222 13.5178 12.9744C13.3872 12.8239 13.2039 12.6989 12.9681 12.5994C12.7352 12.4972 12.4624 12.4062 12.1499 12.3267L11.157 12.071C10.4383 11.8864 9.87012 11.6065 9.4525 11.2315C9.03773 10.8537 8.83034 10.3523 8.83034 9.72727C8.83034 9.21307 8.96955 8.76278 9.24796 8.37642C9.52921 7.99006 9.91131 7.69034 10.3943 7.47727C10.8772 7.26136 11.4241 7.15341 12.0349 7.15341C12.6542 7.15341 13.1968 7.26136 13.6627 7.47727C14.1315 7.69034 14.4994 7.98722 14.7664 8.3679C15.0335 8.74574 15.1713 9.1804 15.1798 9.67188H13.6585ZM19.9579 13.0682H21.3897L22.2377 14.1676L22.8429 14.8835L24.296 16.75H22.7619L21.7733 15.4972L21.3514 14.9006L19.9579 13.0682ZM24.5048 11.6364C24.5048 12.5767 24.3287 13.3821 23.9764 14.0526C23.627 14.7202 23.1497 15.2315 22.5446 15.5866C21.9423 15.9418 21.2591 16.1193 20.4949 16.1193C19.7306 16.1193 19.046 15.9418 18.4409 15.5866C17.8386 15.2287 17.3613 14.7159 17.0091 14.0483C16.6596 13.3778 16.4849 12.5739 16.4849 11.6364C16.4849 10.696 16.6596 9.89205 17.0091 9.22443C17.3613 8.55398 17.8386 8.04119 18.4409 7.68608C19.046 7.33097 19.7306 7.15341 20.4949 7.15341C21.2591 7.15341 21.9423 7.33097 22.5446 7.68608C23.1497 8.04119 23.627 8.55398 23.9764 9.22443C24.3287 9.89205 24.5048 10.696 24.5048 11.6364ZM22.9153 11.6364C22.9153 10.9744 22.8116 10.4162 22.6042 9.96165C22.3997 9.50426 22.1156 9.15909 21.752 8.92614C21.3883 8.69034 20.9693 8.57244 20.4949 8.57244C20.0204 8.57244 19.6014 8.69034 19.2377 8.92614C18.8741 9.15909 18.5886 9.50426 18.3812 9.96165C18.1767 10.4162 18.0744 10.9744 18.0744 11.6364C18.0744 12.2983 18.1767 12.858 18.3812 13.3153C18.5886 13.7699 18.8741 14.1151 19.2377 14.3509C19.6014 14.5838 20.0204 14.7003 20.4949 14.7003C20.9693 14.7003 21.3883 14.5838 21.752 14.3509C22.1156 14.1151 22.3997 13.7699 22.6042 13.3153C22.8116 12.858 22.9153 12.2983 22.9153 11.6364ZM26.0091 16V7.27273H27.5901V14.6747H31.4339V16H26.0091Z\",\n    fill: \"white\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgSql);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/sql.0fb60aaa7dc142ce1bd710a811639bc7.svg\";","var _path, _g, _path2, _g2, _path3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\n\nvar SvgTensorflow = function SvgTensorflow(_ref, ref) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 84,\n    height: 24,\n    viewBox: \"8 0 84 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_1618_1436\",\n    style: {\n      maskType: \"alpha\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 14,\n    y: 5,\n    width: 6,\n    height: 14\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.616 8.6635L14.0551 5.5V18.5L16.2795 17.2148V13.557L17.9601 14.5209L17.9354 12.0247L16.2795 11.0608V9.60266L19.616 11.5551V8.6635Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_1618_1436)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.48092 5.45058H21.1235V18.5247H7.48092V5.45058Z\",\n    fill: \"#171615\"\n  }))), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask1_1618_1436\",\n    style: {\n      maskType: \"alpha\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 8,\n    y: 5,\n    width: 6,\n    height: 14\n  }, _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 8.6635L13.5608 5.5V18.5L11.3365 17.2148V9.60266L8 11.5551V8.6635Z\",\n    fill: \"white\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask1_1618_1436)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.40687 5.45058H21.0495V18.5247H7.40687V5.45058Z\",\n    fill: \"#171615\"\n  }))), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.4227 8.59801V7.27273H31.3858V8.59801H28.6884V16H27.1202V8.59801H24.4227ZM34.6064 16.1278C33.9502 16.1278 33.3834 15.9915 32.9061 15.7188C32.4317 15.4432 32.0666 15.054 31.811 14.5511C31.5553 14.0455 31.4274 13.4503 31.4274 12.7656C31.4274 12.0923 31.5553 11.5014 31.811 10.9929C32.0695 10.4815 32.4303 10.0838 32.8933 9.79972C33.3564 9.51278 33.9004 9.36932 34.5254 9.36932C34.9289 9.36932 35.3095 9.43466 35.6675 9.56534C36.0283 9.69318 36.3465 9.89205 36.622 10.1619C36.9004 10.4318 37.1192 10.7756 37.2783 11.1932C37.4374 11.608 37.5169 12.1023 37.5169 12.6761V13.1491H32.1519V12.1094H36.0382C36.0354 11.8139 35.9715 11.5511 35.8465 11.321C35.7215 11.0881 35.5468 10.9048 35.3223 10.7713C35.1007 10.6378 34.8422 10.571 34.5468 10.571C34.2314 10.571 33.9544 10.6477 33.7158 10.8011C33.4772 10.9517 33.2911 11.1506 33.1576 11.3977C33.0269 11.642 32.9601 11.9105 32.9573 12.2031V13.1108C32.9573 13.4915 33.0269 13.8182 33.1661 14.0909C33.3053 14.3608 33.4999 14.5682 33.7499 14.7131C33.9999 14.8551 34.2925 14.9261 34.6277 14.9261C34.8522 14.9261 35.0553 14.8949 35.2371 14.8324C35.4189 14.767 35.5766 14.6719 35.7101 14.5469C35.8436 14.4219 35.9445 14.267 36.0127 14.0824L37.453 14.2443C37.3621 14.625 37.1888 14.9574 36.9331 15.2415C36.6803 15.5227 36.3564 15.7415 35.9615 15.8977C35.5666 16.0511 35.1149 16.1278 34.6064 16.1278ZM40.3625 12.1648V16H38.8199V9.45455H40.2944V10.5668H40.3711C40.5216 10.2003 40.7617 9.90909 41.0912 9.69318C41.4236 9.47727 41.8341 9.36932 42.3228 9.36932C42.7745 9.36932 43.1679 9.46591 43.5032 9.65909C43.8412 9.85227 44.1026 10.1321 44.2873 10.4986C44.4748 10.8651 44.5671 11.3097 44.5642 11.8324V16H43.0216V12.071C43.0216 11.6335 42.908 11.2912 42.6807 11.044C42.4563 10.7969 42.1452 10.6733 41.7475 10.6733C41.4776 10.6733 41.2375 10.733 41.0273 10.8523C40.8199 10.9687 40.6566 11.1378 40.5373 11.3594C40.4208 11.581 40.3625 11.8494 40.3625 12.1648ZM51.3037 11.1847L49.8974 11.3381C49.8577 11.196 49.7881 11.0625 49.6886 10.9375C49.592 10.8125 49.4614 10.7116 49.2966 10.6349C49.1318 10.5582 48.9301 10.5199 48.6915 10.5199C48.3704 10.5199 48.1006 10.5895 47.8818 10.7287C47.6659 10.8679 47.5594 11.0483 47.5622 11.2699C47.5594 11.4602 47.629 11.6151 47.771 11.7344C47.9159 11.8537 48.1545 11.9517 48.4869 12.0284L49.6034 12.267C50.2227 12.4006 50.6829 12.6122 50.9841 12.902C51.2881 13.1918 51.4415 13.571 51.4443 14.0398C51.4415 14.4517 51.3207 14.8153 51.0821 15.1307C50.8463 15.4432 50.5182 15.6875 50.0977 15.8636C49.6773 16.0398 49.1943 16.1278 48.6489 16.1278C47.8477 16.1278 47.2028 15.9602 46.7142 15.625C46.2256 15.2869 45.9344 14.8168 45.8406 14.2145L47.3449 14.0696C47.4131 14.3651 47.5579 14.5881 47.7795 14.7386C48.0011 14.8892 48.2895 14.9645 48.6446 14.9645C49.0111 14.9645 49.3051 14.8892 49.5267 14.7386C49.7511 14.5881 49.8633 14.402 49.8633 14.1804C49.8633 13.9929 49.7909 13.8381 49.646 13.7159C49.504 13.5937 49.2824 13.5 48.9812 13.4347L47.8648 13.2003C47.2369 13.0696 46.7724 12.8494 46.4713 12.5398C46.1702 12.2273 46.021 11.8324 46.0239 11.3551C46.021 10.9517 46.1304 10.6023 46.352 10.3068C46.5764 10.0085 46.8875 9.77841 47.2852 9.61648C47.6858 9.4517 48.1474 9.36932 48.6702 9.36932C49.4372 9.36932 50.0409 9.53267 50.4812 9.85938C50.9244 10.1861 51.1986 10.6278 51.3037 11.1847ZM55.5694 16.1278C54.9302 16.1278 54.3762 15.9872 53.9075 15.706C53.4387 15.4247 53.0751 15.0312 52.8166 14.5256C52.5609 14.0199 52.433 13.429 52.433 12.7528C52.433 12.0767 52.5609 11.4844 52.8166 10.9759C53.0751 10.4673 53.4387 10.0724 53.9075 9.79119C54.3762 9.50994 54.9302 9.36932 55.5694 9.36932C56.2086 9.36932 56.7626 9.50994 57.2313 9.79119C57.7001 10.0724 58.0623 10.4673 58.318 10.9759C58.5765 11.4844 58.7058 12.0767 58.7058 12.7528C58.7058 13.429 58.5765 14.0199 58.318 14.5256C58.0623 15.0312 57.7001 15.4247 57.2313 15.706C56.7626 15.9872 56.2086 16.1278 55.5694 16.1278ZM55.5779 14.892C55.9245 14.892 56.2143 14.7969 56.4472 14.6065C56.6802 14.4134 56.8535 14.1548 56.9671 13.831C57.0836 13.5071 57.1418 13.1463 57.1418 12.7486C57.1418 12.348 57.0836 11.9858 56.9671 11.6619C56.8535 11.3352 56.6802 11.0753 56.4472 10.8821C56.2143 10.6889 55.9245 10.5923 55.5779 10.5923C55.2228 10.5923 54.9274 10.6889 54.6916 10.8821C54.4586 11.0753 54.2839 11.3352 54.1674 11.6619C54.0538 11.9858 53.997 12.348 53.997 12.7486C53.997 13.1463 54.0538 13.5071 54.1674 13.831C54.2839 14.1548 54.4586 14.4134 54.6916 14.6065C54.9274 14.7969 55.2228 14.892 55.5779 14.892ZM60.013 16V9.45455H61.5088V10.5455H61.5769C61.6963 10.1676 61.9008 9.87642 62.1906 9.67188C62.4832 9.46449 62.817 9.3608 63.192 9.3608C63.2772 9.3608 63.3724 9.36506 63.4775 9.37358C63.5855 9.37926 63.675 9.3892 63.746 9.40341V10.8224C63.6806 10.7997 63.5769 10.7798 63.4349 10.7628C63.2957 10.7429 63.1608 10.733 63.0301 10.733C62.7488 10.733 62.496 10.794 62.2715 10.9162C62.05 11.0355 61.8752 11.2017 61.7474 11.4148C61.6196 11.6278 61.5556 11.8736 61.5556 12.152V16H60.013ZM64.837 16V7.27273H70.4279V8.59801H66.4179V10.9673H70.0444V12.2926H66.4179V16H64.837ZM73.3406 7.27273V16H71.798V7.27273H73.3406ZM77.78 16.1278C77.1408 16.1278 76.5868 15.9872 76.1181 15.706C75.6493 15.4247 75.2857 15.0312 75.0271 14.5256C74.7715 14.0199 74.6436 13.429 74.6436 12.7528C74.6436 12.0767 74.7715 11.4844 75.0271 10.9759C75.2857 10.4673 75.6493 10.0724 76.1181 9.79119C76.5868 9.50994 77.1408 9.36932 77.78 9.36932C78.4192 9.36932 78.9732 9.50994 79.4419 9.79119C79.9107 10.0724 80.2729 10.4673 80.5286 10.9759C80.7871 11.4844 80.9164 12.0767 80.9164 12.7528C80.9164 13.429 80.7871 14.0199 80.5286 14.5256C80.2729 15.0312 79.9107 15.4247 79.4419 15.706C78.9732 15.9872 78.4192 16.1278 77.78 16.1278ZM77.7885 14.892C78.1351 14.892 78.4249 14.7969 78.6578 14.6065C78.8908 14.4134 79.0641 14.1548 79.1777 13.831C79.2942 13.5071 79.3524 13.1463 79.3524 12.7486C79.3524 12.348 79.2942 11.9858 79.1777 11.6619C79.0641 11.3352 78.8908 11.0753 78.6578 10.8821C78.4249 10.6889 78.1351 10.5923 77.7885 10.5923C77.4334 10.5923 77.1379 10.6889 76.9021 10.8821C76.6692 11.0753 76.4945 11.3352 76.378 11.6619C76.2644 11.9858 76.2075 12.348 76.2075 12.7486C76.2075 13.1463 76.2644 13.5071 76.378 13.831C76.4945 14.1548 76.6692 14.4134 76.9021 14.6065C77.1379 14.7969 77.4334 14.892 77.7885 14.892ZM83.387 16L81.5375 9.45455H83.11L84.2605 14.0568H84.3202L85.4963 9.45455H87.0517L88.2279 14.0312H88.2918L89.4253 9.45455H91.002L89.1483 16H87.5418L86.3145 11.5767H86.225L84.9978 16H83.387Z\",\n    fill: \"#171615\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgTensorflow);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/tensorflow.90d6ef4980ba7ce197fcc01b8b1c370f.svg\";","import {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport airbyte from './optag-images/airbyte.svg';\nimport dbt from './optag-images/dbt.svg';\nimport duckdb from './optag-images/duckdb.svg';\nimport fivetran from './optag-images/fivetran.svg';\nimport googlesheets from './optag-images/googlesheets.svg';\nimport jupyter from './optag-images/jupyter.svg';\nimport noteable from './optag-images/noteable.svg';\nimport pandas from './optag-images/pandas.svg';\nimport pyspark from './optag-images/pyspark.svg';\nimport python from './optag-images/python.svg';\nimport pytorch from './optag-images/pytorch.svg';\nimport slack from './optag-images/slack.svg';\nimport snowflake from './optag-images/snowflake.svg';\nimport sql from './optag-images/sql.svg';\nimport tensorflow from './optag-images/tensorflow.svg';\n\nexport interface IOpTag {\n  label: string;\n  onClick: (e: React.MouseEvent) => void;\n}\n\ninterface IOpTagsProps {\n  style: React.CSSProperties;\n  minified: boolean;\n  tags: IOpTag[];\n}\n\nconst KNOWN_TAGS = {\n  jupyter: {color: '#4E4E4E', content: <img src={jupyter} alt=\"Jupyter logo\" role=\"img\" />},\n  ipynb: {color: '#4E4E4E', content: <img src={jupyter} alt=\"Jupyter logo\" role=\"img\" />},\n  noteable: {color: '#00D2D2', content: <img src={noteable} alt=\"Noteable logo\" role=\"img\" />},\n  airbyte: {color: '#655CFC', content: <img src={airbyte} alt=\"Airbyte logo\" role=\"img\" />},\n  snowflake: {color: '#29B5E8', content: <img src={snowflake} alt=\"Snowflake logo\" role=\"img\" />},\n  python: {color: '#35668F', content: <img src={python} alt=\"Python logo\" role=\"img\" />},\n  fivetran: {color: '#0073FF', content: <img src={fivetran} alt=\"Fivetran logo\" role=\"img\" />},\n  dbt: {color: '#FF6B4C', content: <img src={dbt} alt=\"dbt logo\" role=\"img\" />},\n  slack: {color: '#4A144A', content: <img src={slack} alt=\"Slack logo\" role=\"img\" />},\n  pytorch: {color: '#EE4C2C', content: <img src={pytorch} alt=\"pytorch logo\" role=\"img\" />},\n  pyspark: {color: '#C74D15', content: <img src={pyspark} alt=\"pyspark logo\" role=\"img\" />},\n  duckdb: {color: '#FCBC41', content: <img src={duckdb} alt=\"duckdb logo\" role=\"img\" />},\n  tensorflow: {\n    color: '#FE9413',\n    content: <img src={tensorflow} alt=\"tensorflow logo\" role=\"img\" />,\n  },\n  pandas: {color: '#130754', content: <img src={pandas} alt=\"pandas logo\" role=\"img\" />},\n  googlesheets: {\n    color: '#23A566',\n    content: <img src={googlesheets} alt=\"googlesheets logo\" role=\"img\" />,\n  },\n  sql: {\n    color: '#B821FF',\n    content: <img src={sql} alt=\"sql logo\" role=\"img\" />,\n  },\n  Expand: {color: '#D7A540', content: 'Expand'},\n};\n\nfunction generateColorForLabel(label = '') {\n  return `hsl(${\n    label\n      .split('')\n      .map((c) => c.charCodeAt(0))\n      .reduce((n, a) => n + a) % 360\n  }, 75%, 45%)`;\n}\n\nexport const OpTags = React.memo(({tags, style, minified}: IOpTagsProps) => {\n  return (\n    <OpTagsContainer style={style} $minified={minified}>\n      {tags.map((tag) => (\n        <div\n          key={tag.label}\n          style={{background: KNOWN_TAGS[tag.label]?.color || generateColorForLabel(tag.label)}}\n          onClick={tag.onClick}\n        >\n          {KNOWN_TAGS[tag.label]?.content || tag.label}\n        </div>\n      ))}\n    </OpTagsContainer>\n  );\n});\n\nconst OpTagsContainer = styled.div<{$minified: boolean}>`\n  gap: 6px;\n  position: absolute;\n  display: flex;\n\n  & > div {\n    padding: 0 8px;\n    min-height: 24px;\n    display: flex;\n    align-items: center;\n    color: ${Colors.White};\n    font-family: ${FontFamily.default};\n    font-size: 12px;\n    font-weight: 700;\n    border-radius: 8px;\n  }\n`;\n","const USED_ATTRIBUTES = [\n  '-moz-osx-font-smoothing',\n  'align-items',\n  'align-self',\n  'animation',\n  'background',\n  'border',\n  'box-shadow',\n  'box-sizing',\n  'color',\n  'column-gap',\n  'display',\n  'flex',\n  'font',\n  'fill',\n  'gap',\n  'height',\n  'justify-content',\n  'left',\n  'letter-spacing',\n  'line-height',\n  'margin',\n  'mask-image',\n  '-webkit-mask-image',\n  'mask-size',\n  '-webkit-mask-size',\n  'min-height',\n  'min-width',\n  'object-fit',\n  'opacity',\n  'overflow',\n  'padding',\n  'position',\n  'row-gap',\n  'stroke',\n  'text-align',\n  'text-decoration',\n  'text-overflow',\n  'text-transform',\n  'top',\n  'transform',\n  'white-space',\n  'width',\n];\n\nconst attributeURLToBase64Map: {[attrURL: string]: string} = {};\n\nasync function convertURLToBase64Data(url: string) {\n  if (!attributeURLToBase64Map[url]) {\n    const data = await fetch(url);\n    attributeURLToBase64Map[url] = btoa(await data.text());\n  }\n  return `data:image/svg+xml;base64,${attributeURLToBase64Map[url]}`;\n}\n\nasync function makeAttributeValuePortable(attrValue: string) {\n  // If the attribute value references a url(http:...), fetch it and convert\n  // it to an inline base64 data url. (This replaces our dependency on icon SVGs)\n  if (attrValue.startsWith('url(')) {\n    const match = attrValue.match(/url\\(['\"]?(http[^'\"]+)['\"]?\\)/);\n    if (match) {\n      const url = match[1];\n      const data = await convertURLToBase64Data(url);\n      attrValue = attrValue.replace(url, data);\n    }\n  }\n  return attrValue;\n}\n\nexport async function makeSVGPortable(svg: SVGElement) {\n  // iterate over the entire object tree in the CSV and apply all computed styles as inline styles\n  // to remove the dependency on outside stylesheets\n  const nodeIterator = document.createNodeIterator(svg, NodeFilter.SHOW_ELEMENT);\n  const baseStyles = window.getComputedStyle(svg);\n  let node: Node | null = null;\n\n  while ((node = nodeIterator.nextNode())) {\n    if (!(node instanceof SVGElement || node instanceof HTMLElement)) {\n      continue;\n    }\n    const nodeStyles = window.getComputedStyle(node);\n    for (const idx of Object.keys(nodeStyles)) {\n      const attrName: string = nodeStyles[idx];\n      if (!USED_ATTRIBUTES.some((prefix) => attrName.startsWith(prefix))) {\n        continue;\n      }\n      if (!node.style[attrName] && nodeStyles[attrName] !== baseStyles[attrName]) {\n        node.style[attrName] = await makeAttributeValuePortable(nodeStyles[attrName]);\n      }\n      if (node instanceof HTMLElement) {\n        node.style.boxSizing = 'border-box';\n      }\n    }\n    if (node instanceof HTMLImageElement) {\n      const src = node.getAttribute('src');\n      if (src && !src.startsWith('data:')) {\n        node.setAttribute('src', await convertURLToBase64Data(src));\n      }\n    }\n  }\n\n  // Apply styles inherited from the surrounding document to the base SVG element. This\n  // sets things like the line-height, font smoothing, etc.\n  for (const idx of Object.keys(baseStyles)) {\n    const attrName: string = baseStyles[idx];\n    if (!USED_ATTRIBUTES.some((prefix) => attrName.startsWith(prefix))) {\n      continue;\n    }\n    if (!svg.style[attrName]) {\n      svg.style[attrName] = baseStyles[attrName];\n    }\n  }\n\n  // Remove references to CSS classes (no longer needed)\n  const removeClassesIterator = document.createNodeIterator(svg, NodeFilter.SHOW_ELEMENT);\n  while ((node = removeClassesIterator.nextNode())) {\n    if (node instanceof SVGElement || node instanceof HTMLElement) {\n      node.removeAttribute('class');\n    }\n  }\n\n  // Find all the stylesheets on the page and embed the font-face declarations\n  // into the SVG document.\n  const cssSources = Array.from<HTMLStyleElement | HTMLLinkElement>(\n    document.querySelectorAll('style,link[rel=stylesheet]'),\n  );\n  const fontFaces = cssSources.flatMap((el) =>\n    el.sheet\n      ? Array.from(el.sheet.cssRules)\n          .filter((r) => r instanceof CSSFontFaceRule)\n          .map((r) => r.cssText)\n      : [],\n  );\n\n  const styleEl = document.createElement('style');\n  styleEl.textContent = fontFaces.join('\\n\\n');\n  svg.appendChild(styleEl);\n}\n","import {Box, Colors, Icon, IconWrapper, Slider} from '@dagster-io/ui';\nimport animate from 'amator';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport {MemoryRouter} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {IBounds} from './common';\nimport {makeSVGPortable} from './makeSVGPortable';\n\nexport interface SVGViewportInteractor {\n  onMouseDown(viewport: SVGViewport, event: React.MouseEvent<HTMLDivElement>): void;\n  onWheel(viewport: SVGViewport, event: WheelEvent): void;\n  render?(viewport: SVGViewport): React.ReactElement<any> | null;\n}\n\ninterface SVGViewportProps {\n  graphWidth: number;\n  graphHeight: number;\n  graphHasNoMinimumZoom?: boolean;\n  interactor: SVGViewportInteractor;\n  maxZoom: number;\n  maxAutocenterZoom: number;\n  onClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onDoubleClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onArrowKeyDown?: (\n    event: React.KeyboardEvent<HTMLDivElement>,\n    dir: 'left' | 'up' | 'right' | 'down',\n  ) => void;\n  children: (\n    state: SVGViewportState,\n    bounds: {top: number; left: number; bottom: number; right: number},\n  ) => React.ReactNode;\n}\n\ninterface SVGViewportState {\n  x: number;\n  y: number;\n  scale: number;\n  minScale: number;\n}\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\nexport const DETAIL_ZOOM = 0.75;\nconst DEFAULT_ZOOM = 0.75;\nconst DEFAULT_MAX_AUTOCENTER_ZOOM = 1;\nconst DEFAULT_MIN_ZOOM = 0.17;\n\nconst BUTTON_INCREMENT = 0.05;\n\nconst PanAndZoomInteractor: SVGViewportInteractor = {\n  onMouseDown(viewport: SVGViewport, event: React.MouseEvent<HTMLDivElement>) {\n    if (viewport._animation) {\n      viewport._animation.cancel();\n    }\n\n    if (!viewport.element.current) {\n      return;\n    }\n\n    if (event.target instanceof HTMLElement && event.target.closest('#zoom-slider-container')) {\n      return;\n    }\n\n    const start = viewport.getOffsetXY(event);\n    if (!start) {\n      return;\n    }\n\n    let lastX: number = start.x;\n    let lastY: number = start.y;\n\n    const onMove = (e: MouseEvent) => {\n      const offset = viewport.getOffsetXY(e);\n      if (!offset) {\n        return;\n      }\n\n      const delta = {x: offset.x - lastX, y: offset.y - lastY};\n      viewport.setState({\n        x: viewport.state.x + delta.x,\n        y: viewport.state.y + delta.y,\n      });\n      lastX = offset.x;\n      lastY = offset.y;\n    };\n\n    const onUp = () => {\n      document.removeEventListener('mousemove', onMove);\n      document.removeEventListener('mouseup', onUp);\n    };\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('mouseup', onUp);\n  },\n\n  onWheel(viewport: SVGViewport, event: WheelEvent) {\n    const cursorPosition = viewport.getOffsetXY(event);\n    if (!cursorPosition) {\n      return;\n    }\n\n    if (event.altKey || event.shiftKey) {\n      viewport.shiftXY(-event.deltaX, -event.deltaY);\n    } else {\n      const targetScale = viewport.state.scale * (1 - event.deltaY * 0.0025);\n      const scale = Math.max(viewport.getMinZoom(), Math.min(viewport.getMaxZoom(), targetScale));\n      viewport.adjustZoomRelativeToScreenPoint(scale, cursorPosition);\n    }\n  },\n\n  render(viewport: SVGViewport) {\n    return (\n      <ZoomSliderContainer id=\"zoom-slider-container\">\n        <Box margin={{bottom: 8}}>\n          <IconButton\n            onClick={() => {\n              const x = viewport.element.current!.clientWidth / 2;\n              const y = viewport.element.current!.clientHeight / 2;\n              const scale = Math.min(\n                viewport.getMaxZoom(),\n                viewport.state.scale + BUTTON_INCREMENT,\n              );\n              const adjusted = Math.round((scale + Number.EPSILON) * 100) / 100;\n              viewport.adjustZoomRelativeToScreenPoint(adjusted, {x, y});\n            }}\n          >\n            <Icon size={24} name=\"zoom_in\" color={Colors.Gray300} />\n          </IconButton>\n        </Box>\n        <Slider\n          vertical\n          min={viewport.getMinZoom()}\n          max={viewport.getMaxZoom()}\n          stepSize={0.001}\n          value={viewport.state.scale}\n          labelRenderer={false}\n          onChange={(scale: number) => {\n            const x = viewport.element.current!.clientWidth / 2;\n            const y = viewport.element.current!.clientHeight / 2;\n            viewport.adjustZoomRelativeToScreenPoint(scale, {x, y});\n          }}\n        />\n        <Box margin={{top: 8}}>\n          <IconButton\n            onClick={() => {\n              const x = viewport.element.current!.clientWidth / 2;\n              const y = viewport.element.current!.clientHeight / 2;\n              const scale = Math.max(\n                viewport.getMinZoom(),\n                viewport.state.scale - BUTTON_INCREMENT,\n              );\n              viewport.adjustZoomRelativeToScreenPoint(scale, {x, y});\n            }}\n          >\n            <Icon size={24} name=\"zoom_out\" color={Colors.Gray300} />\n          </IconButton>\n        </Box>\n        <Box margin={{top: 8}}>\n          <IconButton\n            onClick={() => {\n              viewport.onExportToSVG();\n            }}\n          >\n            <Icon size={24} name=\"download_for_offline\" color={Colors.Gray300} />\n          </IconButton>\n        </Box>\n      </ZoomSliderContainer>\n    );\n  },\n};\n\nconst IconButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  position: relative;\n  left: -4px;\n\n  :focus {\n    outline: none;\n  }\n\n  ${IconWrapper} {\n    transition: background 100ms;\n  }\n\n  :focus ${IconWrapper}, :hover ${IconWrapper}, :active ${IconWrapper} {\n    background-color: ${Colors.Blue500};\n  }\n`;\n\nconst NoneInteractor: SVGViewportInteractor = {\n  onMouseDown(_viewport: SVGViewport, event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault();\n    event.stopPropagation();\n  },\n\n  onWheel() {\n    return;\n  },\n\n  render() {\n    return <span />;\n  },\n};\n\nexport class SVGViewport extends React.Component<SVGViewportProps, SVGViewportState> {\n  static Interactors = {\n    PanAndZoom: PanAndZoomInteractor,\n    None: NoneInteractor,\n  };\n\n  static defaultProps = {\n    maxZoom: DEFAULT_ZOOM,\n    maxAutocenterZoom: DEFAULT_MAX_AUTOCENTER_ZOOM,\n  };\n\n  element: React.RefObject<HTMLDivElement> = React.createRef();\n  panzoom: any;\n\n  _animation: any = null;\n  _lastWheelTime = 0;\n  _lastWheelDir = 0;\n\n  state = {\n    x: 0,\n    y: 0,\n    scale: DETAIL_ZOOM,\n    minScale: 0,\n  };\n\n  resizeObserver: any | undefined;\n\n  componentDidMount() {\n    this.autocenter();\n\n    // The wheel event cannot be prevented via the `onWheel` handler.\n    document.addEventListener('wheel', this.onWheel, {passive: false});\n\n    // The op/asset graphs clip rendered nodes to the visible region, so changes to the\n    // size of the viewport need to cause re-renders. Otherwise you expand the window\n    // and see nothing in the newly visible areas.\n    if (\n      this.element.current &&\n      this.element.current instanceof HTMLElement &&\n      'ResizeObserver' in window\n    ) {\n      const RO = window['ResizeObserver'] as any;\n      this.resizeObserver = new RO(() => {\n        window.requestAnimationFrame(() => {\n          this.forceUpdate();\n        });\n      });\n      this.resizeObserver.observe(this.element.current);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('wheel', this.onWheel);\n    this.resizeObserver?.disconnect();\n  }\n\n  onWheel = (e: WheelEvent) => {\n    const container = this.element.current;\n    // If the wheel event occurs within our SVG container, prevent it from zooming\n    // the document, and handle it with the interactor.\n    if (container && e.target instanceof Node && container.contains(e.target)) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.props.interactor.onWheel(this, e);\n    }\n  };\n\n  cancelAnimations() {\n    if (this._animation) {\n      this._animation.cancel();\n    }\n  }\n\n  focus() {\n    this.element.current?.focus();\n  }\n\n  scaleForSVGBounds(svgRegionWidth: number, svgRegionHeight: number) {\n    const el = this.element.current;\n    if (!el) {\n      return 1;\n    }\n    const ownerRect = {width: el.clientWidth, height: el.clientHeight};\n\n    const dw = ownerRect.width / svgRegionWidth;\n    const dh = ownerRect.height / svgRegionHeight;\n    return Math.min(dw, dh);\n  }\n\n  autocenter(animate = false, scale?: number) {\n    const el = this.element.current!;\n    const ownerRect = {width: el.clientWidth, height: el.clientHeight};\n    const desiredScale = this.scaleForSVGBounds(this.props.graphWidth, this.props.graphHeight);\n    const minScale = this.getMinZoom();\n    const boundedScale =\n      scale || Math.max(Math.min(desiredScale, this.props.maxAutocenterZoom), minScale);\n\n    if (\n      this.state.scale < boundedScale &&\n      desiredScale !== boundedScale &&\n      boundedScale === minScale\n    ) {\n      // If the user is zoomed out past where they're going to land, AND where they're going to land\n      // is not a view of the entire DAG but instead a view of some zoomed section, autocentering is\n      // undesirable and should do nothing.\n      return;\n    }\n    const target = {\n      x: -(this.props.graphWidth / 2) * boundedScale + ownerRect.width / 2,\n      y: -(this.props.graphHeight / 2) * boundedScale + ownerRect.height / 2,\n      scale: boundedScale,\n    };\n\n    if (animate) {\n      this.smoothZoom(target);\n    } else {\n      this.setState(Object.assign(target, {minScale: boundedScale}));\n    }\n  }\n\n  screenToSVGCoords({x, y}: Point): Point {\n    const el = this.element.current!;\n    const {width, height} = el.getBoundingClientRect();\n    return {\n      x: (-(this.state.x - width / 2) + x - width / 2) / this.state.scale,\n      y: (-(this.state.y - height / 2) + y - height / 2) / this.state.scale,\n    };\n  }\n\n  getOffsetXY(e: MouseEvent | React.MouseEvent): Point | null {\n    const el = this.element.current;\n    if (!el) {\n      return null;\n    }\n    const ownerRect = el.getBoundingClientRect();\n    return {x: e.clientX - ownerRect.left, y: e.clientY - ownerRect.top};\n  }\n\n  public shiftXY(dx: number, dy: number) {\n    const {x, y, scale} = this.state;\n    this.setState({x: x + dx, y: y + dy, scale});\n  }\n\n  public adjustZoomRelativeToScreenPoint(nextScale: number, point: Point) {\n    const centerSVGCoord = this.screenToSVGCoords(point);\n    const {scale} = this.state;\n    let {x, y} = this.state;\n    x = x + (centerSVGCoord.x * scale - centerSVGCoord.x * nextScale);\n    y = y + (centerSVGCoord.y * scale - centerSVGCoord.y * nextScale);\n    this.setState({x, y, scale: nextScale});\n  }\n\n  public zoomToSVGBox(box: IBounds, animate: boolean, newScale = this.state.scale) {\n    this.zoomToSVGCoords(box.x + box.width / 2, box.y + box.height / 2, animate, newScale);\n  }\n\n  public zoomToSVGCoords(x: number, y: number, animate: boolean, scale = this.state.scale) {\n    const el = this.element.current!;\n    const boundedScale = Math.max(Math.min(this.getMaxZoom(), scale), this.getMinZoom());\n\n    const ownerRect = el.getBoundingClientRect();\n    x = -x * boundedScale + ownerRect.width / 2;\n    y = -y * boundedScale + ownerRect.height / 2;\n\n    if (animate) {\n      this.smoothZoom({x, y, scale: boundedScale});\n    } else {\n      this.setState({x, y, scale: boundedScale});\n    }\n  }\n\n  public smoothZoom(to: {x: number; y: number; scale: number}) {\n    const from = {scale: this.state.scale, x: this.state.x, y: this.state.y};\n\n    if (this._animation) {\n      this._animation.cancel();\n    }\n\n    this._animation = animate(from, to, {\n      step: (v: any) => {\n        this.setState({\n          x: v.x,\n          y: v.y,\n          scale: v.scale,\n        });\n      },\n      done: () => {\n        this.setState(to);\n        this._animation = null;\n      },\n    });\n  }\n\n  public getMinZoom() {\n    if (this.props.graphHasNoMinimumZoom) {\n      return Math.min(\n        DEFAULT_MIN_ZOOM,\n        this.scaleForSVGBounds(this.props.graphWidth, this.props.graphHeight),\n      );\n    }\n    return DEFAULT_MIN_ZOOM;\n  }\n\n  public getMaxZoom() {\n    return this.props.maxZoom;\n  }\n\n  public getViewport() {\n    let viewport = {top: 0, left: 0, right: 0, bottom: 0};\n    if (this.element.current) {\n      const el = this.element.current!;\n      const {width, height} = el.getBoundingClientRect();\n      viewport = {\n        left: -this.state.x / this.state.scale,\n        top: -this.state.y / this.state.scale,\n        right: (-this.state.x + width) / this.state.scale,\n        bottom: (-this.state.y + height) / this.state.scale,\n      };\n    }\n    return viewport;\n  }\n\n  onZoomAndCenter = (event: React.MouseEvent<HTMLDivElement>) => {\n    const offsetXY = this.getOffsetXY(event);\n    if (!offsetXY) {\n      return;\n    }\n    const offset = this.screenToSVGCoords(offsetXY);\n    const maxZoom = this.props.maxZoom || DEFAULT_ZOOM;\n\n    if (Math.abs(maxZoom - this.state.scale) < 0.01) {\n      this.zoomToSVGCoords(offset.x, offset.y, true, this.state.minScale);\n    } else {\n      this.zoomToSVGCoords(offset.x, offset.y, true, maxZoom);\n    }\n  };\n\n  onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.target && (e.target as HTMLElement).nodeName === 'INPUT') {\n      return;\n    }\n\n    const dir = ({\n      ArrowLeft: 'left',\n      ArrowUp: 'up',\n      ArrowRight: 'right',\n      ArrowDown: 'down',\n    } as const)[e.code];\n    if (!dir) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onArrowKeyDown?.(e, dir);\n  };\n\n  onDoubleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    // Don't allow double-click events on the zoom slider to trigger this.\n    if (event.target instanceof HTMLElement && event.target.closest('#zoom-slider-container')) {\n      return;\n    }\n    this.props.onDoubleClick && this.props.onDoubleClick(event);\n  };\n\n  onExportToSVG = async () => {\n    const unclippedViewport = {\n      top: 0,\n      left: 0,\n      right: this.props.graphWidth,\n      bottom: this.props.graphHeight,\n    };\n\n    const div = document.createElement('div');\n    document.getElementById('root')!.appendChild(div);\n    ReactDOM.render(\n      <MemoryRouter>{this.props.children(this.state, unclippedViewport)}</MemoryRouter>,\n      div,\n    );\n    const svg = div.querySelector('svg') as SVGElement;\n    await makeSVGPortable(svg);\n\n    const text = new XMLSerializer().serializeToString(svg);\n    const blob = new Blob([text], {type: 'image/svg+xml'});\n    const a = document.createElement('a');\n    a.setAttribute(\n      'download',\n      `${document.title.replace(/[: \\/]/g, '_').replace(/__+/g, '_')}.svg`,\n    );\n    a.setAttribute('href', URL.createObjectURL(blob));\n    a.click();\n    div.remove();\n  };\n\n  render() {\n    const {children, onClick, interactor} = this.props;\n    const {x, y, scale} = this.state;\n    const dotsize = Math.max(7, 30 * scale);\n\n    return (\n      <div\n        ref={this.element}\n        style={Object.assign({}, SVGViewportStyles, {\n          backgroundPosition: `${x}px ${y}px`,\n          backgroundSize: `${dotsize}px`,\n        })}\n        onMouseDown={(e) => interactor.onMouseDown(this, e)}\n        onDoubleClick={this.onDoubleClick}\n        onKeyDown={this.onKeyDown}\n        onClick={onClick}\n        tabIndex={-1}\n      >\n        <div\n          style={{\n            transformOrigin: `top left`,\n            transform: `matrix(${scale}, 0, 0, ${scale}, ${x}, ${y})`,\n          }}\n        >\n          {children(this.state, this.getViewport())}\n        </div>\n        {interactor.render && interactor.render(this)}\n      </div>\n    );\n  }\n}\n\n/*\nBG: Not using styled-components here because I need a `ref` to an actual DOM element.\nStyled-component with a ref returns a React component we need to findDOMNode to use.\n*/\nconst SVGViewportStyles: React.CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n  overflow: 'hidden',\n  userSelect: 'none',\n  outline: 'none',\n  background: `url(\"data:image/svg+xml;utf8,<svg width='30px' height='30px' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'><circle fill='rgba(236, 236, 236, 1)' cx='5' cy='5' r='5' /></svg>\") repeat`,\n};\n\nconst ZoomSliderContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 30px;\n  padding: 10px 8px;\n  padding-bottom: 0;\n  background: rgba(245, 248, 250, 0.4);\n`;\n","import * as dagre from 'dagre';\n\nimport {titleOfIO} from '../app/titleOfIO';\n\nimport {IBounds, IPoint} from './common';\n\nexport type OpLayoutEdgeSide = {\n  point: IPoint;\n  opName: string;\n  edgeName: string;\n};\n\nexport type OpLayoutEdge = {\n  from: OpLayoutEdgeSide;\n  to: OpLayoutEdgeSide;\n};\n\nexport interface OpLayout {\n  // Overall frame of the box relative to 0,0 on the graph\n  bounds: IBounds;\n\n  // Frames of specific components - These need to be computed during layout\n  // (rather than at render time) to position edges into inputs/outputs.\n  op: IBounds;\n  inputs: {[inputName: string]: OpLayoutIO};\n  outputs: {[outputName: string]: OpLayoutIO};\n}\n\nexport interface OpLayoutIO {\n  layout: IBounds;\n  label: boolean;\n  collapsed: string[];\n  port: IPoint;\n}\n\nexport type OpGraphLayout = {\n  width: number;\n  height: number;\n  parent: ParentOpLayout | null;\n  edges: OpLayoutEdge[];\n  nodes: {[opName: string]: OpLayout};\n};\n\ninterface ParentOpLayout extends Omit<OpLayout, 'op'> {\n  mappingLeftEdge: number;\n  mappingLeftSpacing: number;\n  dependsOn: {[opName: string]: IPoint};\n  dependedBy: {[opName: string]: IPoint};\n  invocationBoundingBox: IBounds;\n}\n\nexport interface ILayoutOp {\n  name: string;\n  inputs: {\n    definition: {\n      name: string;\n    };\n    dependsOn: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  definition: {\n    description: string | null;\n    assetNodes: {\n      assetKey: {\n        path: string[];\n      };\n    }[];\n  };\n  outputs: {\n    definition: {\n      name: string;\n    };\n    dependedBy: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\nconst OP_WIDTH = 370;\nconst OP_BASE_HEIGHT = 52;\nconst OP_ASSETS_ROW_HEIGHT = 22;\nconst IO_HEIGHT = 26;\nconst IO_INSET = 0;\nconst IO_MINI_WIDTH = 35;\nconst IO_THRESHOLD_FOR_MINI = 4;\nconst PORT_INSET_X = 13;\nconst PORT_INSET_Y = IO_HEIGHT / 2;\nconst PARENT_DEFINITION_PADDING = 70;\nconst PARENT_INVOCATION_PADDING = 70;\nconst EXTERNAL_DEPENDENCY_PADDING = 50;\n\nconst MARGIN_BASE = 100;\n\ntype OpLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nfunction flattenIO(arrays: OpLinkInfo[][]) {\n  const map: {[key: string]: OpLinkInfo} = {};\n  arrays.forEach((array) => array.forEach((item) => (map[titleOfIO(item)] = item)));\n  return Object.values(map);\n}\n\nexport function layoutOpGraph(pipelineOps: ILayoutOp[], parentOp?: ILayoutOp): OpGraphLayout {\n  const g = new dagre.graphlib.Graph();\n\n  // First, identify how much space we need to pad the DAG by in order to show the\n  // parent op AROUND it. We pass this padding in to dagre, and then we have enough\n  // room to add our parent layout around the result.\n  let parentIOPadding = 0;\n  let marginy = MARGIN_BASE;\n  let marginx = MARGIN_BASE;\n  if (parentOp) {\n    parentIOPadding = Math.max(parentOp.inputs.length, parentOp.outputs.length) * IO_HEIGHT;\n    marginx = PARENT_DEFINITION_PADDING + PARENT_INVOCATION_PADDING;\n    marginy = marginx + parentIOPadding;\n  }\n\n  // Define a new top-down, left to right graph layout\n  g.setGraph({rankdir: 'TB', marginx, marginy});\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const edges: OpLayoutEdge[] = [];\n  const opNamesPresent: {[name: string]: boolean} = {};\n\n  pipelineOps.forEach((op) => {\n    opNamesPresent[op.name] = true;\n  });\n  pipelineOps.forEach((op) => {\n    // Lay out each op individually to get it's width and height based on it's\n    // inputs and outputs, and then attach it to the graph. Dagre will give us it's\n    // x,y position.\n    const layout = layoutOp(op, {x: 0, y: 0});\n    g.setNode(op.name, {\n      width: layout.bounds.width,\n      height: layout.bounds.height,\n    });\n\n    // Give Dagre the dependency edges and build a flat set of them so we\n    // can reference them in a single pass later\n    op.inputs.forEach((input) => {\n      input.dependsOn.forEach((dep) => {\n        if (opNamesPresent[dep.solid.name] && opNamesPresent[op.name]) {\n          g.setEdge({v: dep.solid.name, w: op.name}, {weight: 1});\n\n          edges.push({\n            from: {\n              point: {x: 0, y: 0},\n              opName: dep.solid.name,\n              edgeName: dep.definition.name,\n            },\n            to: {\n              point: {x: 0, y: 0},\n              opName: op.name,\n              edgeName: input.definition.name,\n            },\n          });\n        }\n      });\n    });\n  });\n\n  dagre.layout(g);\n\n  const ops: {[opName: string]: OpLayout} = {};\n  const dagreNodes: {[opName: string]: dagre.Node} = {};\n  g.nodes().forEach(function (opName) {\n    const node = g.node(opName);\n    if (!node) {\n      return;\n    }\n    dagreNodes[opName] = node;\n  });\n\n  // Due to a bug in Dagre when run without an \"align\" value, we need to calculate\n  // the total width of the graph coordinate space ourselves. We need the height\n  // because we've shifted long single rows into multiple rows.\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  // Read the Dagre layout and map \"nodes\" back to our solids, but with\n  // X,Y coordinates this time.\n  Object.keys(dagreNodes).forEach((opName) => {\n    const node = dagreNodes[opName];\n    const op = pipelineOps.find(({name}) => name === opName);\n    if (!op) {\n      return;\n    }\n\n    const x = node.x - node.width / 2; // Dagre's x/y is the center, we want top left\n    const y = node.y - node.height / 2;\n    ops[opName] = layoutOp(op, {x, y});\n    maxWidth = Math.max(maxWidth, x + node.width);\n    maxHeight = Math.max(maxHeight, y + node.height);\n  });\n\n  // Read the Dagre layout and map \"edges\" back to our data model. We don't\n  // currently use the \"closest points on the node\" Dagre suggests (but we could).\n  g.edges().forEach(function (e) {\n    const conn = edges.find((c) => c.from.opName === e.v && c.to.opName === e.w);\n    const points = g.edge(e).points;\n    if (conn) {\n      conn.from.point = points[0];\n      conn.to.point = points[points.length - 1];\n    }\n  });\n\n  const result: OpGraphLayout = {\n    edges,\n    nodes: ops,\n    width: maxWidth + marginx,\n    height: maxHeight + marginy,\n    parent: null,\n  };\n\n  if (parentOp) {\n    // Now that we've computed the pipeline layout fully, lay out the\n    // composite op around the completed DAG.\n    result.parent = layoutParentGraphOp(result, parentOp, parentIOPadding);\n  }\n\n  return result;\n}\n\nfunction layoutParentGraphOp(layout: OpGraphLayout, op: ILayoutOp, parentIOPadding: number) {\n  const result: ParentOpLayout = {\n    invocationBoundingBox: {\n      x: 1,\n      y: 1,\n      width: layout.width - 1,\n      height: layout.height - 1,\n    },\n    bounds: {\n      x: PARENT_INVOCATION_PADDING,\n      y: PARENT_INVOCATION_PADDING + parentIOPadding,\n      width: layout.width - PARENT_INVOCATION_PADDING * 2,\n      height: layout.height - (PARENT_INVOCATION_PADDING + parentIOPadding) * 2,\n    },\n    mappingLeftEdge: PARENT_INVOCATION_PADDING - 20,\n    mappingLeftSpacing: 10,\n    inputs: {},\n    outputs: {},\n    dependsOn: layoutExternalConnections(\n      flattenIO(op.inputs.map((d) => d.dependsOn)),\n      -EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n    dependedBy: layoutExternalConnections(\n      flattenIO(op.outputs.map((d) => d.dependedBy)),\n      layout.height + EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n  };\n\n  const boundingBottom = result.bounds.y + result.bounds.height;\n\n  op.inputs.forEach((input, idx) => {\n    result.inputs[input.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  op.outputs.forEach((output, idx) => {\n    result.outputs[output.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: boundingBottom + idx * IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: boundingBottom + idx * IO_HEIGHT + IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  return result;\n}\n\nfunction layoutExternalConnections(links: OpLinkInfo[], y: number, layoutWidth: number) {\n  // fill evenly from 0 to layoutWidth from left to right, then center them if there's overflow.\n  const inset = PARENT_INVOCATION_PADDING + PORT_INSET_X;\n  const insetWidth = layoutWidth - inset * 2;\n  const spacing = Math.max(200, insetWidth / links.length);\n  const baseX = inset + Math.min(0, (insetWidth - links.length * spacing) / 2);\n  const yShift = spacing < 300 ? 20 : 0;\n\n  const result: {[opName: string]: IPoint} = {};\n  links.forEach((link, idx) => {\n    const shiftDirection = 1 - (idx % 2) * 2; // 1 or -1, alternating\n    result[titleOfIO(link)] = {\n      x: baseX + idx * spacing,\n      y: y + yShift * shiftDirection,\n    };\n  });\n  return result;\n}\n\nexport function layoutOp(op: ILayoutOp, root: IPoint): OpLayout {\n  // Starting at the root (top left) X,Y, return the layout information for an op with\n  // input blocks, then the main block, then output blocks (arranged vertically).\n  //\n  // This code \"appends\" boxes vertically, advancing accY as it goes.\n  let accY = root.y;\n\n  const appendMiniIODots = <T extends ILayoutOp['inputs'][0] | ILayoutOp['outputs'][0]>(\n    ios: T[],\n    sortKey: (io: T) => string,\n    clusteringKey: (io: T) => string,\n  ) => {\n    // Sort both input and output boxes displayed on the graph alphabetically based on the input name.\n    // This means that if two ops are connected to each other multiple times, the lines do not cross.\n    const sorted = [...ios].sort((a, b) => sortKey(a).localeCompare(sortKey(b)));\n\n    let x = 0;\n    let last: OpLayoutIO;\n    let lastKey: string | null = null;\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    const spacing = Math.min(IO_MINI_WIDTH, OP_WIDTH / (sorted.length + 1));\n\n    // Add \"port\" layouts, collapsing the dots if they are connected to the same opposing solid\n    // (eg: two inputs connected to the same upstream output) with a \"[O] + 2\" style.\n    sorted.forEach((io, _idx) => {\n      const key = clusteringKey(io);\n      if (key !== lastKey) {\n        lastKey = key;\n        last = {\n          port: {\n            x: root.x + x + PORT_INSET_X,\n            y: accY + PORT_INSET_Y,\n          },\n          collapsed: [],\n          label: false,\n          layout: {\n            x: root.x + x,\n            y: accY,\n            width: IO_MINI_WIDTH,\n            height: IO_HEIGHT,\n          },\n        };\n        layouts[io.definition.name] = last;\n        x += spacing;\n      } else {\n        if (last.collapsed.length === 0) {\n          x += 15;\n        }\n        last.collapsed.push(io.definition.name);\n      }\n    });\n\n    // Center the items on the op rather than left justifying them\n    const centeringAdjustment = (OP_WIDTH - (x - PORT_INSET_X + IO_MINI_WIDTH)) / 2;\n    Object.values(layouts).forEach((l) => {\n      l.layout.x += centeringAdjustment;\n      l.port.x += centeringAdjustment;\n    });\n\n    // Place the next box beneath the\n    accY += IO_HEIGHT;\n\n    return layouts;\n  };\n\n  const appendStackedIOBoxes = (ios: ILayoutOp['inputs'] | ILayoutOp['outputs']) => {\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    ios.forEach((io) => {\n      layouts[io.definition.name] = {\n        port: {x: root.x + PORT_INSET_X, y: accY + PORT_INSET_Y},\n        label: true,\n        collapsed: [],\n        layout: {\n          x: root.x,\n          y: accY,\n          width: 0,\n          height: IO_HEIGHT,\n        },\n      };\n      accY += IO_HEIGHT;\n    });\n    return layouts;\n  };\n\n  const inputLayouts =\n    op.inputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.inputs,\n          (input) => input.definition.name,\n          (input) => input.dependsOn[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.inputs);\n\n  const opLayout: IBounds = {\n    x: root.x,\n    y: Math.max(root.y, accY - IO_INSET),\n    width: OP_WIDTH,\n    height: OP_BASE_HEIGHT + IO_INSET * 2,\n  };\n\n  accY += OP_BASE_HEIGHT;\n\n  if (op.definition.assetNodes.length && op.definition.description) {\n    opLayout.height += OP_ASSETS_ROW_HEIGHT;\n    accY += OP_ASSETS_ROW_HEIGHT;\n  }\n\n  const outputLayouts =\n    op.outputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.outputs,\n          (o) => o.dependedBy[0]?.definition.name || '',\n          (o) => o.dependedBy[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.outputs);\n\n  return {\n    bounds: {\n      x: root.x - 5,\n      y: root.y - 5,\n      width: OP_WIDTH + 10,\n      height: accY - root.y + 10,\n    },\n    op: opLayout,\n    inputs: inputLayouts,\n    outputs: outputLayouts,\n  };\n}\n","import memoize from 'lodash/memoize';\nimport React from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {asyncMemoize} from '../app/Util';\nimport {GraphData} from '../asset-graph/Utils';\nimport {AssetGraphLayout, layoutAssetGraph} from '../asset-graph/layout';\n\nimport {ILayoutOp, layoutOpGraph, OpGraphLayout} from './layout';\n\nconst ASYNC_LAYOUT_SOLID_COUNT = 50;\n\n// Op Graph\n\nconst _opLayoutCacheKey = (ops: ILayoutOp[], parentOp?: ILayoutOp) => {\n  const solidKey = ops.map((x) => x.name).join('|');\n  const parentKey = parentOp?.name;\n  return `${solidKey}:${parentKey}`;\n};\n\nexport const getFullOpLayout = memoize(layoutOpGraph, _opLayoutCacheKey);\n\nexport const asyncGetFullOpLayout = asyncMemoize(\n  (ops: ILayoutOp[], parentOp?: ILayoutOp, staticPathRoot?: string) => {\n    return new Promise<OpGraphLayout>((resolve) => {\n      const worker = new Worker(new URL('../workers/dagre_layout.worker', import.meta.url));\n      worker.addEventListener('message', (event) => {\n        resolve(event.data);\n        worker.terminate();\n      });\n      worker.postMessage({type: 'layoutOpGraph', ops, parentOp, staticPathRoot});\n    });\n  },\n  _opLayoutCacheKey,\n);\n\n// Asset Graph\n\nconst _assetLayoutCacheKey = (graphData: GraphData) => {\n  // Note: The \"show secondary edges\" toggle means that we need a cache key that incorporates\n  // both the displayed nodes and the displayed edges.\n  return JSON.stringify(graphData);\n};\n\nexport const getFullAssetLayout = memoize(layoutAssetGraph, _assetLayoutCacheKey);\n\nexport const asyncGetFullAssetLayout = asyncMemoize(\n  (graphData: GraphData, staticPathRoot?: string) => {\n    return new Promise<AssetGraphLayout>((resolve) => {\n      const worker = new Worker(new URL('../workers/dagre_layout.worker', import.meta.url));\n      worker.addEventListener('message', (event) => {\n        resolve(event.data);\n        worker.terminate();\n      });\n      worker.postMessage({type: 'layoutAssetGraph', graphData, staticPathRoot});\n    });\n  },\n  _assetLayoutCacheKey,\n);\n\n// Helper Hooks:\n// - Automatically switch between sync and async loading strategies\n// - Re-layout when the cache key function returns a different value\n\ntype State = {\n  loading: boolean;\n  layout: OpGraphLayout | AssetGraphLayout | null;\n  cacheKey: string;\n};\n\ntype Action =\n  | {type: 'loading'}\n  | {type: 'layout'; payload: {layout: OpGraphLayout | AssetGraphLayout; cacheKey: string}};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'loading':\n      return {loading: true, layout: null, cacheKey: ''};\n    case 'layout':\n      return {\n        loading: false,\n        layout: action.payload.layout,\n        cacheKey: action.payload.cacheKey,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  loading: false,\n  layout: null,\n  cacheKey: '',\n};\n\n/**\n * Todo: It would be nice to merge these hooks into one, passing the sync + async layout methods in as args.\n * I tried but felt like the complexity wasn't worth the code savings. The key problem is that the layout\n * functions take different args and a generic solution loses the types.\n */\n\nexport function useOpLayout(ops: ILayoutOp[], parentOp?: ILayoutOp) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {staticPathRoot} = React.useContext(AppContext);\n\n  const cacheKey = _opLayoutCacheKey(ops, parentOp);\n  const runAsync = ops.length >= ASYNC_LAYOUT_SOLID_COUNT;\n\n  React.useEffect(() => {\n    async function runAsyncLayout() {\n      dispatch({type: 'loading'});\n      const layout = await asyncGetFullOpLayout(ops, parentOp, staticPathRoot);\n      dispatch({\n        type: 'layout',\n        payload: {layout, cacheKey},\n      });\n    }\n\n    if (!runAsync) {\n      const layout = getFullOpLayout(ops, parentOp);\n      dispatch({type: 'layout', payload: {layout, cacheKey}});\n    } else {\n      void runAsyncLayout();\n    }\n  }, [cacheKey, ops, parentOp, runAsync, staticPathRoot]);\n\n  return {\n    loading: state.loading || !state.layout || state.cacheKey !== cacheKey,\n    async: runAsync,\n    layout: state.layout as OpGraphLayout | null,\n  };\n}\n\nexport function useAssetLayout(graphData: GraphData) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {staticPathRoot} = React.useContext(AppContext);\n\n  const cacheKey = _assetLayoutCacheKey(graphData);\n  const nodeCount = Object.keys(graphData.nodes).length;\n  const runAsync = nodeCount >= ASYNC_LAYOUT_SOLID_COUNT;\n\n  React.useEffect(() => {\n    async function runAsyncLayout() {\n      dispatch({type: 'loading'});\n      const layout = await asyncGetFullAssetLayout(graphData, staticPathRoot);\n      dispatch({\n        type: 'layout',\n        payload: {layout, cacheKey},\n      });\n    }\n\n    if (!runAsync) {\n      const layout = getFullAssetLayout(graphData);\n      dispatch({type: 'layout', payload: {layout, cacheKey}});\n    } else {\n      void runAsyncLayout();\n    }\n  }, [cacheKey, graphData, runAsync, staticPathRoot]);\n\n  return {\n    loading: state.loading || !state.layout || state.cacheKey !== cacheKey,\n    async: runAsync,\n    layout: state.layout as AssetGraphLayout | null,\n  };\n}\n\nexport {layoutOp} from './layout';\nexport type {OpGraphLayout, OpLayout, OpLayoutEdge} from './layout';\n","import {AssetGraphLayout, AssetLayout} from '../asset-graph/layout';\n\nimport {OpGraphLayout, OpLayout} from './layout';\n\nexport type Edge = {a: string; b: string};\n\nexport type IBounds = {\n  x: number;\n  y: number;\n  height: number;\n  width: number;\n};\n\nexport type IPoint = {\n  x: number;\n  y: number;\n};\n\nexport const isHighlighted = (edges: Edge[], {a, b}: Edge) =>\n  edges.some((h) => (h.a === a && h.b === b) || (h.b === a && h.a === b));\n\nexport const isOpHighlighted = (edges: Edge[], name: string) =>\n  edges.some((h) => h.a.split(':')[0] === name || h.b.split(':')[0] === name);\n\nexport const isNodeOffscreen = (\n  layoutNode: {x: number; y: number; width: number; height: number},\n  viewportRect: {top: number; left: number; right: number; bottom: number},\n) => {\n  return (\n    layoutNode.x + layoutNode.width < viewportRect.left ||\n    layoutNode.y + layoutNode.height < viewportRect.top ||\n    layoutNode.x > viewportRect.right ||\n    layoutNode.y > viewportRect.bottom\n  );\n};\n\nexport const closestNodeInDirection = (\n  layout: OpGraphLayout | AssetGraphLayout,\n  selectedNodeKey: string | undefined,\n  dir: string,\n): string | undefined => {\n  if (!selectedNodeKey) {\n    return;\n  }\n\n  const current = layout.nodes[selectedNodeKey];\n  const center = (op: OpLayout | AssetLayout): {x: number; y: number} => ({\n    x: op.bounds.x + op.bounds.width / 2,\n    y: op.bounds.y + op.bounds.height / 2,\n  });\n\n  /* Sort all the ops in the graph based on their attractiveness\n    as a jump target. We want the nearest node in the exact same row for left/right,\n    and the visually \"closest\" node above/below for up/down. */\n  const score = (op: OpLayout | AssetLayout): number => {\n    const dx = center(op).x - center(current).x;\n    const dy = center(op).y - center(current).y;\n\n    if (dir === 'left' && dy === 0 && dx < 0) {\n      return -dx;\n    }\n    if (dir === 'right' && dy === 0 && dx > 0) {\n      return dx;\n    }\n    if (dir === 'up' && dy < 0) {\n      return -dy + Math.abs(dx) / 5;\n    }\n    if (dir === 'down' && dy > 0) {\n      return dy + Math.abs(dx) / 5;\n    }\n    return Number.NaN;\n  };\n\n  const closest = Object.keys(layout.nodes)\n    .map((name) => ({name, score: score(layout.nodes[name])}))\n    .filter((e) => e.name !== selectedNodeKey && !Number.isNaN(e.score))\n    .sort((a, b) => b.score - a.score)\n    .pop();\n\n  return closest ? closest.name : undefined;\n};\n\n/**\n * Identifies groups of ops that share a similar `prefix.` and returns\n * an array of bounding boxes and common prefixes. Used to render lightweight\n * outlines around flattened composites.\n */\nexport function computeNodeKeyPrefixBoundingBoxes(layout: OpGraphLayout) {\n  const groups: {[base: string]: IBounds[]} = {};\n  let maxDepth = 0;\n\n  for (const key of Object.keys(layout.nodes)) {\n    const parts = key.split('.');\n    if (parts.length === 1) {\n      continue;\n    }\n    for (let ii = 1; ii < parts.length; ii++) {\n      const base = parts.slice(0, ii).join('.');\n      groups[base] = groups[base] || [];\n      groups[base].push(layout.nodes[key].bounds);\n      maxDepth = Math.max(maxDepth, ii);\n    }\n  }\n\n  const boxes: (IBounds & {name: string})[] = [];\n  for (const base of Object.keys(groups)) {\n    const group = groups[base];\n    const depth = base.split('.').length;\n    const margin = 5 + (maxDepth - depth) * 5;\n\n    if (group.length === 1) {\n      continue;\n    }\n    const x1 = Math.min(...group.map((l) => l.x)) - margin;\n    const x2 = Math.max(...group.map((l) => l.x + l.width)) + margin;\n    const y1 = Math.min(...group.map((l) => l.y)) - margin;\n    const y2 = Math.max(...group.map((l) => l.y + l.height)) + margin;\n    boxes.push({name: base, x: x1, y: y1, width: x2 - x1, height: y2 - y1});\n  }\n\n  return boxes;\n}\n\nexport const position = ({x, y, width, height}: IBounds) => ({\n  left: x,\n  top: y,\n  width,\n  height,\n  position: 'absolute' as const,\n});\n","import {gql} from '@apollo/client';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\n\nexport const RESUME_BACKFILL_MUTATION = gql`\n  mutation resumeBackfill($backfillId: String!) {\n    resumePartitionBackfill(backfillId: $backfillId) {\n      __typename\n      ... on ResumeBackfillSuccess {\n        backfillId\n      }\n      ... on UnauthorizedError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nexport const LAUNCH_PARTITION_BACKFILL_MUTATION = gql`\n  mutation LaunchPartitionBackfill($backfillParams: LaunchBackfillParams!) {\n    launchPartitionBackfill(backfillParams: $backfillParams) {\n      __typename\n      ... on LaunchBackfillSuccess {\n        backfillId\n      }\n      ... on PartitionSetNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n      ... on InvalidStepError {\n        invalidStepKey\n      }\n      ... on InvalidOutputError {\n        stepKey\n        invalidOutputName\n      }\n      ... on UnauthorizedError {\n        message\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on RunConflict {\n        message\n      }\n      ... on ConflictingExecutionParamsError {\n        message\n      }\n      ... on PresetNotFoundError {\n        message\n      }\n      ... on RunConfigValidationInvalid {\n        pipelineName\n        errors {\n          __typename\n          message\n          path\n          reason\n        }\n      }\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\n\nexport const showLaunchError = (error: Error) => {\n  console.error('Error launching run:', error);\n\n  const body =\n    error.message === 'Failed to fetch' ? (\n      <div style={{fontFamily: FontFamily.default}}>\n        Make sure the Dagit server is running and try again.\n      </div>\n    ) : (\n      <div>{error.message}</div>\n    );\n\n  showCustomAlert({\n    title: 'Could not launch run',\n    body,\n  });\n};\n","import {gql} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {Code} from '@blueprintjs/core';\nimport {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {breakOnUnderscores} from '../app/Util';\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT, TypeWithTooltip} from '../typeexplorer/TypeWithTooltip';\n\nimport {OpTypeSignatureFragment} from './types/OpTypeSignatureFragment';\n\ninterface IOpTypeSignature {\n  definition: OpTypeSignatureFragment;\n}\n\nexport const OpTypeSignature: React.FC<IOpTypeSignature> = (props) => {\n  const {inputDefinitions, outputDefinitions} = props.definition;\n\n  const inputSide = inputDefinitions.map((input, i) => (\n    <span key={i}>\n      {breakOnUnderscores(input.name)}: <TypeWithTooltip type={input.type} />\n      {i < inputDefinitions.length - 1 ? ', ' : ''}\n    </span>\n  ));\n  const outputSide = outputDefinitions.map((output, i) => (\n    <span key={i}>\n      {breakOnUnderscores(output.name)}: <TypeWithTooltip type={output.type} />\n      {i < outputDefinitions.length - 1 ? ', ' : ''}\n    </span>\n  ));\n  return (\n    <TypeSignature>\n      ({inputSide}) ⇒ ({outputSide})\n    </TypeSignature>\n  );\n};\n\nexport const OP_TYPE_SIGNATURE_FRAGMENT = gql`\n  fragment OpTypeSignatureFragment on ISolidDefinition {\n    outputDefinitions {\n      name\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n    inputDefinitions {\n      name\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n`;\n\nconst TypeSignature = styled(Code)`\n  && {\n    background: ${Colors.Blue50};\n    font-family: ${FontFamily.monospace};\n    font-size: 14px;\n    padding: 4px;\n    box-shadow: none;\n    color: black;\n  }\n`;\n","import {Box, Tooltip, Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useViewport} from '../gantt/useViewport';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {assembleIntoSpans} from './SpanRepresentation';\n\ntype SelectionRange = {\n  start: string;\n  end: string;\n};\n\nconst MIN_SPAN_WIDTH = 8;\n\nexport enum PartitionState {\n  MISSING = 'missing',\n  SUCCESS = 'success',\n  SUCCESS_MISSING = 'success_missing', // states where the run succeeded in the past for a given step, but is missing for the last run\n  FAILURE = 'failure',\n  FAILURE_MISSING = 'failure_missing', // states where the run failed in the past for a given step, but is missing for the last run\n  QUEUED = 'queued',\n  STARTED = 'started',\n}\n\nexport const runStatusToPartitionState = (runStatus: RunStatus | null) => {\n  switch (runStatus) {\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return PartitionState.FAILURE;\n    case RunStatus.STARTED:\n      return PartitionState.STARTED;\n    case RunStatus.SUCCESS:\n      return PartitionState.SUCCESS;\n    case RunStatus.QUEUED:\n      return PartitionState.QUEUED;\n    default:\n      return PartitionState.MISSING;\n  }\n};\n\nexport const PartitionStatus: React.FC<{\n  partitionNames: string[];\n  partitionStateForKey: (partitionKey: string, partitionIdx: number) => PartitionState;\n  selected?: string[];\n  small?: boolean;\n  onClick?: (partitionName: string) => void;\n  onSelect?: (selection: string[]) => void;\n  splitPartitions?: boolean;\n  hideStatusTooltip?: boolean;\n  tooltipMessage?: string;\n  selectionWindowSize?: number;\n}> = ({\n  partitionNames,\n  partitionStateForKey,\n  selected,\n  onSelect,\n  onClick,\n  splitPartitions,\n  small,\n  selectionWindowSize,\n  hideStatusTooltip,\n  tooltipMessage,\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [currentSelectionRange, setCurrentSelectionRange] = React.useState<\n    SelectionRange | undefined\n  >();\n  const {viewport, containerProps} = useViewport();\n\n  const toPartitionName = React.useCallback(\n    (e: MouseEvent) => {\n      if (!ref.current) {\n        return null;\n      }\n      const percentage =\n        (e.clientX - ref.current.getBoundingClientRect().left) / ref.current.clientWidth;\n      return partitionNames[Math.floor(percentage * partitionNames.length)];\n    },\n    [partitionNames, ref],\n  );\n  const getRangeSelection = React.useCallback(\n    (start: string, end: string) => {\n      const startIdx = partitionNames.indexOf(start);\n      const endIdx = partitionNames.indexOf(end);\n      return partitionNames.slice(Math.min(startIdx, endIdx), Math.max(startIdx, endIdx) + 1);\n    },\n    [partitionNames],\n  );\n\n  React.useEffect(() => {\n    if (!currentSelectionRange || !onSelect || !selected) {\n      return;\n    }\n    const onMouseMove = (e: MouseEvent) => {\n      const end = toPartitionName(e) || currentSelectionRange.end;\n      setCurrentSelectionRange({start: currentSelectionRange?.start, end});\n    };\n    const onMouseUp = (e: MouseEvent) => {\n      if (!currentSelectionRange) {\n        return;\n      }\n      const end = toPartitionName(e) || currentSelectionRange.end;\n      const currentSelection = getRangeSelection(currentSelectionRange.start, end);\n\n      const operation = !e.getModifierState('Shift')\n        ? 'replace'\n        : currentSelection.every((name) => selected.includes(name))\n        ? 'subtract'\n        : 'add';\n\n      if (operation === 'replace') {\n        onSelect(currentSelection);\n      } else if (operation === 'subtract') {\n        onSelect(selected.filter((x) => !currentSelection.includes(x)));\n      } else if (operation === 'add') {\n        onSelect(Array.from(new Set([...selected, ...currentSelection])));\n      }\n      setCurrentSelectionRange(undefined);\n    };\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n    return () => {\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [onSelect, selected, currentSelectionRange, getRangeSelection, toPartitionName]);\n\n  const selectedSpans = selected\n    ? assembleIntoSpans(partitionNames, (key) => selected.includes(key)).filter((s) => s.status)\n    : [];\n\n  const spans = splitPartitions\n    ? partitionNames.map((name, idx) => ({\n        startIdx: idx,\n        endIdx: idx,\n        status: partitionStateForKey(name, idx),\n      }))\n    : _partitionsToSpans(\n        partitionNames,\n        Object.fromEntries(\n          partitionNames.map((name, idx) => [name, partitionStateForKey(name, idx)]),\n        ),\n      );\n\n  const highestIndex = spans.map((s) => s.endIdx).reduce((prev, cur) => Math.max(prev, cur), 0);\n  const indexToPct = (idx: number) => `${((idx * 100) / partitionNames.length).toFixed(3)}%`;\n  const showSeparators =\n    splitPartitions && viewport.width > MIN_SPAN_WIDTH * (partitionNames.length + 1);\n\n  const _onClick = onClick\n    ? (e: React.MouseEvent<any, MouseEvent>) => {\n        const partitionName = toPartitionName(e.nativeEvent);\n        partitionName && onClick(partitionName);\n      }\n    : undefined;\n\n  const _onMouseDown = onSelect\n    ? (e: React.MouseEvent<any, MouseEvent>) => {\n        const partitionName = toPartitionName(e.nativeEvent);\n        partitionName && setCurrentSelectionRange({start: partitionName, end: partitionName});\n      }\n    : undefined;\n\n  return (\n    <div\n      {...containerProps}\n      onMouseDown={(e) => e.preventDefault()}\n      onDragStart={(e) => e.preventDefault()}\n    >\n      {selected && !selectionWindowSize ? (\n        <SelectionSpansContainer>\n          {selectedSpans.map((s) => (\n            <div\n              className=\"selection-span\"\n              key={s.startIdx}\n              style={{\n                left: `min(calc(100% - 2px), ${indexToPct(s.startIdx)})`,\n                width: indexToPct(s.endIdx - s.startIdx + 1),\n              }}\n            />\n          ))}\n        </SelectionSpansContainer>\n      ) : null}\n      <PartitionSpansContainer\n        style={{height: small ? 12 : 24}}\n        ref={ref}\n        onClick={_onClick}\n        onMouseDown={_onMouseDown}\n      >\n        {spans.map((s) => (\n          <div\n            key={s.startIdx}\n            style={{\n              left: `min(calc(100% - 2px), ${indexToPct(s.startIdx)})`,\n              width: indexToPct(s.endIdx - s.startIdx + 1),\n              minWidth: s.status && s.status !== PartitionState.MISSING ? 2 : undefined,\n              position: 'absolute',\n              zIndex:\n                s.startIdx === 0 || s.endIdx === highestIndex\n                  ? 3\n                  : s.status && s.status !== PartitionState.MISSING\n                  ? 2\n                  : 1, //End-caps, then statuses, then missing\n              top: 0,\n            }}\n          >\n            {hideStatusTooltip || tooltipMessage ? (\n              <div\n                className=\"color-span\"\n                style={partitionStateToStyle(s.status)}\n                title={tooltipMessage}\n              />\n            ) : (\n              <Tooltip\n                display=\"block\"\n                position=\"top\"\n                content={\n                  tooltipMessage\n                    ? tooltipMessage\n                    : s.startIdx === s.endIdx\n                    ? `Partition ${partitionNames[s.startIdx]} is ${partitionStatusToText(\n                        s.status,\n                      ).toLowerCase()}`\n                    : `Partitions ${partitionNames[s.startIdx]} through ${\n                        partitionNames[s.endIdx]\n                      } are ${partitionStatusToText(s.status).toLowerCase()}`\n                }\n              >\n                <div className=\"color-span\" style={partitionStateToStyle(s.status)} />\n              </Tooltip>\n            )}\n          </div>\n        ))}\n        {showSeparators\n          ? spans.slice(1).map((s) => (\n              <div\n                className=\"separator\"\n                key={`separator_${s.startIdx}`}\n                style={{\n                  left: `min(calc(100% - 2px), ${indexToPct(s.startIdx)})`,\n                  height: small ? 14 : 24,\n                }}\n              />\n            ))\n          : null}\n        {currentSelectionRange ? (\n          <SelectionHoverHighlight\n            style={{\n              left: `min(calc(100% - 2px), ${indexToPct(\n                Math.min(\n                  partitionNames.indexOf(currentSelectionRange.start),\n                  partitionNames.indexOf(currentSelectionRange.end),\n                ),\n              )})`,\n              width: indexToPct(\n                Math.abs(\n                  partitionNames.indexOf(currentSelectionRange.end) -\n                    partitionNames.indexOf(currentSelectionRange.start),\n                ) + 1,\n              ),\n              height: small ? 14 : 24,\n            }}\n          />\n        ) : null}\n        {selected && selected.length && selectionWindowSize ? (\n          <>\n            <SelectionFade\n              key=\"selectionFadeLeft\"\n              style={{\n                left: 0,\n                width: indexToPct(\n                  Math.min(\n                    partitionNames.indexOf(selected[selected.length - 1]),\n                    partitionNames.indexOf(selected[0]),\n                  ),\n                ),\n                height: small ? 14 : 24,\n              }}\n            />\n            <SelectionBorder\n              style={{\n                left: `min(calc(100% - 3px), ${indexToPct(\n                  Math.min(\n                    partitionNames.indexOf(selected[0]),\n                    partitionNames.indexOf(selected[selected.length - 1]),\n                  ),\n                )})`,\n                width: indexToPct(\n                  Math.abs(\n                    partitionNames.indexOf(selected[selected.length - 1]) -\n                      partitionNames.indexOf(selected[0]),\n                  ) + 1,\n                ),\n                height: small ? 14 : 24,\n              }}\n            />\n            <SelectionFade\n              key=\"selectionFadeRight\"\n              style={{\n                right: 0,\n                width: indexToPct(\n                  partitionNames.length -\n                    1 -\n                    Math.max(\n                      partitionNames.indexOf(selected[selected.length - 1]),\n                      partitionNames.indexOf(selected[0]),\n                    ),\n                ),\n                height: small ? 14 : 24,\n              }}\n            />\n          </>\n        ) : null}\n      </PartitionSpansContainer>\n      {!splitPartitions ? (\n        <Box\n          flex={{justifyContent: 'space-between'}}\n          margin={{top: 4}}\n          style={{fontSize: '0.8rem', color: Colors.Gray500, minHeight: 17}}\n        >\n          <span>{partitionNames[0]}</span>\n          <span>{partitionNames[partitionNames.length - 1]}</span>\n        </Box>\n      ) : null}\n    </div>\n  );\n};\n\nfunction _partitionsToSpans(keys: string[], keyStatus: {[key: string]: PartitionState}) {\n  const spans: {startIdx: number; endIdx: number; status: PartitionState}[] = [];\n\n  for (let ii = 0; ii < keys.length; ii++) {\n    const status: PartitionState =\n      keys[ii] in keyStatus ? keyStatus[keys[ii]] : PartitionState.MISSING;\n    if (!spans.length || spans[spans.length - 1].status !== status) {\n      spans.push({startIdx: ii, endIdx: ii, status});\n    } else {\n      spans[spans.length - 1].endIdx = ii;\n    }\n  }\n\n  return spans;\n}\n\nexport const partitionStateToStyle = (status: PartitionState): React.CSSProperties => {\n  switch (status) {\n    case PartitionState.SUCCESS:\n      return {background: Colors.Green500};\n    case PartitionState.SUCCESS_MISSING:\n      return {\n        background: `linear-gradient(135deg, ${Colors.Green500} 25%, ${Colors.Gray200} 25%, ${Colors.Gray200} 50%, ${Colors.Green500} 50%, ${Colors.Green500} 75%, ${Colors.Gray200} 75%, ${Colors.Gray200} 100%)`,\n        backgroundSize: '8.49px 8.49px',\n      };\n    case PartitionState.FAILURE:\n      return {background: Colors.Red500};\n    case PartitionState.STARTED:\n      return {background: Colors.Blue500};\n    case PartitionState.QUEUED:\n      return {background: Colors.Blue200};\n    default:\n      return {background: Colors.Gray200};\n  }\n};\n\nexport const partitionStatusToText = (status: PartitionState) => {\n  switch (status) {\n    case PartitionState.SUCCESS:\n      return 'Completed';\n    case PartitionState.SUCCESS_MISSING:\n      return 'Partial';\n    case PartitionState.FAILURE:\n      return 'Failed';\n    case PartitionState.STARTED:\n      return 'In progress';\n    case PartitionState.QUEUED:\n      return 'Queued';\n    default:\n      return 'Missing';\n  }\n};\n\nconst SelectionSpansContainer = styled.div`\n  position: relative;\n  width: 100%;\n  overflow-x: hidden;\n  height: 10px;\n\n  .selection-span {\n    position: absolute;\n    top: 0;\n    height: 8px;\n    border: 2px solid ${Colors.Blue500};\n    border-bottom: 0;\n  }\n`;\n\nconst PartitionSpansContainer = styled.div`\n  position: relative;\n  width: 100%;\n  border-radius: 4px;\n  overflow: hidden;\n  cursor: col-resize;\n  background: ${Colors.Gray200};\n\n  .color-span {\n    width: 100%;\n    height: 24px;\n    outline: none;\n  }\n\n  .separator {\n    width: 1px;\n    position: absolute;\n    z-index: 4;\n    background: ${Colors.KeylineGray};\n    top: 0;\n  }\n`;\n\nconst SelectionFade = styled.div`\n  position: absolute;\n  z-index: 5;\n  background: ${Colors.White};\n  opacity: 0.5;\n  top: 0;\n`;\n\nconst SelectionHoverHighlight = styled.div`\n  min-width: 2px;\n  position: absolute;\n  z-index: 4;\n  background: ${Colors.White};\n  opacity: 0.7;\n  top: 0;\n`;\n\nconst SelectionBorder = styled.div`\n  min-width: 2px;\n  position: absolute;\n  z-index: 5;\n  border: 3px solid ${Colors.Dark};\n  border-radius: 4px;\n  top: 0;\n`;\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nexport const BOX_SIZE = 32;\n\nexport const STEP_STATUS_COLORS = {\n  SUCCESS: Colors.Green500,\n  SUCCESS_SKIPPED: Colors.Green200,\n  FAILURE: Colors.Red500,\n  FAILURE_SKIPPED: Colors.Red200,\n  SKIPPED: Colors.Yellow500,\n  IN_PROGRESS: '#eee',\n};\n\n// In CSS, you can layer multiple backgrounds on top of each other by comma-separating values in\n// `background`. However, this only works with gradients, not with primitive color values. To do\n// hovered + red without color math (?), just stack the colors as flat gradients.\nconst flatGradient = (color: string) => `linear-gradient(to left, ${color} 0%, ${color} 100%)`;\nconst flatGradientStack = (colors: string[]) => colors.map(flatGradient).join(',');\n\nexport const GridColumn = styled.div<{\n  disabled?: boolean;\n  hovered?: boolean;\n  focused?: boolean;\n  multiselectFocused?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  line-height: 0;\n\n  ${({disabled, focused, multiselectFocused, hovered}) =>\n    !disabled &&\n    !focused &&\n    !multiselectFocused &&\n    `&${hovered ? '' : ':hover'} {\n      background: ${Colors.Gray100};\n      cursor: default;\n      ${TopLabelTiltedInner} {\n        background: ${Colors.White};\n        .tilted {\n          background: ${Colors.Gray100};\n        }\n      }\n      .square {\n        filter: brightness(95%);\n      }\n    }`}\n\n  ${({disabled}) =>\n    disabled &&\n    `\n      ${TopLabelTiltedInner} {\n        color: ${Colors.Gray400}\n      }\n    `}\n\n  ${({focused}) =>\n    focused &&\n    `background: ${Colors.Blue500};\n    ${LeftLabel} {\n      color: white;\n    }\n    ${TopLabelTiltedInner} {\n      background: ${Colors.White};\n      color: white;\n      .tilted {\n        background: ${Colors.Blue500};\n      }\n    }\n  }`}\n\n  ${({multiselectFocused}) =>\n    multiselectFocused &&\n    `background: ${Colors.Blue200};\n    ${LeftLabel} {\n      color: white;\n    }\n    ${TopLabelTiltedInner} {\n      background: ${Colors.White};\n      color: white;\n      .tilted {\n        background: ${Colors.Blue200};\n      }\n    }\n  }`}\n\n  .cell {\n    height: ${BOX_SIZE}px;\n    display: inline-block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font-size: 12px;\n    padding: 2px;\n    box-sizing: border-box;\n    line-height: initial;\n  }\n\n  .square {\n    width: 20px;\n    height: 20px;\n    margin: 6px;\n    display: inline-block;\n\n    &:hover:not(.empty):before {\n      box-shadow: ${Colors.Blue500} 0 0 0 3px;\n    }\n    &:before {\n      content: ' ';\n      background: rgba(248, 247, 245, 1);\n      border-radius: 10px;\n      display: inline-block;\n      width: 20px;\n      height: 20px;\n    }\n    &.loading {\n      &:before {\n        background: radial-gradient(white 0%, white 45%, rgba(248, 247, 245, 1) 60%);\n      }\n    }\n    &.success {\n      &:before {\n        background: ${STEP_STATUS_COLORS.SUCCESS};\n      }\n    }\n    &.failure {\n      &:before {\n        background: ${STEP_STATUS_COLORS.FAILURE};\n      }\n    }\n    &.success-missing {\n      &:before {\n        background: ${STEP_STATUS_COLORS.SUCCESS_SKIPPED};\n      }\n    }\n    &.failure-missing {\n      &:before {\n        background: ${STEP_STATUS_COLORS.FAILURE_SKIPPED};\n      }\n    }\n    &.failure-blank {\n      &:before {\n        background: ${STEP_STATUS_COLORS.FAILURE_SKIPPED};\n      }\n    }\n    &.skipped {\n      &:before {\n        background: ${STEP_STATUS_COLORS.SKIPPED};\n      }\n    }\n  }\n`;\n\nexport const LeftLabel = styled.div<{hovered?: boolean}>`\n  height: ${BOX_SIZE}px;\n  line-height: ${BOX_SIZE}px;\n  font-size: 13px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  position: relative;\n  background: ${({hovered}) => flatGradientStack([hovered ? Colors.Gray100 : 'transparent'])};\n`;\n\nexport const TopLabel = styled.div`\n  position: relative;\n  height: 70px;\n  padding: 4px;\n  padding-bottom: 0;\n  min-width: 15px;\n  align-items: flex-end;\n  display: flex;\n`;\n\nconst TITLE_MARGIN_BOTTOM = 15;\nconst ROTATION_DEGREES = 41;\n\nexport function topLabelHeightForLabels(labels: string[]) {\n  const maxlength = Math.max(...labels.map((p) => p.length));\n  return (maxlength > 10 ? maxlength * 4.9 : 55) + TITLE_MARGIN_BOTTOM;\n}\n\nexport const TopLabelTilted: React.FC<{label: string; $height: number}> = ({label, $height}) => {\n  return (\n    <TopLabelTiltedInner style={{height: $height - TITLE_MARGIN_BOTTOM}}>\n      <div className=\"tilted\">{label}</div>\n    </TopLabelTiltedInner>\n  );\n};\n\nconst TopLabelTiltedInner = styled.div`\n  position: relative;\n  height: unset; /* provide via style tag */\n  padding: 4px;\n  padding-bottom: 0;\n  min-width: 15px;\n  margin-bottom: ${TITLE_MARGIN_BOTTOM}px;\n  align-items: end;\n  display: flex;\n  line-height: normal;\n\n  & > div.tilted {\n    font-size: 12px;\n    white-space: nowrap;\n    position: absolute;\n    bottom: -20px;\n    left: 0;\n    padding: 2px;\n    padding-right: 4px;\n    padding-left: 0;\n    transform: rotate(-${ROTATION_DEGREES}deg);\n    transform-origin: top left;\n  }\n`;\n\nexport const GRID_FLOATING_CONTAINER_WIDTH = 330;\n\nexport const GridFloatingContainer = styled.div<{floating: boolean}>`\n  display: flex;\n  border-right: 1px solid ${Colors.Gray200};\n  padding-bottom: 16px;\n  width: ${GRID_FLOATING_CONTAINER_WIDTH}px;\n  z-index: 1;\n  ${({floating}) => (floating ? 'box-shadow: 1px 0 4px rgba(0, 0, 0, 0.15)' : '')};\n`;\n\nexport const GridScrollContainer = styled.div`\n  padding-right: 60px;\n  padding-bottom: 16px;\n  overflow-x: scroll;\n  overscroll-behavior-x: contain;\n  z-index: 0;\n  background: ${Colors.White};\n  flex: 1;\n  scrollbar-color: ${Colors.Gray500} ${Colors.Gray100};\n  scrollbar-width: thin;\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n  &::-webkit-scrollbar:vertical {\n    width: 11px;\n  }\n  &::-webkit-scrollbar:horizontal {\n    height: 11px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 8px;\n    border: 2px solid ${Colors.Gray100};\n    background-color: ${Colors.Gray500};\n  }\n  &::-webkit-scrollbar-track {\n    background-color: ${Colors.Gray100};\n  }\n`;\n","export function assembleIntoSpans<T>(keys: string[], keyTestFn: (key: string, idx: number) => T) {\n  const spans: {startIdx: number; endIdx: number; status: T}[] = [];\n\n  for (let ii = 0; ii < keys.length; ii++) {\n    const status = keyTestFn(keys[ii], ii);\n    if (!spans.length || spans[spans.length - 1].status !== status) {\n      spans.push({startIdx: ii, endIdx: ii, status});\n    } else {\n      spans[spans.length - 1].endIdx = ii;\n    }\n  }\n\n  return spans;\n}\n\nexport function stringForSpan(\n  {startIdx, endIdx}: {startIdx: number; endIdx: number},\n  all: string[],\n) {\n  return startIdx === endIdx ? all[startIdx] : `[${all[startIdx]}...${all[endIdx]}]`;\n}\n\nexport function allPartitionsSpan({partitionKeys}: {partitionKeys: string[]}) {\n  return stringForSpan({startIdx: 0, endIdx: partitionKeys.length - 1}, partitionKeys);\n}\n\nexport function textToPartitions(selected: string, all: string[]) {\n  const terms = selected.split(',').map((s) => s.trim());\n  const result = [];\n  for (const term of terms) {\n    if (term.length === 0) {\n      continue;\n    }\n    const rangeMatch = /^\\[(.*)\\.\\.\\.(.*)\\]$/g.exec(term);\n    if (rangeMatch) {\n      const [, start, end] = rangeMatch;\n      const allStartIdx = all.indexOf(start);\n      const allEndIdx = all.indexOf(end);\n      if (allStartIdx === -1 || allEndIdx === -1) {\n        throw new Error(`Could not find partitions for provided range: ${start}...${end}`);\n      }\n      result.push(...all.slice(allStartIdx, allEndIdx + 1));\n    } else if (term.includes('*')) {\n      const [prefix, suffix] = term.split('*');\n      result.push(...all.filter((p) => p.startsWith(prefix) && p.endsWith(suffix)));\n    } else {\n      const idx = all.indexOf(term);\n      if (idx === -1) {\n        throw new Error(`Could not find partition: ${term}`);\n      }\n      result.push(term);\n    }\n  }\n  return result.sort((a, b) => all.indexOf(a) - all.indexOf(b));\n}\n\nexport function partitionsToText(selected: string[], all: string[]) {\n  return assembleIntoSpans(all, (key) => selected.includes(key))\n    .filter((s) => s.status)\n    .map((s) => stringForSpan(s, all))\n    .join(', ');\n}\n","import {GraphExplorerSolidHandleFragment} from './types/GraphExplorerSolidHandleFragment';\n\nfunction explodeComposite(\n  handles: GraphExplorerSolidHandleFragment[],\n  composite: GraphExplorerSolidHandleFragment,\n) {\n  if (composite.solid.definition.__typename !== 'CompositeSolidDefinition') {\n    throw new Error('explodeComposite takes a composite handle.');\n  }\n\n  // Find all the solid handles that are within this composite and prefix their\n  // names with the composite container's name, giving them names that should\n  // match their handleID. (Note: We can't assign them their real handleIDs\n  // because we'd have to dig through `handles` to find each solid based on it's\n  // name + parentHandleID and then get it's handleID - dependsOn, etc. provide\n  // Solid references not SolidHandle references.)\n  const nested = handles.filter((h) => h.handleID === `${composite.handleID}.${h.solid.name}`);\n  nested.forEach((n) => {\n    n.solid.name = n.handleID;\n    n.solid.inputs.forEach((i) => {\n      i.dependsOn.forEach((d) => {\n        d.solid.name = `${composite.handleID}.${d.solid.name}`;\n      });\n    });\n    n.solid.outputs.forEach((i) => {\n      i.dependedBy.forEach((d) => {\n        d.solid.name = `${composite.handleID}.${d.solid.name}`;\n      });\n    });\n  });\n\n  composite.solid.definition.inputMappings.forEach((inmap) => {\n    // For each input mapping on the composite, find the referenced parts of the graph:\n    // The composite input, mapped (interior) solid and interior solid input.\n    //\n    const compositeInput = composite.solid.inputs.find(\n      (i) => i.definition.name === inmap.definition.name,\n    );\n    if (!compositeInput) {\n      console.warn(`CompositeSupport: No composite input matching ${inmap.definition.name}`);\n      return;\n    }\n\n    const interiorTargetName = `${composite.solid.name}.${inmap.mappedInput.solid.name}`;\n    const [interiorTarget] = handles.filter((h) => h.handleID === interiorTargetName);\n    if (!interiorTarget) {\n      console.warn(`CompositeSupport: No interior solid matching ${interiorTargetName}`);\n      return;\n    }\n    const interiorTargetInput = interiorTarget.solid.inputs.find(\n      (i) => i.definition.name === inmap.mappedInput.definition.name,\n    );\n    if (!interiorTargetInput) {\n      console.warn(\n        `CompositeSupport: No interior solid input matching ${inmap.mappedInput.definition.name}`,\n      );\n      return;\n    }\n\n    // Ok! We need to update the input.dependsOn AND the output.dependedBy\n    // (both references to the relationship) to ensure correct graph rendering.\n\n    // Change #1: Give the interior solid input (the target of the input mapping)\n    // the \"dependsOn\" of the composite input, effectively \"applying\" the mapping.\n    interiorTargetInput.dependsOn.push(...compositeInput.dependsOn);\n\n    // Change #2: Find handles on the graph that were bound to this composite input\n    // and change their output.dependedBy[] to point to the interior solid.\n    handles.forEach((h) =>\n      h.solid.outputs.forEach((i) => {\n        i.dependedBy.forEach((dep) => {\n          if (\n            dep.solid.name === composite.solid.name &&\n            dep.definition.name === compositeInput.definition.name\n          ) {\n            dep.solid.name = interiorTargetName;\n            dep.definition.name = interiorTargetInput.definition.name;\n          }\n        });\n      }),\n    );\n  });\n\n  // Repeat the code above for outputs - this is just different enough that it's\n  // not worth abstracting to re-use code...\n\n  composite.solid.definition.outputMappings.forEach((outmap) => {\n    const compositeOutput = composite.solid.outputs.find(\n      (i) => i.definition.name === outmap.definition.name,\n    );\n    if (!compositeOutput) {\n      console.warn(`CompositeSupport: No composite input matching ${outmap.definition.name}`);\n      return;\n    }\n    const interiorTargetName = `${composite.solid.name}.${outmap.mappedOutput.solid.name}`;\n    const [interiorTarget] = handles.filter((h) => h.handleID === interiorTargetName);\n    if (!interiorTarget) {\n      console.warn(`CompositeSupport: No interior solid matching ${interiorTargetName}`);\n      return;\n    }\n    const interiorTargetOutput = interiorTarget.solid.outputs.find(\n      (i) => i.definition.name === outmap.mappedOutput.definition.name,\n    );\n    if (!interiorTargetOutput) {\n      console.warn(\n        `CompositeSupport: No interior solid output matching ${outmap.mappedOutput.definition.name}`,\n      );\n      return;\n    }\n    // Change #1: Give the interior solid output (the target of the output mapping)\n    // the \"dependedBy\" of the composite output, effectively \"applying\" the mapping.\n    interiorTargetOutput.dependedBy.push(...compositeOutput.dependedBy);\n\n    // Change #2: Find handles on the graph that were bound to this composite output\n    // and change their input.dependsOn[] to point to the interior solid.\n    handles.forEach((h) =>\n      h.solid.inputs.forEach((i) => {\n        i.dependsOn.forEach((dep) => {\n          if (\n            dep.solid.name === composite.solid.name &&\n            dep.definition.name === compositeOutput.definition.name\n          ) {\n            dep.solid.name = interiorTargetName;\n            dep.definition.name = interiorTargetOutput.definition.name;\n          }\n        });\n      }),\n    );\n  });\n\n  // Return the interior solids that replace the composite in the graph\n  return nested;\n}\n\n/**\n * Given a solid handle graph, returns a new solid handle graph with all of the\n * composites recursively replaced with their interior solids. Interior solids\n * are given their handle names (\"composite.inner\") to avoid name collisions.\n *\n * @param handles All the SolidHandles in the pipeline (NOT just current layer)\n */\nexport function explodeCompositesInHandleGraph(handles: GraphExplorerSolidHandleFragment[]) {\n  // Clone the entire graph so we can modify solid names in-place\n  handles = JSON.parse(JSON.stringify(handles));\n\n  // Reset the output to just the solids in the top layer of the graph\n  const results = handles.filter((h) => !h.handleID.includes('.'));\n\n  // Find composites in the output and replace the composite with it's content\n  // solids (renaming the content solids to include the composite's handle and\n  // linking them to the other solids via the composite's input/output mappings)\n  while (true) {\n    const idx = results.findIndex(\n      (h) => h.solid.definition.__typename === 'CompositeSolidDefinition',\n    );\n    if (idx === -1) {\n      break;\n    }\n    results.splice(idx, 1, ...explodeComposite(handles, results[idx]));\n  }\n\n  return results;\n}\n","import {Markdown} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\ninterface IDescriptionProps {\n  description: string | null;\n  maxHeight?: number;\n}\n\ninterface IDescriptionState {\n  hasMore: boolean;\n  expanded: boolean;\n}\n\nconst DEFAULT_MAX_HEIGHT = 320;\n\n/*\nIf `input` begins with whitespace and every line contains at least that whitespace,\nit removes it. Otherwise, return the original string.\n*/\nfunction removeLeadingSpaces(input: string) {\n  const leadingSpaces = /^\\n?( +)/.exec(input);\n  if (leadingSpaces == null) {\n    return input;\n  }\n\n  const lines = input.split('\\n');\n  if (!lines.every((l) => l.substr(0, leadingSpaces[1].length).trim() === '')) {\n    return input;\n  }\n\n  return lines.map((l) => l.substr(leadingSpaces[1].length)).join('\\n');\n}\n\nexport class Description extends React.Component<IDescriptionProps, IDescriptionState> {\n  private _container: React.RefObject<HTMLDivElement> = React.createRef();\n\n  public state: IDescriptionState = {\n    hasMore: false,\n    expanded: false,\n  };\n\n  componentDidMount() {\n    this.updateHandleState();\n  }\n\n  componentDidUpdate() {\n    this.updateHandleState();\n  }\n\n  updateHandleState() {\n    if (!this._container.current) {\n      return;\n    }\n    const hasMore =\n      this._container.current.clientHeight > (this.props.maxHeight || DEFAULT_MAX_HEIGHT);\n    if (hasMore !== this.state.hasMore) {\n      this.setState({hasMore});\n    }\n  }\n\n  render() {\n    if (!this.props.description || this.props.description.length === 0) {\n      return null;\n    }\n\n    const {expanded, hasMore} = this.state;\n    return (\n      <Container\n        onDoubleClick={() => {\n          const sel = document.getSelection();\n          if (!sel || !this._container.current) {\n            return;\n          }\n          const range = document.createRange();\n          range.selectNodeContents(this._container.current);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }}\n        style={{\n          maxHeight: expanded ? undefined : this.props.maxHeight || DEFAULT_MAX_HEIGHT,\n        }}\n      >\n        {!expanded && hasMore && <Mask />}\n        {hasMore && (\n          <ShowMoreHandle onClick={() => this.setState({expanded: !expanded})}>\n            {expanded ? 'Show Less' : 'Show More'}\n          </ShowMoreHandle>\n        )}\n\n        <div ref={this._container} style={{overflowX: 'auto'}}>\n          <Markdown>{removeLeadingSpaces(this.props.description)}</Markdown>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  overflow: hidden;\n  font-size: 0.8rem;\n  position: relative;\n  p:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Mask = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    to bottom,\n    rgba(255, 255, 255, 0) 0%,\n    rgba(255, 255, 255, 0) 70%,\n    rgba(255, 255, 255, 1)\n  );\n  pointer-events: none;\n  border-bottom: 1px solid #eee;\n`;\n\nconst ShowMoreHandle = styled.a`\n  line-height: 20px;\n  position: absolute;\n  padding: 0 14px;\n  bottom: 0;\n  left: 50%;\n  height: 20px;\n  transform: translate(-50%);\n  background: #eee;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {weakmapMemoize} from '../app/Util';\nimport {buildSVGPath} from '../asset-graph/Utils';\n\nimport {OpGraphLayout, OpLayout, OpLayoutEdge} from './asyncGraphLayout';\nimport {OpLayoutEdgeSide, OpLayoutIO} from './layout';\nimport {OpGraphOpFragment} from './types/OpGraphOpFragment';\n\nexport type Edge = {a: string; b: string};\n\ntype Path = {\n  path: string;\n  sourceOutput: OpLayoutIO;\n  targetInput: OpLayoutIO;\n  from: OpLayoutEdgeSide;\n  to: OpLayoutEdgeSide;\n};\n\nconst buildSVGPaths = weakmapMemoize((edges: OpLayoutEdge[], nodes: {[name: string]: OpLayout}) =>\n  edges\n    .map(({from, to}) => {\n      const source = nodes[from.opName];\n      const sourceOutput =\n        source.outputs[from.edgeName] ||\n        Object.values(source.outputs).find((o) => o.collapsed.includes(from.edgeName));\n\n      const target = nodes[to.opName];\n      const targetInput =\n        target.inputs[to.edgeName] ||\n        Object.values(target.inputs).find((o) => o.collapsed.includes(to.edgeName));\n\n      if (!sourceOutput || !targetInput) {\n        console.log(`Unexpected error: An input or output is not reflected in the DAG layout`);\n        return null;\n      }\n      return {\n        // can also use from.point for the \"Dagre\" closest point on node\n        path: buildSVGPath({source: sourceOutput.port, target: targetInput.port}),\n        sourceOutput,\n        targetInput,\n        from,\n        to,\n      };\n    })\n    .filter((path): path is Path => !!path),\n);\n\nconst outputIsDynamic = (ops: OpGraphOpFragment[], from: {opName: string; edgeName: string}) => {\n  const op = ops.find((s) => s.name === from.opName);\n  const outDef = op?.definition.outputDefinitions.find((o) => o.name === from.edgeName);\n  return outDef?.isDynamic || false;\n};\n\nconst inputIsDynamicCollect = (\n  ops: OpGraphOpFragment[],\n  to: {opName: string; edgeName: string},\n) => {\n  const op = ops.find((s) => s.name === to.opName);\n  const inputDef = op?.inputs.find((o) => o.definition.name === to.edgeName);\n  return inputDef?.isDynamicCollect || false;\n};\n\nexport const OpEdges = React.memo(\n  (props: {\n    color: string;\n    ops: OpGraphOpFragment[];\n    layout: OpGraphLayout;\n    edges: OpLayoutEdge[];\n    onHighlight: (arr: Edge[]) => void;\n  }) => (\n    <g>\n      {buildSVGPaths(props.edges, props.layout.nodes).map(\n        ({path, from, sourceOutput, targetInput, to}, idx) => (\n          <g\n            key={idx}\n            onMouseLeave={() => props.onHighlight([])}\n            onMouseEnter={() => props.onHighlight([{a: from.opName, b: to.opName}])}\n          >\n            <StyledPath d={path} style={{stroke: props.color}} />\n            {outputIsDynamic(props.ops, from) && (\n              <DynamicMarker\n                color={props.color}\n                x={sourceOutput.layout.x}\n                y={sourceOutput.layout.y}\n                direction=\"output\"\n              />\n            )}\n            {inputIsDynamicCollect(props.ops, to) && (\n              <DynamicMarker\n                color={props.color}\n                x={targetInput.layout.x}\n                y={targetInput.layout.y}\n                direction=\"collect\"\n              />\n            )}\n          </g>\n        ),\n      )}\n    </g>\n  ),\n);\n\nOpEdges.displayName = 'OpEdges';\n\nconst DynamicMarker: React.FC<{\n  x: number;\n  y: number;\n  direction: 'output' | 'collect';\n  color: string;\n}> = ({x, y, direction, color}) => (\n  <g\n    fill={color}\n    transform={`translate(${x - 35}, ${y})${\n      direction === 'collect' ? ',rotate(180),translate(-20, -40)' : ''\n    }`}\n  >\n    <title>{direction === 'output' ? 'DynamicOutput' : 'DynamicCollect'}</title>\n    <polygon points=\"14.2050781 21 14.0400391 15.2236328 18.953125 18.2705078 20.984375 14.7285156 15.8935547 11.9736328 20.984375 9.21875 18.953125 5.68945312 14.0400391 8.72363281 14.2050781 2.95996094 10.1425781 2.95996094 10.2949219 8.72363281 5.38183594 5.68945312 3.36328125 9.21875 8.45410156 11.9736328 3.36328125 14.7285156 5.38183594 18.2705078 10.2949219 15.2236328 10.1425781 21\"></polygon>\n    <polygon points=\"18.6367188 35.1669922 20.8203125 32.9707031 12.0605469 24.2109375 3.28808594 32.9707031 5.47167969 35.1669922 12.0605469 28.5908203\"></polygon>\n  </g>\n);\n\nconst StyledPath = styled('path')`\n  stroke-width: 4;\n  fill: none;\n`;\n","import {FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\n\nconst PX_TO_UNITS = 0.53;\n\ninterface ISize {\n  width: number;\n  height: number;\n  compressionPriority?: number;\n}\n\ninterface ISVGMonospaceTextProps {\n  width?: number;\n  size: number;\n  text: string;\n  allowTwoLines?: boolean;\n}\n\nconst LINE_SPACING = 1.25;\n\nconst clipToLength = (str: string, len: number) => {\n  return str.length > len ? str.substr(0, len - 1) + '…' : str;\n};\n\n/*\nWraps <text>, exposes an intrinsic size and automatically truncates with ellipsis\nif it's given a fixed width less than the space required for it's text.\n*/\nexport class SVGMonospaceText extends React.PureComponent<\n  ISVGMonospaceTextProps & React.SVGAttributes<SVGElement>\n> {\n  static intrinsicSizeForProps(props: ISVGMonospaceTextProps): ISize {\n    return {\n      width: Math.min(props.text.length * props.size * PX_TO_UNITS),\n      height: props.size,\n    };\n  }\n\n  render() {\n    const {y, width, size, text, allowTwoLines, ...rest} = this.props;\n\n    const lineChars = width ? Math.round(width / (size * PX_TO_UNITS)) : text.length;\n    let line1 = '';\n    let line2 = '';\n\n    if (allowTwoLines) {\n      const parts = text.split('_');\n      while (parts.length && line1.length + parts[0].length <= lineChars) {\n        line1 += parts.shift() + (parts.length > 0 ? '_' : '');\n      }\n      line2 = clipToLength(parts.join('_'), lineChars);\n    } else {\n      line1 = clipToLength(text, lineChars);\n    }\n\n    const line1Y = (Number(y) || 0) - (line2.length > 0 ? (Number(size) * LINE_SPACING) / 2 : 0);\n\n    const style: React.CSSProperties = {\n      fontFamily: FontFamily.monospace,\n      fontSize: `${size}px`,\n      pointerEvents: 'none',\n    };\n\n    return (\n      <>\n        <text\n          {...rest}\n          y={line1Y}\n          style={style}\n          width={line1.length * size * PX_TO_UNITS}\n          height={size}\n          dominantBaseline=\"hanging\"\n        >\n          {line1}\n        </text>\n        {line2 && (\n          <text\n            {...rest}\n            y={line1Y + Number(size) * LINE_SPACING}\n            style={style}\n            width={line2.length * size * PX_TO_UNITS}\n            height={size}\n            dominantBaseline=\"hanging\"\n          >\n            {line2}\n          </text>\n        )}\n      </>\n    );\n  }\n}\n\nexport const SVGLabeledRect: React.FC<{\n  x: number;\n  y: number;\n  minified: boolean;\n  width: number;\n  height: number;\n  label: string;\n  fill: string;\n  className?: string;\n}> = ({minified, label, fill, className, ...rect}) => (\n  <g>\n    <rect {...rect} fill={fill} stroke=\"#979797\" strokeWidth={1} className={className} />\n    <SVGMonospaceText\n      x={rect.x + (minified ? 10 : 5)}\n      y={rect.y + (minified ? 10 : 5)}\n      height={undefined}\n      size={minified ? 30 : 16}\n      text={label}\n      fill=\"#979797\"\n    />\n  </g>\n);\n","import {Colors} from '@dagster-io/ui';\nimport {LinkVertical as Link} from '@vx/shape';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Edge} from './OpEdges';\nimport {SVGMonospaceText} from './SVGComponents';\nimport {IPoint, isHighlighted} from './common';\n\ninterface ExternalConnectionNodeProps {\n  layout: IPoint;\n  target: IPoint;\n  labelAttachment: 'top' | 'bottom';\n  label: string;\n  minified: boolean;\n\n  // Passed through from Solid props\n  edges: Edge[];\n  highlightedEdges: Edge[];\n  onHighlightEdges: (edges: Edge[]) => void;\n  onDoubleClickLabel: () => void;\n}\n\nexport const ExternalConnectionNode: React.FC<ExternalConnectionNodeProps> = ({\n  layout,\n  target,\n  edges,\n  label,\n  labelAttachment,\n  minified,\n  highlightedEdges,\n  onHighlightEdges,\n  onDoubleClickLabel,\n}) => {\n  const textProps = {width: 0, size: minified ? 24 : 12, text: label};\n  const textSize = SVGMonospaceText.intrinsicSizeForProps(textProps);\n  const highlighted = edges.some((e) => isHighlighted(highlightedEdges, e));\n  const color = highlighted ? '#555' : '#C7CBCD';\n\n  // https://github.com/dagster-io/dagster/issues/1504\n  if (!layout) {\n    return null;\n  }\n\n  const textOrigin = {\n    x: layout.x - textSize.width / 2,\n    y: layout.y + (labelAttachment === 'top' ? -10 - textSize.height : 10),\n  };\n\n  return (\n    <g onMouseEnter={() => onHighlightEdges(edges)} onMouseLeave={() => onHighlightEdges([])}>\n      <BackingRect\n        {...textSize}\n        {...textOrigin}\n        onClick={(e) => e.stopPropagation()}\n        onDoubleClick={(e) => {\n          e.stopPropagation();\n          onDoubleClickLabel();\n        }}\n      />\n      <ellipse cx={layout.x} cy={layout.y} rx={7} ry={7} fill={color} />\n      <SVGMonospaceText {...textProps} {...textSize} {...textOrigin} />\n      <Link style={{stroke: color, strokeWidth: 6, fill: 'none'}} data={{source: layout, target}} />\n    </g>\n  );\n};\n\nconst BackingRect = styled('rect')`\n  stroke-width: 10px;\n  fill: ${Colors.Gray100};\n  stroke: ${Colors.Gray100};\n  &:hover {\n    fill: ${Colors.Gray200};\n    stroke: ${Colors.Gray200};\n  }\n`;\n","import * as React from 'react';\n\nimport {Edge} from './OpEdges';\nimport {IPoint, isHighlighted} from './common';\n\ninterface MappingLineProps {\n  source: IPoint;\n  target: IPoint;\n  leftEdgeX: number;\n  minified: boolean;\n  edge: Edge;\n\n  highlightedEdges: Edge[];\n  onHighlightEdges: (edges: Edge[]) => void;\n}\nexport const MappingLine: React.FC<MappingLineProps> = ({\n  source,\n  target,\n  minified,\n  leftEdgeX,\n  edge,\n  highlightedEdges,\n  onHighlightEdges,\n}) => {\n  const highlighted = isHighlighted(highlightedEdges, edge);\n\n  return (\n    <g onMouseEnter={() => onHighlightEdges([edge])} onMouseLeave={() => onHighlightEdges([])}>\n      <path\n        d={`M ${source.x} ${source.y} H ${leftEdgeX} V ${target.y} H ${target.x}`}\n        fill=\"none\"\n        strokeWidth={minified ? 6 : 5}\n        strokeLinecap=\"round\"\n        stroke={highlighted ? 'black' : 'rgb(137, 206, 206)'}\n      />\n      <path\n        d={`M ${source.x} ${source.y} H ${leftEdgeX} V ${target.y} H ${target.x}`}\n        fill=\"none\"\n        strokeWidth={4}\n        strokeLinecap=\"round\"\n        stroke=\"white\"\n      />\n    </g>\n  );\n};\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {titleOfIO} from '../app/titleOfIO';\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\n\nimport {ExternalConnectionNode} from './ExternalConnectionNode';\nimport {MappingLine} from './MappingLine';\nimport {metadataForCompositeParentIO, PARENT_IN, PARENT_OUT, OpIOBox} from './OpIOBox';\nimport {SVGLabeledRect} from './SVGComponents';\nimport {OpGraphLayout} from './asyncGraphLayout';\nimport {Edge} from './common';\nimport {OpGraphOpFragment} from './types/OpGraphOpFragment';\n\ninterface ParentOpNodeProps {\n  layout: OpGraphLayout;\n  op: OpGraphOpFragment;\n  minified: boolean;\n\n  highlightedEdges: Edge[];\n  onDoubleClick: (opName: string) => void;\n  onClickOp: (arg: OpNameOrPath) => void;\n  onHighlightEdges: (edges: Edge[]) => void;\n}\n\nexport const ParentOpNode: React.FC<ParentOpNodeProps> = (props) => {\n  const {layout, op, minified} = props;\n\n  const def = props.op.definition;\n  if (def.__typename !== 'CompositeSolidDefinition') {\n    throw new Error('Parent op is not a composite - how did this happen?');\n  }\n\n  const parentLayout = layout.parent;\n  if (!parentLayout) {\n    throw new Error('Parent op rendered when no parent layout is present.');\n  }\n\n  const {bounds, mappingLeftEdge, mappingLeftSpacing} = parentLayout;\n  const highlightingProps = {\n    highlightedEdges: props.highlightedEdges,\n    onHighlightEdges: props.onHighlightEdges,\n    onDoubleClick: props.onDoubleClick,\n    onClickOp: props.onClickOp,\n  };\n\n  if (bounds.height < 0 || bounds.width < 0) {\n    return <g />;\n  }\n  return (\n    <>\n      <SVGLabeledParentRect\n        {...bounds}\n        label={op.definition.name}\n        fill={Colors.Gray50}\n        minified={minified}\n      />\n      {def.inputMappings.map(({definition, mappedInput}, idx) => {\n        const destination = layout.nodes[mappedInput.solid.name];\n        if (!destination) {\n          return <g />;\n        }\n        const sourcePort = parentLayout.inputs[definition.name].port;\n        const trgtPort = destination.inputs[mappedInput.definition.name].port;\n\n        return (\n          <MappingLine\n            {...highlightingProps}\n            key={`in-${idx}`}\n            target={trgtPort}\n            source={sourcePort}\n            minified={minified}\n            leftEdgeX={mappingLeftEdge - idx * mappingLeftSpacing}\n            edge={{a: titleOfIO(mappedInput), b: PARENT_IN}}\n          />\n        );\n      })}\n      {def.outputMappings.map(({definition, mappedOutput}, idx) => {\n        const destination = layout.nodes[mappedOutput.solid.name];\n        if (!destination) {\n          return <g />;\n        }\n        const sourcePort = parentLayout.outputs[definition.name].port;\n        const trgtPort = destination.outputs[mappedOutput.definition.name].port;\n\n        return (\n          <MappingLine\n            {...highlightingProps}\n            key={`out-${idx}`}\n            target={trgtPort}\n            source={sourcePort}\n            minified={minified}\n            leftEdgeX={mappingLeftEdge - idx * mappingLeftSpacing}\n            edge={{a: titleOfIO(mappedOutput), b: PARENT_OUT}}\n          />\n        );\n      })}\n      <foreignObject width={layout.width} height={layout.height} style={{pointerEvents: 'none'}}>\n        {op.definition.inputDefinitions.map((input, idx) => {\n          const metadata = metadataForCompositeParentIO(op.definition, input);\n          const invocationInput = op.inputs.find((i) => i.definition.name === input.name)!;\n\n          return (\n            <React.Fragment key={idx}>\n              {invocationInput.dependsOn.map((dependsOn, iidx) => (\n                <ExternalConnectionNode\n                  {...highlightingProps}\n                  {...metadata}\n                  key={iidx}\n                  labelAttachment=\"top\"\n                  label={titleOfIO(dependsOn)}\n                  minified={minified}\n                  layout={parentLayout.dependsOn[titleOfIO(dependsOn)]}\n                  target={parentLayout.inputs[input.name].port}\n                  onDoubleClickLabel={() => props.onClickOp({path: ['..', dependsOn.solid.name]})}\n                />\n              ))}\n              <OpIOBox\n                {...highlightingProps}\n                {...metadata}\n                minified={minified}\n                colorKey=\"input\"\n                item={input}\n                layoutInfo={parentLayout.inputs[input.name]}\n              />\n            </React.Fragment>\n          );\n        })}\n        {op.definition.outputDefinitions.map((output, idx) => {\n          const metadata = metadataForCompositeParentIO(op.definition, output);\n          const invocationOutput = op.outputs.find((i) => i.definition.name === output.name)!;\n\n          return (\n            <React.Fragment key={idx}>\n              {invocationOutput.dependedBy.map((dependedBy, iidx) => (\n                <ExternalConnectionNode\n                  {...highlightingProps}\n                  {...metadata}\n                  key={iidx}\n                  labelAttachment=\"bottom\"\n                  label={titleOfIO(dependedBy)}\n                  minified={minified}\n                  layout={parentLayout.dependedBy[titleOfIO(dependedBy)]}\n                  target={parentLayout.outputs[output.name].port}\n                  onDoubleClickLabel={() => props.onClickOp({path: ['..', dependedBy.solid.name]})}\n                />\n              ))}\n              <OpIOBox\n                {...highlightingProps}\n                {...metadata}\n                minified={minified}\n                colorKey=\"output\"\n                item={output}\n                layoutInfo={parentLayout.outputs[output.name]}\n              />\n            </React.Fragment>\n          );\n        })}\n      </foreignObject>\n    </>\n  );\n};\n\nexport const SVGLabeledParentRect = styled(SVGLabeledRect)`\n  transition: x 250ms ease-out, y 250ms ease-out, width 250ms ease-out, height 250ms ease-out;\n`;\n","import {gql} from '@apollo/client';\nimport {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\n\nimport {OpEdges} from './OpEdges';\nimport {OpNode, OP_NODE_DEFINITION_FRAGMENT, OP_NODE_INVOCATION_FRAGMENT} from './OpNode';\nimport {ParentOpNode, SVGLabeledParentRect} from './ParentOpNode';\nimport {DETAIL_ZOOM, SVGViewport, SVGViewportInteractor} from './SVGViewport';\nimport {OpGraphLayout} from './asyncGraphLayout';\nimport {\n  Edge,\n  closestNodeInDirection,\n  computeNodeKeyPrefixBoundingBoxes,\n  isHighlighted,\n  isNodeOffscreen,\n  isOpHighlighted,\n} from './common';\nimport {OpGraphOpFragment} from './types/OpGraphOpFragment';\n\nconst NoOp = () => {};\n\ninterface OpGraphProps {\n  jobName: string;\n  layout: OpGraphLayout;\n  ops: OpGraphOpFragment[];\n  focusOps: OpGraphOpFragment[];\n  parentHandleID?: string;\n  parentOp?: OpGraphOpFragment;\n  selectedHandleID?: string;\n  selectedOp?: OpGraphOpFragment;\n  highlightedOps: Array<OpGraphOpFragment>;\n  interactor?: SVGViewportInteractor;\n  onClickOp?: (arg: OpNameOrPath) => void;\n  onDoubleClickOp?: (arg: OpNameOrPath) => void;\n  onEnterSubgraph?: (arg: OpNameOrPath) => void;\n  onLeaveSubgraph?: () => void;\n  onClickBackground?: () => void;\n}\n\ninterface OpGraphContentsProps extends OpGraphProps {\n  minified: boolean;\n  layout: OpGraphLayout;\n  viewportRect: {top: number; left: number; right: number; bottom: number};\n}\n\nconst OpGraphContents: React.FC<OpGraphContentsProps> = React.memo((props) => {\n  const [highlighted, setHighlighted] = React.useState<Edge[]>(() => []);\n\n  const {\n    layout,\n    minified,\n    ops,\n    viewportRect,\n    focusOps,\n    parentOp,\n    parentHandleID,\n    onClickOp = NoOp,\n    onDoubleClickOp = NoOp,\n    onEnterSubgraph = NoOp,\n    highlightedOps,\n    selectedOp,\n  } = props;\n\n  return (\n    <>\n      {parentOp && layout.parent && layout.parent.invocationBoundingBox.width > 0 && (\n        <SVGLabeledParentRect\n          {...layout.parent.invocationBoundingBox}\n          key={`composite-rect-${parentHandleID}`}\n          label=\"\"\n          fill={Colors.Yellow50}\n          minified={minified}\n        />\n      )}\n      {parentOp && (\n        <ParentOpNode\n          onClickOp={onClickOp}\n          onDoubleClick={(name) => onDoubleClickOp({name})}\n          onHighlightEdges={setHighlighted}\n          highlightedEdges={highlighted}\n          key={`composite-rect-${parentHandleID}-definition`}\n          minified={minified}\n          op={parentOp}\n          layout={layout}\n        />\n      )}\n      <OpEdges\n        ops={ops}\n        layout={layout}\n        color={Colors.KeylineGray}\n        edges={layout.edges}\n        onHighlight={setHighlighted}\n      />\n      <OpEdges\n        ops={ops}\n        layout={layout}\n        color={Colors.Blue500}\n        onHighlight={setHighlighted}\n        edges={layout.edges.filter(({from, to}) =>\n          isHighlighted(highlighted, {a: from.opName, b: to.opName}),\n        )}\n      />\n      {computeNodeKeyPrefixBoundingBoxes(layout).map((box, idx) => (\n        <rect\n          key={idx}\n          {...box}\n          stroke=\"rgb(230, 219, 238)\"\n          fill=\"rgba(230, 219, 238, 0.2)\"\n          strokeWidth={2}\n        />\n      ))}\n      <foreignObject width={layout.width} height={layout.height} style={{pointerEvents: 'none'}}>\n        {ops\n          .filter((op) => !isNodeOffscreen(layout.nodes[op.name].bounds, viewportRect))\n          .map((op) => (\n            <OpNode\n              key={op.name}\n              invocation={op}\n              definition={op.definition}\n              minified={minified}\n              onClick={() => onClickOp({name: op.name})}\n              onDoubleClick={() => onDoubleClickOp({name: op.name})}\n              onEnterComposite={() => onEnterSubgraph({name: op.name})}\n              onHighlightEdges={setHighlighted}\n              layout={layout.nodes[op.name]}\n              selected={selectedOp === op}\n              focused={focusOps.includes(op)}\n              highlightedEdges={\n                isOpHighlighted(highlighted, op.name) ? highlighted : EmptyHighlightedArray\n              }\n              dim={highlightedOps.length > 0 && highlightedOps.indexOf(op) === -1}\n            />\n          ))}\n      </foreignObject>\n    </>\n  );\n});\n\nOpGraphContents.displayName = 'OpGraphContents';\n\n// This is a specific empty array we pass to represent the common / empty case\n// so that OpNode can use shallow equality comparisons in shouldComponentUpdate.\nconst EmptyHighlightedArray: never[] = [];\n\nexport class OpGraph extends React.Component<OpGraphProps> {\n  viewportEl: React.RefObject<SVGViewport> = React.createRef();\n\n  argToOpLayout = (arg: OpNameOrPath) => {\n    const lastName = 'name' in arg ? arg.name : arg.path[arg.path.length - 1];\n    return this.props.layout.nodes[lastName];\n  };\n\n  centerOp = (arg: OpNameOrPath) => {\n    const opLayout = this.argToOpLayout(arg);\n    if (opLayout && this.viewportEl.current) {\n      this.viewportEl.current.zoomToSVGBox(opLayout.bounds, true);\n    }\n  };\n\n  focusOnOp = (arg: OpNameOrPath) => {\n    const opLayout = this.argToOpLayout(arg);\n    if (opLayout && this.viewportEl.current) {\n      this.viewportEl.current?.zoomToSVGBox(opLayout.bounds, true, DETAIL_ZOOM);\n    }\n  };\n\n  unfocus = (e: React.MouseEvent<any>) => {\n    this.viewportEl.current!.autocenter(true);\n    e.stopPropagation();\n  };\n\n  componentDidUpdate(prevProps: OpGraphProps) {\n    if (prevProps.parentOp !== this.props.parentOp) {\n      this.viewportEl.current!.cancelAnimations();\n      this.viewportEl.current!.autocenter();\n    }\n    if (prevProps.layout !== this.props.layout) {\n      this.viewportEl.current!.autocenter();\n    }\n    if (prevProps.selectedOp !== this.props.selectedOp && this.props.selectedOp) {\n      this.centerOp(this.props.selectedOp);\n    }\n  }\n\n  onArrowKeyDown = (_e: React.KeyboardEvent<any>, dir: string) => {\n    const nextOp = closestNodeInDirection(this.props.layout, this.props.selectedOp?.name, dir);\n    if (nextOp && this.props.onClickOp) {\n      this.props.onClickOp({name: nextOp});\n    }\n  };\n\n  render() {\n    const {layout, interactor, jobName, onClickBackground, onDoubleClickOp} = this.props;\n\n    return (\n      <SVGViewport\n        ref={this.viewportEl}\n        key={jobName}\n        maxZoom={1.2}\n        interactor={interactor || SVGViewport.Interactors.PanAndZoom}\n        graphWidth={layout.width}\n        graphHeight={layout.height}\n        onClick={onClickBackground}\n        onDoubleClick={this.unfocus}\n        onArrowKeyDown={this.onArrowKeyDown}\n      >\n        {({scale}, viewportRect) => (\n          <SVGContainer width={layout.width} height={layout.height + 200}>\n            <OpGraphContents\n              {...this.props}\n              layout={layout}\n              minified={scale < DETAIL_ZOOM - 0.01}\n              onDoubleClickOp={onDoubleClickOp || this.focusOnOp}\n              viewportRect={viewportRect}\n            />\n          </SVGContainer>\n        )}\n      </SVGViewport>\n    );\n  }\n}\n\nexport const OP_GRAPH_OP_FRAGMENT = gql`\n  fragment OpGraphOpFragment on Solid {\n    name\n    ...OpNodeInvocationFragment\n    definition {\n      name\n      ...OpNodeDefinitionFragment\n    }\n  }\n  ${OP_NODE_INVOCATION_FRAGMENT}\n  ${OP_NODE_DEFINITION_FRAGMENT}\n`;\n\nconst SVGContainer = styled.svg`\n  overflow: visible;\n  border-radius: 0;\n`;\n","import {gql} from '@apollo/client';\nimport {Box, ConfigTypeSchema} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {gqlTypePredicate} from '../app/Util';\nimport {dagsterTypeKind} from '../dagstertype/DagsterType';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {TableSchema} from '../metadata/TableSchema';\nimport {Description} from '../pipelines/Description';\nimport {SidebarSection, SidebarSubhead, SidebarTitle} from '../pipelines/SidebarComponents';\n\nimport {CONFIG_TYPE_SCHEMA_FRAGMENT} from './ConfigTypeSchema';\nimport {TypeExplorerFragment} from './types/TypeExplorerFragment';\n\ninterface ITypeExplorerProps {\n  isGraph: boolean;\n  type: TypeExplorerFragment;\n}\n\nexport const TypeExplorer: React.FC<ITypeExplorerProps> = (props) => {\n  const {name, metadataEntries, inputSchemaType, outputSchemaType, description} = props.type;\n  const typeKind = dagsterTypeKind(props.type);\n  const displayName = typeKind === 'standard' ? name : `${name} (${typeKind})`;\n  const tableSchema = metadataEntries.find(gqlTypePredicate('TableSchemaMetadataEntry'))?.schema;\n  return (\n    <div>\n      <SidebarSubhead />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <SidebarTitle>\n          <Link to=\"?tab=types\">{props.isGraph ? 'Graph types' : 'Pipeline types'}</Link>\n          {' > '}\n          {displayName}\n        </SidebarTitle>\n      </Box>\n      <SidebarSection title=\"Description\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <Description description={description || 'No Description Provided'} />\n        </Box>\n      </SidebarSection>\n      {tableSchema && (\n        <SidebarSection title=\"Columns\">\n          <TableSchema schema={tableSchema} itemHorizontalPadding={24} />\n        </SidebarSection>\n      )}\n      {inputSchemaType && (\n        <SidebarSection title=\"Input\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <ConfigTypeSchema\n              type={inputSchemaType}\n              typesInScope={inputSchemaType.recursiveConfigTypes}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n      {outputSchemaType && (\n        <SidebarSection title=\"Output\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <ConfigTypeSchema\n              type={outputSchemaType}\n              typesInScope={outputSchemaType.recursiveConfigTypes}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n    </div>\n  );\n};\n\nexport const TYPE_EXPLORER_FRAGMENT = gql`\n  fragment TypeExplorerFragment on DagsterType {\n    name\n    description\n    metadataEntries {\n      ...MetadataEntryFragment\n    }\n    inputSchemaType {\n      ...ConfigTypeSchemaFragment\n      recursiveConfigTypes {\n        ...ConfigTypeSchemaFragment\n      }\n    }\n    outputSchemaType {\n      ...ConfigTypeSchemaFragment\n      recursiveConfigTypes {\n        ...ConfigTypeSchemaFragment\n      }\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport * as React from 'react';\n\nimport {ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {Loading} from '../ui/Loading';\nimport {buildPipelineSelector} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\nimport {TypeExplorer, TYPE_EXPLORER_FRAGMENT} from './TypeExplorer';\nimport {\n  TypeExplorerContainerQuery,\n  TypeExplorerContainerQueryVariables,\n} from './types/TypeExplorerContainerQuery';\n\ninterface ITypeExplorerContainerProps {\n  explorerPath: ExplorerPath;\n  typeName: string;\n  repoAddress?: RepoAddress;\n}\n\nexport const TypeExplorerContainer: React.FC<ITypeExplorerContainerProps> = ({\n  explorerPath,\n  typeName,\n  repoAddress,\n}) => {\n  const pipelineSelector = buildPipelineSelector(repoAddress || null, explorerPath.pipelineName);\n  const queryResult = useQuery<TypeExplorerContainerQuery, TypeExplorerContainerQueryVariables>(\n    TYPE_EXPLORER_CONTAINER_QUERY,\n    {\n      fetchPolicy: 'cache-and-network',\n      variables: {\n        pipelineSelector,\n        dagsterTypeName: typeName,\n      },\n    },\n  );\n  return (\n    <Loading queryResult={queryResult}>\n      {(data) => {\n        if (\n          data.pipelineOrError &&\n          data.pipelineOrError.__typename === 'Pipeline' &&\n          data.pipelineOrError.dagsterTypeOrError &&\n          data.pipelineOrError.dagsterTypeOrError.__typename === 'RegularDagsterType'\n        ) {\n          return (\n            <TypeExplorer\n              isGraph={data.pipelineOrError.isJob}\n              type={data.pipelineOrError.dagsterTypeOrError}\n            />\n          );\n        } else {\n          return <div>Type Not Found</div>;\n        }\n      }}\n    </Loading>\n  );\n};\n\nconst TYPE_EXPLORER_CONTAINER_QUERY = gql`\n  query TypeExplorerContainerQuery(\n    $pipelineSelector: PipelineSelector!\n    $dagsterTypeName: String!\n  ) {\n    pipelineOrError(params: $pipelineSelector) {\n      __typename\n      ... on Pipeline {\n        id\n        isJob\n        dagsterTypeOrError(dagsterTypeName: $dagsterTypeName) {\n          __typename\n          ... on RegularDagsterType {\n            ...TypeExplorerFragment\n          }\n        }\n      }\n    }\n  }\n  ${TYPE_EXPLORER_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {SidebarSection, SidebarSubhead, SidebarTitle} from '../pipelines/SidebarComponents';\n\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT, TypeWithTooltip} from './TypeWithTooltip';\nimport {TypeListFragment} from './types/TypeListFragment';\n\ninterface ITypeListProps {\n  isGraph: boolean;\n  types: Array<TypeListFragment>;\n}\n\nfunction groupTypes(types: TypeListFragment[]): {[key: string]: TypeListFragment[]} {\n  const groups = {\n    Custom: Array<TypeListFragment>(),\n    'Built-in': Array<TypeListFragment>(),\n  };\n  types.forEach((type) => {\n    if (type.isBuiltin) {\n      groups['Built-in'].push(type);\n    } else {\n      groups['Custom'].push(type);\n    }\n  });\n  return groups;\n}\n\nexport const TypeList: React.FC<ITypeListProps> = (props) => {\n  const groups = groupTypes(props.types);\n  return (\n    <>\n      <SidebarSubhead />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <SidebarTitle>{props.isGraph ? 'Graph types' : 'Pipeline types'}</SidebarTitle>\n      </Box>\n      {Object.keys(groups).map((title, idx) => {\n        const typesForSection = groups[title];\n        const collapsedByDefault = idx !== 0 || groups[title].length === 0;\n\n        return (\n          <SidebarSection key={idx} title={title} collapsedByDefault={collapsedByDefault}>\n            <Box padding={{vertical: 16, horizontal: 24}}>\n              {typesForSection.length ? (\n                <StyledUL>\n                  {groups[title].map((type, i) => (\n                    <TypeLI key={i}>\n                      <TypeWithTooltip type={type} />\n                    </TypeLI>\n                  ))}\n                </StyledUL>\n              ) : (\n                <div style={{color: Colors.Gray500, fontSize: '12px'}}>None</div>\n              )}\n            </Box>\n          </SidebarSection>\n        );\n      })}\n    </>\n  );\n};\n\nexport const TYPE_LIST_FRAGMENT = gql`\n  fragment TypeListFragment on DagsterType {\n    name\n    isBuiltin\n    ...DagsterTypeWithTooltipFragment\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n`;\n\nconst StyledUL = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin: 0;\n  padding: 0;\n`;\n\nconst TypeLI = styled.li`\n  list-style-type: none;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, NonIdealState} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {Loading} from '../ui/Loading';\nimport {\n  buildPipelineSelector,\n  optionToRepoAddress,\n  useRepositoryOptions,\n} from '../workspace/WorkspaceContext';\nimport {findRepoContainingPipeline} from '../workspace/findRepoContainingPipeline';\nimport {RepoAddress} from '../workspace/types';\n\nimport {TypeList, TYPE_LIST_FRAGMENT} from './TypeList';\nimport {\n  TypeListContainerQuery,\n  TypeListContainerQueryVariables,\n} from './types/TypeListContainerQuery';\n\ninterface ITypeListContainerProps {\n  explorerPath: ExplorerPath;\n  repoAddress?: RepoAddress;\n}\n\nexport const TypeListContainer: React.FC<ITypeListContainerProps> = ({\n  explorerPath,\n  repoAddress,\n}) => {\n  const {pipelineName, snapshotId} = explorerPath;\n  const {options} = useRepositoryOptions();\n\n  const pipelineSelector = React.useMemo(() => {\n    if (!repoAddress) {\n      const reposWithMatch = findRepoContainingPipeline(options, pipelineName, snapshotId);\n      return reposWithMatch.length\n        ? buildPipelineSelector(optionToRepoAddress(reposWithMatch[0]), pipelineName)\n        : null;\n    }\n    return buildPipelineSelector(repoAddress, pipelineName);\n  }, [options, pipelineName, repoAddress, snapshotId]);\n\n  const queryResult = useQuery<TypeListContainerQuery, TypeListContainerQueryVariables>(\n    TYPE_LIST_CONTAINER_QUERY,\n    {\n      fetchPolicy: 'cache-and-network',\n      variables: {pipelineSelector: pipelineSelector!},\n      skip: !pipelineSelector,\n    },\n  );\n\n  if (!pipelineSelector) {\n    return (\n      <Box margin={48}>\n        <NonIdealState icon=\"error\" title=\"Could not fetch types for snapshot\" />\n      </Box>\n    );\n  }\n\n  return (\n    <Loading queryResult={queryResult}>\n      {(data) => {\n        if (data.pipelineOrError.__typename === 'Pipeline') {\n          return (\n            <TypeList\n              types={data.pipelineOrError.dagsterTypes}\n              isGraph={data.pipelineOrError.isJob}\n            />\n          );\n        } else {\n          return null;\n        }\n      }}\n    </Loading>\n  );\n};\n\nconst TYPE_LIST_CONTAINER_QUERY = gql`\n  query TypeListContainerQuery($pipelineSelector: PipelineSelector!) {\n    pipelineOrError(params: $pipelineSelector) {\n      __typename\n      ... on Pipeline {\n        id\n        isJob\n        name\n        dagsterTypes {\n          ...TypeListFragment\n        }\n      }\n    }\n  }\n\n  ${TYPE_LIST_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, Spinner, Tooltip} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {AssetValueGraph, AssetValueGraphData} from '../assets/AssetValueGraph';\nimport {StepStatusDot} from '../gantt/GanttStatusPanel';\nimport {linkToRunEvent} from '../runs/RunUtils';\nimport {RepoAddress} from '../workspace/types';\n\nimport {SidebarSection} from './SidebarComponents';\nimport {SidebarOpGraphsQuery, SidebarOpGraphsQueryVariables} from './types/SidebarOpGraphsQuery';\n\nexport const StateColors = {\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  SKIPPED: Colors.Gray500,\n};\n\nexport const SidebarOpExecutionGraphs: React.FC<{\n  handleID: string;\n  solidName: string;\n  pipelineName: string;\n  repoAddress: RepoAddress;\n}> = ({repoAddress, handleID, pipelineName, solidName}) => {\n  const [highlightedStartTime, setHighlightedStartTime] = React.useState<number | null>(null);\n  const result = useQuery<SidebarOpGraphsQuery, SidebarOpGraphsQueryVariables>(\n    SIDEBAR_OP_GRAPHS_QUERY,\n    {\n      variables: {\n        handleID,\n        selector: {\n          repositoryName: repoAddress.name,\n          repositoryLocationName: repoAddress.location,\n          pipelineName,\n        },\n      },\n      fetchPolicy: 'cache-and-network',\n    },\n  );\n  const stepStats =\n    result.data?.pipelineOrError.__typename === 'Pipeline'\n      ? result.data.pipelineOrError.solidHandle?.stepStats\n      : undefined;\n\n  const nodes =\n    stepStats && stepStats.__typename === 'SolidStepStatsConnection' ? stepStats.nodes : null;\n\n  const executionTime = React.useMemo(() => {\n    const values = nodes\n      ? nodes\n          .filter((s) => s.startTime && s.endTime)\n          .map((s) => ({\n            x: Number(s.startTime) * 1000,\n            xNumeric: Number(s.startTime) * 1000,\n            y: s.endTime! - s.startTime!,\n          }))\n      : [];\n\n    const xs = values.map((v) => v.xNumeric);\n    const ys = values.map((v) => v.y).filter((v) => !isNaN(v));\n    const data: AssetValueGraphData = {\n      xAxis: 'time',\n      values,\n      minXNumeric: Math.min(...xs),\n      maxXNumeric: Math.max(...xs),\n      minY: Math.min(...ys),\n      maxY: Math.max(...ys),\n    };\n    return data;\n  }, [nodes]);\n\n  if (stepStats?.__typename === 'SolidStepStatusUnavailableError') {\n    return <span />;\n  }\n\n  const displayed = (nodes || []).slice(0, 10);\n\n  return (\n    <>\n      <SidebarSection title=\"Execution Time\">\n        <Box flex={{alignItems: 'center', justifyContent: 'center'}}>\n          {result.loading ? (\n            <Spinner purpose=\"section\" />\n          ) : (\n            <AssetValueGraph\n              label=\"Step Execution Time\"\n              yAxisLabel=\"Seconds\"\n              width=\"100%\"\n              data={executionTime}\n              xHover={highlightedStartTime}\n              onHoverX={(v) => setHighlightedStartTime(v ? Number(v) : null)}\n            />\n          )}\n        </Box>\n      </SidebarSection>\n      <SidebarSection title=\"Execution Status\">\n        <Box padding={{left: 24, right: 16, vertical: 12}}>\n          <Box flex={{gap: 16}} style={{fontSize: '0.8rem'}}>\n            <div style={{flex: 1}}>{`Last ${displayed.length} Run${\n              displayed.length !== 1 ? 's' : ''\n            }`}</div>\n            <Box style={{overflowX: 'auto'}} flex={{gap: 2}}>\n              {displayed.reverse().map(({runId, status, startTime}) => (\n                <Tooltip\n                  key={runId}\n                  placement=\"bottom-end\"\n                  content={`View Run ${runId.slice(0, 8)} →`}\n                >\n                  <Link to={linkToRunEvent({runId}, {stepKey: solidName})}>\n                    <StepStatusDot\n                      onMouseEnter={() => startTime && setHighlightedStartTime(startTime * 1000)}\n                      onMouseLeave={() => setHighlightedStartTime(null)}\n                      style={{\n                        border: `2px solid ${\n                          startTime && startTime * 1000 === highlightedStartTime\n                            ? Colors.Blue500\n                            : 'transparent'\n                        }`,\n                        backgroundColor: status ? StateColors[status] : Colors.Gray200,\n                      }}\n                    />\n                  </Link>\n                </Tooltip>\n              ))}\n            </Box>\n          </Box>\n        </Box>\n      </SidebarSection>\n    </>\n  );\n};\n\nconst SIDEBAR_OP_GRAPHS_QUERY = gql`\n  query SidebarOpGraphsQuery($selector: PipelineSelector!, $handleID: String!) {\n    pipelineOrError(params: $selector) {\n      __typename\n      ... on Pipeline {\n        id\n        name\n        solidHandle(handleID: $handleID) {\n          stepStats(limit: 20) {\n            __typename\n\n            ... on SolidStepStatsConnection {\n              nodes {\n                runId\n                startTime\n                endTime\n                status\n              }\n            }\n            ... on SolidStepStatusUnavailableError {\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Button, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {breakOnUnderscores} from '../app/Util';\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT} from '../typeexplorer/TypeWithTooltip';\n\nimport {SidebarSection, SidebarTitle} from './SidebarComponents';\nimport {DependencyHeaderRow, DependencyRow, DependencyTable} from './SidebarOpHelpers';\nimport {SidebarOpInvocationFragment} from './types/SidebarOpInvocationFragment';\n\ninterface ISidebarOpInvocationProps {\n  solid: SidebarOpInvocationFragment;\n  onEnterSubgraph?: (arg: OpNameOrPath) => void;\n}\n\nexport const SidebarOpInvocation: React.FC<ISidebarOpInvocationProps> = (props) => {\n  const {solid, onEnterSubgraph} = props;\n  const showInputs = solid.inputs.some((o) => o.dependsOn.length);\n  const showOutputs = solid.outputs.some((o) => o.dependedBy.length);\n\n  return (\n    <div>\n      <SidebarSection title=\"Invocation\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <SidebarTitle>{breakOnUnderscores(solid.name)}</SidebarTitle>\n          {showInputs || showOutputs ? (\n            <DependencyTable>\n              <tbody>\n                {showInputs ? (\n                  <>\n                    <DependencyHeaderRow label=\"Inputs\" />\n                    {solid.inputs.map(({definition, dependsOn, isDynamicCollect}) =>\n                      dependsOn.map((source, idx) => (\n                        <DependencyRow\n                          key={idx}\n                          from={source}\n                          to={definition.name}\n                          isDynamic={isDynamicCollect}\n                        />\n                      )),\n                    )}\n                  </>\n                ) : null}\n                {showOutputs ? (\n                  <>\n                    <DependencyHeaderRow label=\"Outputs\" />\n                    {solid.outputs.map(({definition, dependedBy}) =>\n                      dependedBy.map((target, idx) => (\n                        <DependencyRow\n                          key={idx}\n                          from={definition.name}\n                          to={target}\n                          isDynamic={definition.isDynamic}\n                        />\n                      )),\n                    )}\n                  </>\n                ) : null}\n              </tbody>\n            </DependencyTable>\n          ) : null}\n          {onEnterSubgraph && (\n            <Box margin={{top: 12}}>\n              <Button\n                icon={<Icon name=\"zoom_in\" />}\n                onClick={() => onEnterSubgraph({name: solid.name})}\n              >\n                Expand graph\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </SidebarSection>\n    </div>\n  );\n};\n\nexport const SIDEBAR_OP_INVOCATION_FRAGMENT = gql`\n  fragment SidebarOpInvocationFragment on Solid {\n    name\n    inputs {\n      isDynamicCollect\n      definition {\n        name\n        description\n        type {\n          ...DagsterTypeWithTooltipFragment\n        }\n      }\n      dependsOn {\n        definition {\n          name\n        }\n        solid {\n          name\n        }\n      }\n    }\n    outputs {\n      definition {\n        name\n        description\n        isDynamic\n        type {\n          ...DagsterTypeWithTooltipFragment\n        }\n      }\n      dependedBy {\n        definition {\n          name\n        }\n        solid {\n          name\n        }\n      }\n    }\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, NonIdealState} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\nimport {LoadingSpinner} from '../ui/Loading';\nimport {RepoAddress} from '../workspace/types';\n\nimport {ExplorerPath} from './PipelinePathUtils';\nimport {SidebarOpDefinition, SIDEBAR_OP_DEFINITION_FRAGMENT} from './SidebarOpDefinition';\nimport {SidebarOpExecutionGraphs} from './SidebarOpExecutionGraphs';\nimport {SidebarOpInvocation, SIDEBAR_OP_INVOCATION_FRAGMENT} from './SidebarOpInvocation';\nimport {SidebarGraphOpQuery, SidebarGraphOpQueryVariables} from './types/SidebarGraphOpQuery';\nimport {SidebarOpFragment} from './types/SidebarOpFragment';\nimport {\n  SidebarPipelineOpQuery,\n  SidebarPipelineOpQueryVariables,\n} from './types/SidebarPipelineOpQuery';\n\ninterface SidebarOpProps {\n  handleID: string;\n  explorerPath: ExplorerPath;\n  showingSubgraph: boolean;\n  parentOpHandleID?: string;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  onEnterSubgraph?: (arg: OpNameOrPath) => void;\n  onClickOp: (arg: OpNameOrPath) => void;\n  repoAddress?: RepoAddress;\n  isGraph: boolean;\n}\n\nconst useSidebarOpQuery = (\n  name: string,\n  handleID: string,\n  isGraph: boolean,\n  repoAddress?: RepoAddress,\n) => {\n  const pipelineResult = useQuery<SidebarPipelineOpQuery, SidebarPipelineOpQueryVariables>(\n    SIDEBAR_PIPELINE_OP_QUERY,\n    {\n      variables: {\n        selector: {\n          repositoryName: repoAddress?.name || '',\n          repositoryLocationName: repoAddress?.location || '',\n          pipelineName: name,\n        },\n        handleID,\n      },\n      fetchPolicy: 'cache-and-network',\n      skip: isGraph,\n    },\n  );\n\n  const graphResult = useQuery<SidebarGraphOpQuery, SidebarGraphOpQueryVariables>(\n    SIDEBAR_GRAPH_OP_QUERY,\n    {\n      variables: {\n        selector: {\n          repositoryName: repoAddress?.name || '',\n          repositoryLocationName: repoAddress?.location || '',\n          graphName: name,\n        },\n        handleID,\n      },\n      fetchPolicy: 'cache-and-network',\n      skip: !isGraph,\n    },\n  );\n\n  if (isGraph) {\n    const {error, data, loading} = graphResult;\n    const solidContainer: SidebarOpFragment | undefined =\n      data?.graphOrError.__typename === 'Graph' ? data.graphOrError : undefined;\n    return {\n      error,\n      solidContainer,\n      isLoading: !!loading,\n    };\n  }\n\n  const {error, data, loading} = pipelineResult;\n  const solidContainer: SidebarOpFragment | undefined =\n    data?.pipelineOrError.__typename === 'Pipeline' ? data.pipelineOrError : undefined;\n  return {\n    error,\n    solidContainer,\n    isLoading: !!loading,\n  };\n};\n\nexport const SidebarOp: React.FC<SidebarOpProps> = ({\n  handleID,\n  explorerPath,\n  getInvocations,\n  showingSubgraph,\n  onEnterSubgraph,\n  onClickOp,\n  repoAddress,\n  isGraph,\n}) => {\n  const {error, solidContainer, isLoading} = useSidebarOpQuery(\n    explorerPath.pipelineName,\n    handleID,\n    isGraph,\n    repoAddress,\n  );\n  if (error) {\n    return (\n      <Box padding={64} flex={{justifyContent: 'center'}}>\n        <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n      </Box>\n    );\n  }\n\n  if (isLoading) {\n    return <LoadingSpinner purpose=\"section\" />;\n  }\n\n  if (!solidContainer) {\n    return (\n      <Box padding={{vertical: 16, horizontal: 24}} style={{color: Colors.Gray500}}>\n        Could not load ops.\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <SidebarOpInvocation\n        key={`${handleID}-inv`}\n        solid={solidContainer!.solidHandle!.solid}\n        onEnterSubgraph={\n          solidContainer!.solidHandle!.solid.definition.__typename === 'CompositeSolidDefinition'\n            ? onEnterSubgraph\n            : undefined\n        }\n      />\n      {!isGraph && repoAddress && (\n        <SidebarOpExecutionGraphs\n          key={`${handleID}-graphs`}\n          handleID={handleID}\n          solidName={solidContainer!.solidHandle!.solid.name}\n          pipelineName={explorerPath.pipelineName}\n          repoAddress={repoAddress}\n        />\n      )}\n      <SidebarOpDefinition\n        key={`${handleID}-def`}\n        showingSubgraph={showingSubgraph}\n        definition={solidContainer!.solidHandle!.solid.definition}\n        getInvocations={getInvocations}\n        onClickInvocation={({handleID}) => onClickOp({path: handleID.split('.')})}\n        repoAddress={repoAddress}\n      />\n    </>\n  );\n};\n\nconst SIDEBAR_OP_FRAGMENT = gql`\n  fragment SidebarOpFragment on SolidContainer {\n    id\n    name\n    solidHandle(handleID: $handleID) {\n      solid {\n        ...SidebarOpInvocationFragment\n\n        definition {\n          __typename\n          ...SidebarOpDefinitionFragment\n        }\n      }\n    }\n  }\n  ${SIDEBAR_OP_INVOCATION_FRAGMENT}\n  ${SIDEBAR_OP_DEFINITION_FRAGMENT}\n`;\n\nconst SIDEBAR_PIPELINE_OP_QUERY = gql`\n  query SidebarPipelineOpQuery($selector: PipelineSelector!, $handleID: String!) {\n    pipelineOrError(params: $selector) {\n      __typename\n      ... on Pipeline {\n        id\n        ...SidebarOpFragment\n      }\n    }\n  }\n  ${SIDEBAR_OP_FRAGMENT}\n`;\n\nconst SIDEBAR_GRAPH_OP_QUERY = gql`\n  query SidebarGraphOpQuery($selector: GraphSelector!, $handleID: String!) {\n    graphOrError(selector: $selector) {\n      __typename\n      ... on Graph {\n        id\n        ...SidebarOpFragment\n      }\n    }\n  }\n  ${SIDEBAR_OP_FRAGMENT}\n`;\n","import {Box, Colors, Tabs} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\nimport {TypeExplorerContainer} from '../typeexplorer/TypeExplorerContainer';\nimport {TypeListContainer} from '../typeexplorer/TypeListContainer';\nimport {TabLink} from '../ui/TabLink';\nimport {RepoAddress} from '../workspace/types';\n\nimport {RightInfoPanelContent} from './GraphExplorer';\nimport {ExplorerPath} from './PipelinePathUtils';\nimport {SidebarContainerOverview} from './SidebarContainerOverview';\nimport {SidebarOp} from './SidebarOp';\nimport {SidebarRootContainerFragment} from './types/SidebarRootContainerFragment';\n\ntype TabKey = 'types' | 'info';\n\ninterface TabDefinition {\n  name: string;\n  key: TabKey;\n  content: () => React.ReactNode;\n}\n\ninterface SidebarRootProps {\n  tab?: TabKey;\n  typeName?: string;\n  container: SidebarRootContainerFragment;\n  explorerPath: ExplorerPath;\n  opHandleID?: string;\n  parentOpHandleID?: string;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  onEnterSubgraph: (arg: OpNameOrPath) => void;\n  onClickOp: (arg: OpNameOrPath) => void;\n  repoAddress?: RepoAddress;\n}\n\nexport const SidebarRoot: React.FC<SidebarRootProps> = (props) => {\n  const {\n    tab,\n    typeName,\n    container,\n    repoAddress,\n    explorerPath,\n    opHandleID,\n    getInvocations,\n    parentOpHandleID,\n    onEnterSubgraph,\n    onClickOp,\n  } = props;\n\n  const activeTab = tab || 'info';\n\n  const TabDefinitions: Array<TabDefinition> = [\n    {\n      name: 'Info',\n      key: 'info',\n      content: () =>\n        opHandleID ? (\n          <SidebarOp\n            key={opHandleID}\n            explorerPath={explorerPath}\n            handleID={opHandleID}\n            showingSubgraph={false}\n            getInvocations={getInvocations}\n            onEnterSubgraph={onEnterSubgraph}\n            onClickOp={onClickOp}\n            repoAddress={repoAddress}\n            isGraph={container.__typename === 'Graph'}\n          />\n        ) : parentOpHandleID ? (\n          <SidebarOp\n            key={parentOpHandleID}\n            explorerPath={explorerPath}\n            handleID={parentOpHandleID}\n            showingSubgraph={true}\n            getInvocations={getInvocations}\n            onClickOp={onClickOp}\n            repoAddress={repoAddress}\n            isGraph={container.__typename === 'Graph'}\n          />\n        ) : (\n          <SidebarContainerOverview repoAddress={repoAddress} container={container} />\n        ),\n    },\n    {\n      name: 'Types',\n      key: 'types',\n      content: () =>\n        typeName ? (\n          <TypeExplorerContainer\n            explorerPath={explorerPath}\n            repoAddress={repoAddress}\n            typeName={typeName}\n          />\n        ) : (\n          <TypeListContainer repoAddress={repoAddress} explorerPath={explorerPath} />\n        ),\n    },\n  ];\n\n  return (\n    <>\n      <Box\n        padding={{horizontal: 24}}\n        border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n      >\n        <Tabs selectedTabId={activeTab}>\n          {TabDefinitions.map(({name, key}) => (\n            <TabLink id={key} key={key} to={{search: `?tab=${key}`}} title={name} />\n          ))}\n        </Tabs>\n      </Box>\n      <RightInfoPanelContent>\n        {TabDefinitions.find((t) => t.key === activeTab)?.content()}\n      </RightInfoPanelContent>\n    </>\n  );\n};\n","import {gql} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {Breadcrumbs} from '@blueprintjs/core';\nimport {Checkbox, Colors, SplitPanelContainer, TextInput} from '@dagster-io/ui';\nimport Color from 'color';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Route} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {OpGraph, OP_GRAPH_OP_FRAGMENT} from '../graph/OpGraph';\nimport {useOpLayout} from '../graph/asyncGraphLayout';\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\nimport {RepoAddress} from '../workspace/types';\n\nimport {\n  EmptyDAGNotice,\n  EntirelyFilteredDAGNotice,\n  LargeDAGNotice,\n  LoadingNotice,\n} from './GraphNotices';\nimport {ExplorerPath} from './PipelinePathUtils';\nimport {SIDEBAR_ROOT_CONTAINER_FRAGMENT} from './SidebarContainerOverview';\nimport {SidebarRoot} from './SidebarRoot';\nimport {GraphExplorerFragment} from './types/GraphExplorerFragment';\nimport {GraphExplorerSolidHandleFragment} from './types/GraphExplorerSolidHandleFragment';\n\nexport interface GraphExplorerOptions {\n  explodeComposites: boolean;\n  preferAssetRendering: boolean;\n}\n\ninterface GraphExplorerProps {\n  explorerPath: ExplorerPath;\n  onChangeExplorerPath: (path: ExplorerPath, mode: 'replace' | 'push') => void;\n  options: GraphExplorerOptions;\n  setOptions: (options: GraphExplorerOptions) => void;\n  container: GraphExplorerFragment;\n  repoAddress?: RepoAddress;\n  handles: GraphExplorerSolidHandleFragment[];\n  parentHandle?: GraphExplorerSolidHandleFragment;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  isGraph: boolean;\n}\n\nexport const GraphExplorer: React.FC<GraphExplorerProps> = (props) => {\n  const {\n    getInvocations,\n    handles,\n    options,\n    container,\n    explorerPath,\n    onChangeExplorerPath,\n    parentHandle,\n    setOptions,\n    repoAddress,\n    isGraph,\n  } = props;\n  const [nameMatch, setNameMatch] = React.useState('');\n\n  const handleQueryChange = (opsQuery: string) => {\n    onChangeExplorerPath({...explorerPath, opsQuery}, 'replace');\n  };\n\n  const handleAdjustPath = React.useMemo(\n    () => (fn: (opNames: string[]) => void) => {\n      const opNames = [...explorerPath.opNames];\n      const retValue = fn(opNames);\n      if (retValue !== undefined) {\n        throw new Error(\n          'handleAdjustPath function is expected to mutate the array and return nothing',\n        );\n      }\n      onChangeExplorerPath({...explorerPath, opNames}, 'push');\n    },\n    [onChangeExplorerPath, explorerPath],\n  );\n\n  // Note: this method handles relative solid paths, eg: {path: ['..', 'OtherSolid']}.\n  // This is important because the DAG component tree doesn't always have access to a handleID,\n  // and we sometimes want to be able to jump to a solid in the parent layer.\n  //\n  const handleClickOp = (arg: OpNameOrPath) => {\n    handleAdjustPath((opNames) => {\n      if ('name' in arg) {\n        opNames[opNames.length ? opNames.length - 1 : 0] = arg.name;\n      } else {\n        if (arg.path[0] !== '..') {\n          opNames.length = 0;\n        }\n        if (arg.path[0] === '..' && opNames[opNames.length - 1] !== '') {\n          opNames.pop(); // remove the last path component indicating selection\n        }\n        while (arg.path[0] === '..') {\n          arg.path.shift();\n          opNames.pop();\n        }\n        opNames.push(...arg.path);\n      }\n    });\n  };\n\n  const handleEnterCompositeSolid = (arg: OpNameOrPath) => {\n    // To animate the rect of the composite solid expanding correctly, we need\n    // to select it before entering it so we can draw the \"initial state\" of the\n    // labeled rectangle.\n    handleClickOp(arg);\n\n    window.requestAnimationFrame(() => {\n      handleAdjustPath((opNames) => {\n        const last = 'name' in arg ? arg.name : arg.path[arg.path.length - 1];\n        opNames[opNames.length - 1] = last;\n        opNames.push('');\n      });\n    });\n  };\n\n  const handleLeaveCompositeSolid = () => {\n    handleAdjustPath((opNames) => {\n      opNames.pop();\n    });\n  };\n\n  const handleClickBackground = () => {\n    handleClickOp({name: ''});\n  };\n\n  const {opsQuery, opNames} = explorerPath;\n\n  const selectedName = opNames[opNames.length - 1];\n  const selectedHandle = handles.find((h) => selectedName === h.solid.name);\n\n  // Run a few assertions on the state of the world and redirect the user\n  // back to safety if they've landed in an invalid place. Note that we can\n  // pop one layer at a time and this renders recursively until we reach a\n  // valid parent.\n  const invalidSelection = selectedName && !selectedHandle;\n  const invalidParent =\n    parentHandle && parentHandle.solid.definition.__typename !== 'CompositeSolidDefinition';\n\n  React.useEffect(() => {\n    if (invalidSelection || invalidParent) {\n      handleAdjustPath((opNames) => {\n        opNames.pop();\n      });\n    }\n  }, [handleAdjustPath, invalidSelection, invalidParent]);\n\n  const solids = React.useMemo(() => handles.map((h) => h.solid), [handles]);\n  const solidsQueryEnabled = !parentHandle && !explorerPath.snapshotId;\n  const showAssetRenderingOption =\n    !isGraph && solids.some((s) => s.definition.assetNodes.length > 0);\n  const explodeCompositesEnabled =\n    !parentHandle &&\n    (options.explodeComposites ||\n      solids.some((f) => f.definition.__typename === 'CompositeSolidDefinition'));\n\n  const queryResultOps = React.useMemo(\n    () =>\n      solidsQueryEnabled\n        ? filterByQuery(solids, opsQuery)\n        : {all: solids, focus: [], applyingEmptyDefault: false},\n    [opsQuery, solids, solidsQueryEnabled],\n  );\n\n  const highlightedOps = React.useMemo(\n    () => queryResultOps.all.filter((s) => s.name.toLowerCase().includes(nameMatch.toLowerCase())),\n    [nameMatch, queryResultOps.all],\n  );\n\n  const parentOp = parentHandle && parentHandle.solid;\n  const {layout, loading, async} = useOpLayout(queryResultOps.all, parentOp);\n\n  const breadcrumbs = React.useMemo(() => {\n    const opNames = explorerPath.opNames;\n    const breadcrumbs = opNames.map((name, idx) => ({\n      text: name,\n      onClick: () => {\n        onChangeExplorerPath({...explorerPath, opNames: opNames.slice(0, idx + 1)}, 'push');\n      },\n    }));\n    // If you're viewing a graph that is part of an asset job, we don't want to let you view\n    // the \"root\" graph becacuse it's not something you defined explicitly. Remove the first item.\n    if (isHiddenAssetGroupJob(explorerPath.pipelineName)) {\n      breadcrumbs.shift();\n    }\n    return breadcrumbs;\n  }, [explorerPath, onChangeExplorerPath]);\n\n  return (\n    <SplitPanelContainer\n      identifier=\"explorer\"\n      firstInitialPercent={70}\n      first={\n        <>\n          {solidsQueryEnabled ? (\n            <QueryOverlay>\n              <GraphQueryInput\n                items={solids}\n                value={explorerPath.opsQuery}\n                placeholder=\"Type an op subset…\"\n                popoverPosition=\"bottom-left\"\n                onChange={handleQueryChange}\n              />\n            </QueryOverlay>\n          ) : breadcrumbs.length > 1 ? (\n            <BreadcrumbsOverlay>\n              <Breadcrumbs currentBreadcrumbRenderer={() => <span />} items={breadcrumbs} />\n            </BreadcrumbsOverlay>\n          ) : null}\n\n          {(showAssetRenderingOption || explodeCompositesEnabled) && (\n            <OptionsOverlay>\n              {showAssetRenderingOption && (\n                <Checkbox\n                  format=\"switch\"\n                  label=\"View as Asset Graph\"\n                  checked={options.preferAssetRendering}\n                  onChange={() => {\n                    onChangeExplorerPath({...explorerPath, opNames: []}, 'replace');\n                    setOptions({\n                      ...options,\n                      preferAssetRendering: !options.preferAssetRendering,\n                    });\n                  }}\n                />\n              )}\n              {explodeCompositesEnabled && (\n                <Checkbox\n                  format=\"switch\"\n                  label=\"Explode graphs\"\n                  checked={options.explodeComposites}\n                  onChange={() => {\n                    handleQueryChange('');\n                    setOptions({\n                      ...options,\n                      explodeComposites: !options.explodeComposites,\n                    });\n                  }}\n                />\n              )}\n            </OptionsOverlay>\n          )}\n\n          <HighlightOverlay>\n            <TextInput\n              name=\"highlighted\"\n              icon=\"search\"\n              value={nameMatch}\n              placeholder=\"Highlight…\"\n              onChange={(e) => setNameMatch(e.target.value)}\n            />\n          </HighlightOverlay>\n\n          {solids.length === 0 ? (\n            <EmptyDAGNotice nodeType=\"op\" isGraph={isGraph} />\n          ) : queryResultOps.applyingEmptyDefault ? (\n            <LargeDAGNotice nodeType=\"op\" />\n          ) : Object.keys(queryResultOps.all).length === 0 ? (\n            <EntirelyFilteredDAGNotice nodeType=\"op\" />\n          ) : undefined}\n\n          {loading || !layout ? (\n            <LoadingNotice async={async} nodeType=\"op\" />\n          ) : (\n            <OpGraph\n              jobName={container.name}\n              ops={queryResultOps.all}\n              focusOps={queryResultOps.focus}\n              highlightedOps={highlightedOps}\n              selectedHandleID={selectedHandle && selectedHandle.handleID}\n              selectedOp={selectedHandle && selectedHandle.solid}\n              parentHandleID={parentHandle && parentHandle.handleID}\n              parentOp={parentOp}\n              onClickOp={handleClickOp}\n              onClickBackground={handleClickBackground}\n              onEnterSubgraph={handleEnterCompositeSolid}\n              onLeaveSubgraph={handleLeaveCompositeSolid}\n              layout={layout}\n            />\n          )}\n        </>\n      }\n      second={\n        <RightInfoPanel>\n          <Route\n            // eslint-disable-next-line react/no-children-prop\n            children={({location}: {location: any}) => (\n              <SidebarRoot\n                container={container}\n                explorerPath={explorerPath}\n                opHandleID={selectedHandle && selectedHandle.handleID}\n                parentOpHandleID={parentHandle && parentHandle.handleID}\n                getInvocations={getInvocations}\n                onEnterSubgraph={handleEnterCompositeSolid}\n                onClickOp={handleClickOp}\n                repoAddress={repoAddress}\n                {...qs.parse(location.search || '', {ignoreQueryPrefix: true})}\n              />\n            )}\n          />\n        </RightInfoPanel>\n      }\n    />\n  );\n};\n\nexport const GRAPH_EXPLORER_FRAGMENT = gql`\n  fragment GraphExplorerFragment on SolidContainer {\n    id\n    name\n    description\n    ...SidebarRootContainerFragment\n  }\n  ${SIDEBAR_ROOT_CONTAINER_FRAGMENT}\n`;\n\nexport const GRAPH_EXPLORER_ASSET_NODE_FRAGMENT = gql`\n  fragment GraphExplorerAssetNodeFragment on AssetNode {\n    id\n    opNames\n    assetKey {\n      path\n    }\n  }\n`;\n\nexport const GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT = gql`\n  fragment GraphExplorerSolidHandleFragment on SolidHandle {\n    handleID\n    solid {\n      name\n      ...OpGraphOpFragment\n    }\n  }\n  ${OP_GRAPH_OP_FRAGMENT}\n`;\n\nexport const RightInfoPanel = styled.div`\n  // Fixes major perofmance hit. To reproduce, add enough content to\n  // the sidebar that it scrolls (via overflow-y below) and then try\n  // to pan the DAG.\n  position: relative;\n\n  height: 100%;\n  min-height: 0;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  background: ${Colors.White};\n`;\n\nexport const RightInfoPanelContent = styled.div`\n  flex: 1;\n  overflow-y: auto;\n`;\n\nexport const OptionsOverlay = styled.div`\n  background-color: ${Color(Colors.White).fade(0.6).toString()};\n  z-index: 2;\n  padding: 15px 20px;\n  display: inline-flex;\n  align-items: stretch;\n  white-space: nowrap;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  gap: 8px;\n`;\n\nexport const HighlightOverlay = styled.div`\n  background-color: ${Color(Colors.White).fade(0.6).toString()};\n  z-index: 2;\n  padding: 8px 12px 0 0;\n  display: inline-flex;\n  align-items: stretch;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nexport const QueryOverlay = styled.div`\n  z-index: 2;\n  position: absolute;\n  top: 8px;\n  left: 24px;\n  white-space: nowrap;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BreadcrumbsOverlay = styled.div`\n  background-color: ${Color(Colors.White).fade(0.6).toString()};\n  z-index: 2;\n  padding: 12px 0 0 20px;\n  height: 42px;\n  max-width: calc(100% - 250px);\n  display: inline-flex;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n","import {Box, Colors, Icon, NonIdealState, Spinner} from '@dagster-io/ui';\nimport capitalize from 'lodash/capitalize';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nexport const LargeDAGNotice = ({nodeType}: {nodeType: 'op' | 'asset'}) => (\n  <LargeDAGContainer>\n    <Icon name=\"arrow_upward\" size={24} />\n    <LargeDAGInstructionBox>\n      <p>\n        This is a large DAG that may be difficult to visualize. Type <code>*</code> in the graph\n        filter bar to render the entire thing, or type {nodeType} names and use:\n      </p>\n      <ul style={{marginBottom: 0}}>\n        <li>\n          <code>+</code> to expand a single layer before or after the {nodeType}.\n        </li>\n        <li>\n          <code>*</code> to expand recursively before or after the {nodeType}.\n        </li>\n        <li>\n          <code>AND</code> to render another disconnected fragment.\n        </li>\n      </ul>\n    </LargeDAGInstructionBox>\n  </LargeDAGContainer>\n);\n\nexport const EmptyDAGNotice: React.FC<{isGraph: boolean; nodeType: 'asset' | 'op'}> = ({\n  isGraph,\n  nodeType,\n}) => {\n  return (\n    <CenteredContainer>\n      <NonIdealState\n        icon=\"no-results\"\n        title={isGraph ? 'Empty graph' : 'Empty pipeline'}\n        description={\n          <div>\n            This {isGraph ? 'graph' : 'pipeline'} is empty. {capitalize(nodeType)}s will appear here\n            when they are added to your definitions.\n          </div>\n        }\n      />\n    </CenteredContainer>\n  );\n};\n\nexport const EntirelyFilteredDAGNotice: React.FC<{nodeType: 'asset' | 'op'}> = ({nodeType}) => {\n  return (\n    <CenteredContainer>\n      <NonIdealState\n        icon=\"no-results\"\n        title=\"Nothing to display\"\n        description={\n          <div>\n            No {nodeType}s match your query filter. Try removing your filter, typing <code>*</code>{' '}\n            to render the entire graph, or entering another filter string.\n          </div>\n        }\n      />\n    </CenteredContainer>\n  );\n};\n\nexport const LoadingNotice: React.FC<{async: boolean; nodeType: 'asset' | 'op'}> = (props) => {\n  const {async} = props;\n  return (\n    <LoadingContainer>\n      {async ? (\n        <Box margin={{bottom: 24}}>Rendering a large number of {props.nodeType}s, please wait…</Box>\n      ) : null}\n      <Spinner purpose=\"page\" />\n    </LoadingContainer>\n  );\n};\n\nconst LoadingContainer = styled.div`\n  background-color: ${Colors.White};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 2;\n`;\n\nconst CenteredContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n`;\n\nconst LargeDAGContainer = styled.div`\n  width: 45vw;\n  position: absolute;\n  left: 40px;\n  top: 60px;\n  z-index: 2;\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  [role='img'] {\n    opacity: 0.5;\n    margin-left: 10vw;\n  }\n`;\n\nconst LargeDAGInstructionBox = styled.div`\n  padding: 15px 20px;\n  border: 1px solid #fff5c3;\n  margin-top: 20px;\n  color: ${Colors.Gray800};\n  background: #fffbe5;\n  text-align: left;\n  line-height: 1.4rem;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  code {\n    background: #f8ebad;\n    font-weight: 500;\n    padding: 0 4px;\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Colors, ConfigTypeSchema, Icon, IconWrapper, Box} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {CONFIG_TYPE_SCHEMA_FRAGMENT} from '../typeexplorer/ConfigTypeSchema';\n\nimport {Description} from './Description';\nimport {SectionHeader, SectionItemContainer} from './SidebarComponents';\nimport {SidebarResourcesSectionFragment} from './types/SidebarResourcesSectionFragment';\n\nconst NO_DESCRIPTION = '';\n\nexport const SidebarResourcesSection: React.FC<{\n  mode: SidebarResourcesSectionFragment;\n  showModeName?: boolean;\n}> = ({mode, showModeName}) => {\n  return (\n    <SectionItemContainer key={mode.name}>\n      {showModeName && (\n        <Box padding={{bottom: 16}}>\n          <SectionHeader>{mode.name}</SectionHeader>\n          <Description description={mode.description || NO_DESCRIPTION} />\n        </Box>\n      )}\n      <Box flex={{direction: 'column', gap: 16}}>\n        {[...mode.resources, ...mode.loggers].map((resource) => (\n          <ContextResourceContainer key={resource.name}>\n            <Icon name=\"resource\" color={Colors.Gray700} />\n            <div>\n              <ContextResourceHeader>{resource.name}</ContextResourceHeader>\n              <Description description={resource.description || NO_DESCRIPTION} />\n              {resource.configField && (\n                <ConfigTypeSchema\n                  type={resource.configField.configType}\n                  typesInScope={resource.configField.configType.recursiveConfigTypes}\n                />\n              )}\n            </div>\n          </ContextResourceContainer>\n        ))}\n      </Box>\n    </SectionItemContainer>\n  );\n};\n\nexport const SIDEBAR_RESOURCES_SECTION_FRAGMENT = gql`\n  fragment SidebarResourcesSectionFragment on Mode {\n    id\n    name\n    description\n    resources {\n      name\n      description\n      configField {\n        configType {\n          ...ConfigTypeSchemaFragment\n          recursiveConfigTypes {\n            ...ConfigTypeSchemaFragment\n          }\n        }\n      }\n    }\n    loggers {\n      name\n      description\n      configField {\n        configType {\n          ...ConfigTypeSchemaFragment\n          recursiveConfigTypes {\n            ...ConfigTypeSchemaFragment\n          }\n        }\n      }\n    }\n  }\n\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n`;\n\nconst ContextResourceHeader = styled(SectionHeader)`\n  font-size: 16px;\n  margin: 4px 0;\n`;\n\nconst ContextResourceContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n\n  & h4 {\n    margin-top: -2px;\n  }\n  & ${IconWrapper} {\n    margin-right: 8px;\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Box, MetadataTable} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {breakOnUnderscores} from '../app/Util';\nimport {MetadataEntry, METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {useRepositoryOptions, findRepositoryAmongOptions} from '../workspace/WorkspaceContext';\nimport {repoContainsPipeline} from '../workspace/findRepoContainingPipeline';\nimport {RepoAddress} from '../workspace/types';\n\nimport {Description} from './Description';\nimport {SidebarSubhead, SidebarTitle, SidebarSection} from './SidebarComponents';\nimport {\n  SidebarResourcesSection,\n  SIDEBAR_RESOURCES_SECTION_FRAGMENT,\n} from './SidebarResourcesSection';\nimport {SidebarRootContainerFragment} from './types/SidebarRootContainerFragment';\n\nexport const SidebarContainerOverview: React.FC<{\n  container: SidebarRootContainerFragment;\n  repoAddress?: RepoAddress;\n}> = ({container, repoAddress}) => {\n  const {options} = useRepositoryOptions();\n\n  // Determine if the pipeline or job snapshot is tied to a legacy pipeline. This is annoying\n  // because snapshots only have a pipeline name + snapshotId, not a repository, but if a repo\n  // is passed in we want to use that one.\n  let isLegacy = false;\n  let isPastSnapshot = false;\n\n  if (container.__typename === 'PipelineSnapshot') {\n    const {pipelineSnapshotId, parentSnapshotId} = container;\n\n    const repo = repoAddress\n      ? findRepositoryAmongOptions(options, repoAddress)\n      : options.find((repo) => repoContainsPipeline(repo, container.name));\n    const match = repo && repoContainsPipeline(repo, container.name);\n\n    isLegacy = match ? !match.isJob : false;\n    isPastSnapshot =\n      match?.pipelineSnapshotId !== pipelineSnapshotId &&\n      match?.pipelineSnapshotId !== parentSnapshotId;\n  }\n\n  return (\n    <div>\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <SidebarSubhead>\n          {container.__typename === 'Graph' ? 'Graph' : isLegacy ? 'Pipeline' : 'Job'}\n          {isPastSnapshot ? ' Snapshot' : ''}\n        </SidebarSubhead>\n        <SidebarTitle>{breakOnUnderscores(container.name)}</SidebarTitle>\n      </Box>\n\n      <SidebarSection title=\"Description\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <Description description={container.description || 'No description provided'} />\n        </Box>\n      </SidebarSection>\n\n      {container.__typename === 'PipelineSnapshot' && (\n        <SidebarSection title={isLegacy ? 'Modes' : 'Resources'} collapsedByDefault={true}>\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            {container.modes.map((mode) => (\n              <SidebarResourcesSection key={mode.name} mode={mode} showModeName={isLegacy} />\n            ))}\n          </Box>\n        </SidebarSection>\n      )}\n\n      {container.__typename === 'PipelineSnapshot' && (\n        <SidebarSection title=\"Metadata\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <MetadataTable\n              rows={container.metadataEntries.map((entry) => ({\n                key: entry.label,\n                value: <MetadataEntry entry={entry} />,\n              }))}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n    </div>\n  );\n};\n\nexport const SIDEBAR_ROOT_CONTAINER_FRAGMENT = gql`\n  fragment SidebarRootContainerFragment on SolidContainer {\n    id\n    name\n    description\n    modes {\n      id\n      ...SidebarResourcesSectionFragment\n    }\n    ... on PipelineSnapshot {\n      pipelineSnapshotId\n      parentSnapshotId\n      metadataEntries {\n        ...MetadataEntryFragment\n      }\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n  ${SIDEBAR_RESOURCES_SECTION_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Colors, ConfigTypeSchema, FontFamily, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {breakOnUnderscores} from '../app/Util';\nimport {displayNameForAssetKey, isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {OpTypeSignature, OP_TYPE_SIGNATURE_FRAGMENT} from '../ops/OpTypeSignature';\nimport {pluginForMetadata} from '../plugins';\nimport {CONFIG_TYPE_SCHEMA_FRAGMENT} from '../typeexplorer/ConfigTypeSchema';\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT, TypeWithTooltip} from '../typeexplorer/TypeWithTooltip';\nimport {RepoAddress} from '../workspace/types';\n\nimport {Description} from './Description';\nimport {\n  SectionItemContainer,\n  SectionSmallHeader,\n  SidebarSection,\n  SidebarSubhead,\n  SidebarTitle,\n} from './SidebarComponents';\nimport {\n  Invocation,\n  ResourceContainer,\n  ResourceHeader,\n  ShowAllButton,\n  SidebarOpInvocationInfo,\n  OpEdges,\n  OpMappingTable,\n  TypeWrapper,\n} from './SidebarOpHelpers';\nimport {SidebarOpDefinitionFragment} from './types/SidebarOpDefinitionFragment';\n\ninterface SidebarOpDefinitionProps {\n  definition: SidebarOpDefinitionFragment;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  showingSubgraph: boolean;\n  onClickInvocation: (arg: SidebarOpInvocationInfo) => void;\n  repoAddress?: RepoAddress;\n}\n\nconst DEFAULT_INVOCATIONS_SHOWN = 20;\n\nexport const SidebarOpDefinition: React.FC<SidebarOpDefinitionProps> = (props) => {\n  const {definition, getInvocations, showingSubgraph, onClickInvocation, repoAddress} = props;\n  const Plugin = pluginForMetadata(definition.metadata);\n  const isComposite = definition.__typename === 'CompositeSolidDefinition';\n  const configField = definition.__typename === 'SolidDefinition' ? definition.configField : null;\n\n  const inputMappings: OpMappingTable = {};\n  const outputMappings: OpMappingTable = {};\n\n  if (showingSubgraph && definition.__typename === 'CompositeSolidDefinition') {\n    definition.inputMappings.forEach(\n      (m) =>\n        (inputMappings[m.definition.name] = [\n          ...(inputMappings[m.definition.name] || []),\n          m.mappedInput,\n        ]),\n    );\n    definition.outputMappings.forEach(\n      (m) =>\n        (outputMappings[m.definition.name] = [\n          ...(outputMappings[m.definition.name] || []),\n          m.mappedOutput,\n        ]),\n    );\n  }\n\n  let requiredResources = null;\n  if (definition.__typename === 'SolidDefinition') {\n    requiredResources = definition.requiredResources;\n  }\n\n  return (\n    <div>\n      <SidebarSection title=\"Definition\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <SidebarSubhead>{isComposite ? 'Graph' : 'Op'}</SidebarSubhead>\n          <SidebarTitle>{breakOnUnderscores(definition.name)}</SidebarTitle>\n          <OpTypeSignature definition={definition} />\n        </Box>\n      </SidebarSection>\n      {definition.description && (\n        <SidebarSection title=\"Description\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <Description description={definition.description} />\n          </Box>\n        </SidebarSection>\n      )}\n      {definition.metadata && Plugin && Plugin.SidebarComponent && (\n        <SidebarSection title=\"Metadata\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <Plugin.SidebarComponent definition={definition} repoAddress={repoAddress} />\n          </Box>\n        </SidebarSection>\n      )}\n      {configField && (\n        <SidebarSection title=\"Config\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <ConfigTypeSchema\n              type={configField.configType}\n              typesInScope={configField.configType.recursiveConfigTypes}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n      {requiredResources && (\n        <SidebarSection title=\"Required Resources\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            {[...requiredResources].sort().map((requirement) => (\n              <ResourceContainer key={requirement.resourceKey}>\n                <Icon name=\"resource\" color={Colors.Gray700} />\n                <ResourceHeader>{requirement.resourceKey}</ResourceHeader>\n              </ResourceContainer>\n            ))}\n          </Box>\n        </SidebarSection>\n      )}\n      <SidebarSection title=\"Inputs\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          {definition.inputDefinitions.map((inputDef, idx) => (\n            <SectionItemContainer key={idx}>\n              <SectionSmallHeader>{breakOnUnderscores(inputDef.name)}</SectionSmallHeader>\n              <TypeWrapper>\n                <TypeWithTooltip type={inputDef.type} />\n              </TypeWrapper>\n              <Description description={inputDef.description} />\n              <OpEdges title=\"Mapped to:\" items={inputMappings[inputDef.name]} />\n            </SectionItemContainer>\n          ))}\n        </Box>\n      </SidebarSection>\n      <SidebarSection title=\"Outputs\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          {definition.outputDefinitions.map((outputDef, idx) => (\n            <SectionItemContainer key={idx}>\n              <SectionSmallHeader>\n                {breakOnUnderscores(outputDef.name)}\n                {outputDef.isDynamic && <span title=\"DynamicOutput\">[*]</span>}\n              </SectionSmallHeader>\n              <TypeWrapper>\n                <TypeWithTooltip type={outputDef.type} />\n              </TypeWrapper>\n              <OpEdges title=\"Mapped from:\" items={outputMappings[outputDef.name]} />\n              <Description description={outputDef.description} />\n            </SectionItemContainer>\n          ))}\n        </Box>\n      </SidebarSection>\n      {definition.assetNodes.length > 0 && (\n        <SidebarSection title=\"Yielded Assets\">\n          {definition.assetNodes.map((node) => (\n            <AssetNodeListItem key={node.id} to={assetDetailsPathForKey(node.assetKey)}>\n              <Icon name=\"asset\" /> {displayNameForAssetKey(node.assetKey)}\n            </AssetNodeListItem>\n          ))}\n        </SidebarSection>\n      )}\n      {getInvocations && (\n        <SidebarSection title=\"All Invocations\">\n          <InvocationList\n            invocations={getInvocations(definition.name)}\n            onClickInvocation={onClickInvocation}\n          />\n        </SidebarSection>\n      )}\n    </div>\n  );\n};\n\nexport const SIDEBAR_OP_DEFINITION_FRAGMENT = gql`\n  fragment SidebarOpDefinitionFragment on ISolidDefinition {\n    ...OpTypeSignatureFragment\n    __typename\n    name\n    description\n    metadata {\n      key\n      value\n    }\n    assetNodes {\n      id\n      assetKey {\n        path\n      }\n    }\n    outputDefinitions {\n      name\n      description\n      isDynamic\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n    inputDefinitions {\n      name\n      description\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n    ... on SolidDefinition {\n      requiredResources {\n        resourceKey\n      }\n      configField {\n        configType {\n          ...ConfigTypeSchemaFragment\n          recursiveConfigTypes {\n            ...ConfigTypeSchemaFragment\n          }\n        }\n      }\n    }\n    ... on CompositeSolidDefinition {\n      id\n      inputMappings {\n        definition {\n          name\n        }\n        mappedInput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n      outputMappings {\n        definition {\n          name\n        }\n        mappedOutput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n    }\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n  ${OP_TYPE_SIGNATURE_FRAGMENT}\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n`;\n\nconst InvocationList: React.FC<{\n  invocations: SidebarOpInvocationInfo[];\n  onClickInvocation: (arg: SidebarOpInvocationInfo) => void;\n}> = ({invocations, onClickInvocation}) => {\n  const [showAll, setShowAll] = React.useState<boolean>(false);\n  const visible = invocations.filter((i) => !isHiddenAssetGroupJob(i.pipelineName || ''));\n  const clipped = showAll ? visible : visible.slice(0, DEFAULT_INVOCATIONS_SHOWN);\n\n  return (\n    <>\n      {clipped.map((invocation, idx) => (\n        <Invocation\n          key={idx}\n          invocation={invocation}\n          onClick={() => onClickInvocation(invocation)}\n        />\n      ))}\n      {clipped.length < visible.length && (\n        <ShowAllButton onClick={() => setShowAll(true)}>\n          {`Show ${invocations.length - clipped.length} More Invocations`}\n        </ShowAllButton>\n      )}\n    </>\n  );\n};\n\nconst AssetNodeListItem = styled(Link)`\n  user-select: none;\n  padding: 12px 24px;\n  cursor: pointer;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  display: flex;\n  gap: 6px;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &:hover {\n    background: ${Colors.Gray50};\n  }\n\n  font-family: ${FontFamily.monospace};\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {Text} from '@blueprintjs/core';\nimport {Colors, Group, Icon, IconWrapper, Code, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {titleOfIO} from '../app/titleOfIO';\nimport {OpColumn, OpColumnContainer} from '../runs/LogsRowComponents';\n\nimport {SectionHeader} from './SidebarComponents';\n\ntype OpLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nexport interface SidebarOpInvocationInfo {\n  handleID: string;\n  pipelineName?: string;\n}\n\nexport type OpMappingTable = {\n  [key: string]: OpLinkInfo[];\n};\n\nexport const ShowAllButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${Colors.Blue500};\n  text-decoration: underline;\n  padding-top: 10px;\n  font-size: 0.9rem;\n`;\n\nexport const TypeWrapper = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst OpLink = (props: OpLinkInfo) => (\n  <Link to={`./${props.solid.name}`}>\n    <Code>{titleOfIO(props)}</Code>\n  </Link>\n);\n\nexport const OpEdges = (props: {title: string; items: OpLinkInfo[]}) =>\n  props.items && props.items.length ? (\n    <Text>\n      {props.title}\n      {props.items.map((i, idx) => (\n        <OpLink key={idx} {...i} />\n      ))}\n    </Text>\n  ) : null;\n\nexport const Invocation = (props: {invocation: SidebarOpInvocationInfo; onClick: () => void}) => {\n  const {handleID, pipelineName} = props.invocation;\n  const handlePath = handleID.split('.');\n  return (\n    <InvocationContainer onClick={props.onClick}>\n      {pipelineName && <div style={{color: Colors.Blue700}}>{pipelineName}</div>}\n      <OpColumn stepKey={handlePath.join('.')} />\n    </InvocationContainer>\n  );\n};\n\nexport const DependencyRow = ({\n  from,\n  to,\n  isDynamic,\n}: {\n  from: OpLinkInfo | string;\n  to: OpLinkInfo | string;\n  isDynamic: boolean | null;\n}) => {\n  return (\n    <tr>\n      <Cell>{typeof from === 'string' ? <Code>{from}</Code> : <OpLink {...from} />}</Cell>\n      <td style={{whiteSpace: 'nowrap', textAlign: 'right'}}>\n        <Group direction=\"row\" spacing={2} alignItems=\"center\">\n          {isDynamic && <Icon name=\"op_dynamic\" color={Colors.Gray700} />}\n          <Icon name=\"arrow_forward\" color={Colors.Gray700} />\n        </Group>\n      </td>\n      <Cell>{typeof to === 'string' ? <Code>{to}</Code> : <OpLink {...to} />}</Cell>\n    </tr>\n  );\n};\n\ninterface DependencyHeaderRowProps {\n  label: string;\n  style?: React.CSSProperties;\n}\n\nexport const DependencyHeaderRow: React.FC<DependencyHeaderRowProps> = ({label, ...rest}) => (\n  <tr>\n    <DependencyHeaderCell {...rest}>{label}</DependencyHeaderCell>\n  </tr>\n);\n\nexport const ResourceHeader = styled(SectionHeader)`\n  font-size: 14px;\n`;\n\nconst Cell = styled.td`\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 0;\n  width: 48%;\n`;\n\nexport const ResourceContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  & h4 {\n    margin-top: 0;\n  }\n  & ${IconWrapper} {\n    margin-right: 8px;\n  }\n`;\n\nexport const DependencyTable = styled.table`\n  width: 100%;\n`;\n\nconst DependencyHeaderCell = styled.td`\n  font-size: 0.7rem;\n  color: ${Colors.Gray400};\n`;\n\nconst InvocationContainer = styled.div`\n  user-select: none;\n  padding: 12px 24px;\n  cursor: pointer;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &:hover {\n    background: ${Colors.Gray50};\n  }\n\n  font-family: ${FontFamily.monospace};\n\n  ${OpColumnContainer} {\n    margin-left: -12px;\n  }\n`;\n","import {Button, DialogBody, DialogFooter, Dialog, Icon} from '@dagster-io/ui';\nimport startCase from 'lodash/startCase';\nimport * as React from 'react';\n\nimport {IPluginSidebarProps} from '../plugins';\n\nexport const SidebarComponent: React.FC<IPluginSidebarProps> = (props) => {\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const onOpen = () => setOpen(true);\n    document.addEventListener('show-kind-info', onOpen);\n    return () => document.removeEventListener('show-kind-info', onOpen);\n  }, []);\n\n  const metadata = props.definition.metadata\n    .filter((m) => m.key !== 'kind')\n    .sort((a, b) => a.key.localeCompare(b.key));\n\n  if (metadata.length === 0) {\n    return <span />;\n  }\n\n  return (\n    <div>\n      <Button icon={<Icon name=\"content_copy\" />} onClick={() => setOpen(true)}>\n        View metadata\n      </Button>\n      <Dialog\n        title={`Metadata: ${props.definition.name}`}\n        isOpen={open}\n        onClose={() => setOpen(false)}\n      >\n        <DialogBody>\n          <div\n            style={{\n              maxHeight: 400,\n              overflow: 'scroll',\n            }}\n          >\n            <table className=\"bp3-html-table bp3-html-table-striped\" style={{width: '100%'}}>\n              <thead>\n                <tr>\n                  <th>Key</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {metadata.map(({key, value}) => (\n                  <tr key={key}>\n                    <td>{startCase(key)}</td>\n                    <td>\n                      <code style={{whiteSpace: 'pre-wrap'}}>{value}</code>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </DialogBody>\n        <DialogFooter>\n          <Button onClick={() => setOpen(false)}>Close</Button>\n        </DialogFooter>\n      </Dialog>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport {IPluginSidebarProps} from '../plugins';\nimport {NotebookButton} from '../ui/NotebookButton';\n\nexport const SidebarComponent: React.FC<IPluginSidebarProps> = (props) => {\n  const metadata = props.definition.metadata;\n  const notebookPath = metadata.find((m) => m.key === 'notebook_path');\n  const repoLocName = props.repoAddress?.location;\n\n  return (\n    <NotebookButton\n      path={notebookPath?.value}\n      repoLocation={repoLocName || ''}\n      label=\"View Source Notebook\"\n    />\n  );\n};\n","import {Button, DialogFooter, Dialog, Icon, StyledReadOnlyCodeMirror} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {IPluginSidebarProps} from '../plugins';\n\nexport const SidebarComponent: React.FC<IPluginSidebarProps> = (props) => {\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const onClose = () => setOpen(true);\n    document.addEventListener('show-kind-info', onClose);\n    return () => document.removeEventListener('show-kind-info', onClose);\n  }, []);\n\n  const metadata = props.definition.metadata;\n  const sql = metadata.find((m) => m.key === 'sql');\n  if (!sql) {\n    return <span />;\n  }\n\n  return (\n    <div>\n      <Button icon={<Icon name=\"content_copy\" />} onClick={() => setOpen(true)}>\n        View SQL\n      </Button>\n      <Dialog\n        icon=\"info\"\n        onClose={() => setOpen(false)}\n        style={{width: '80vw', maxWidth: 900}}\n        title={`SQL: ${props.definition.name}`}\n        isOpen={open}\n      >\n        <StyledReadOnlyCodeMirror options={{lineNumbers: true, mode: 'sql'}} value={sql.value} />\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={() => setOpen(false)}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </div>\n  );\n};\n","import * as generic from '../plugins/generic';\nimport * as ipynb from '../plugins/ipynb';\nimport * as sql from '../plugins/sql';\nimport {RepoAddress} from '../workspace/types';\n\nconst plugins = {\n  sql,\n  ipynb,\n  snowflake: sql,\n  noteable: ipynb,\n};\n\nexport interface IPluginSidebarProps {\n  definition: {\n    name: string;\n    metadata: {\n      key: string;\n      value: string;\n    }[];\n  };\n  repoAddress?: RepoAddress;\n}\n\ninterface IPluginInterface {\n  SidebarComponent: React.ComponentClass<IPluginSidebarProps> | React.SFC<IPluginSidebarProps>;\n}\n\nexport function pluginForMetadata(\n  metadata: {key: string; value: string}[],\n): IPluginInterface | null {\n  const kindMetadata = metadata.find((m) => m.key === 'kind');\n  if (!kindMetadata) {\n    return null;\n  }\n  return plugins[kindMetadata.value] || generic;\n}\n","import {gql} from '@apollo/client';\nimport {ConfigSchema} from '@dagster-io/ui';\n\nexport type {ConfigSchema as ConfigTypeSchema};\n\nexport const CONFIG_TYPE_SCHEMA_FRAGMENT = gql`\n  fragment ConfigTypeSchemaFragment on ConfigType {\n    __typename\n    ... on EnumConfigType {\n      givenName\n      values {\n        value\n        description\n      }\n    }\n    ... on RegularConfigType {\n      givenName\n    }\n    key\n    description\n    isSelector\n    typeParamKeys\n    ... on CompositeConfigType {\n      fields {\n        name\n        description\n        isRequired\n        configTypeKey\n        defaultValueAsJson\n      }\n    }\n    ... on ScalarUnionConfigType {\n      scalarTypeKey\n      nonScalarTypeKey\n    }\n    ... on MapConfigType {\n      keyLabelName\n    }\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface ITypeWithTooltipProps {\n  type: {\n    name: string | null;\n    displayName: string;\n    description: string | null;\n  };\n}\n\nexport const TypeWithTooltip = (props: ITypeWithTooltipProps) => {\n  const {name, displayName} = props.type;\n\n  // TODO: link to most inner type\n  if (name) {\n    return (\n      <TypeLink to={{search: `?tab=types&typeName=${displayName}`}}>\n        <TypeName>{displayName}</TypeName>\n      </TypeLink>\n    );\n  }\n\n  return <TypeName>{displayName}</TypeName>;\n};\n\nexport const DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT = gql`\n  fragment DagsterTypeWithTooltipFragment on DagsterType {\n    name\n    displayName\n    description\n  }\n`;\n\nconst TypeLink = styled(Link)`\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst TypeName = styled.code`\n  background: ${Colors.Blue50};\n  border: none;\n  padding: 1px 4px;\n  border-bottom: 1px solid ${Colors.Blue500};\n  border-radius: 0.25em;\n  font-size: 14px;\n  font-weight: 500;\n  display: inline-block;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  vertical-align: middle;\n`;\n","import {ApolloError, QueryResult} from '@apollo/client';\nimport {Box, NonIdealState, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\ninterface ILoadingProps<TData> {\n  queryResult: QueryResult<TData, any>;\n  children: (data: TData) => React.ReactNode;\n  renderError?: (error: ApolloError) => React.ReactNode;\n  allowStaleData?: boolean;\n  purpose: 'section' | 'page';\n}\n\nconst BLANK_LOADING_DELAY_MSEC = 500;\n\nexport const Loading = <TData extends Record<string, any>>(props: ILoadingProps<TData>) => {\n  const {children, purpose, allowStaleData = false, renderError} = props;\n  const {error, data, loading} = props.queryResult;\n\n  const [blankLoading, setBlankLoading] = React.useState(true);\n  const isLoading = !data || (loading && !allowStaleData) || Object.keys(data as any).length === 0;\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n\n    // Wait a brief moment so that we don't awkwardly flash the loading bar.\n    // This is often enough time for data to become available.\n    if (isLoading) {\n      timer = setTimeout(() => setBlankLoading(false), BLANK_LOADING_DELAY_MSEC);\n    } else {\n      setBlankLoading(true);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [isLoading]);\n\n  // either error.networkError or error.graphQLErrors is set,\n  // so check that the error is not just a transient network error\n  if (error) {\n    if (renderError) {\n      return <>{renderError(error)}</>;\n    }\n    if (!error.networkError) {\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n        </Box>\n      );\n    }\n  }\n\n  if (isLoading) {\n    return blankLoading ? null : <LoadingSpinner purpose={purpose} />;\n  }\n\n  return <>{children(data as TData)}</>;\n};\n\nexport const LoadingSpinner: React.FC<{purpose: 'page' | 'section'}> = ({purpose}) => {\n  const isPage = purpose === 'page';\n  return (\n    <Box\n      padding={64}\n      flex={{\n        grow: isPage ? 1 : undefined,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      style={isPage ? {height: '100%'} : undefined}\n    >\n      <Spinner purpose={purpose} />\n    </Box>\n  );\n};\n\nLoading.defaultProps = {\n  purpose: 'page',\n};\n","import {TabStyleProps, getTabA11yProps, getTabContent, tabCSS} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface TabLinkProps extends TabStyleProps, Omit<LinkProps, 'title'> {\n  title?: React.ReactNode;\n}\n\nexport const TabLink = styled((props: TabLinkProps) => {\n  const {to, title, ...rest} = props;\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof title === 'string' ? title : undefined;\n\n  return (\n    <Link to={to} title={titleText} {...containerProps} {...rest}>\n      {content}\n    </Link>\n  );\n})<TabLinkProps>`\n  ${tabCSS}\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Group} from './Group';\nimport {IconName, Icon} from './Icon';\n\nexport type AlertIntent = 'info' | 'warning' | 'error' | 'success';\n\ninterface Props {\n  intent: AlertIntent;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  icon?: React.ReactNode;\n  onClose?: () => void;\n}\n\nexport const Alert: React.FC<Props> = (props) => {\n  const {intent, title, description, onClose} = props;\n\n  const {backgroundColor, borderColor, icon, iconColor, textColor} = React.useMemo(() => {\n    switch (intent) {\n      case 'warning':\n        return {\n          backgroundColor: Colors.Yellow50,\n          borderColor: Colors.Yellow500,\n          icon: 'warning',\n          iconColor: Colors.Yellow500,\n          textColor: Colors.Yellow700,\n        };\n      case 'error':\n        return {\n          backgroundColor: Colors.Red50,\n          borderColor: Colors.Red500,\n          icon: 'error',\n          iconColor: Colors.Red500,\n          textColor: Colors.Red700,\n        };\n      case 'success':\n        return {\n          backgroundColor: Colors.Green50,\n          borderColor: Colors.Green500,\n          icon: 'done',\n          iconColor: Colors.Green500,\n          textColor: Colors.Green700,\n        };\n      case 'info':\n      default:\n        return {\n          backgroundColor: Colors.Blue50,\n          borderColor: Colors.Blue500,\n          icon: 'info',\n          iconColor: Colors.Blue500,\n          textColor: Colors.Blue700,\n        };\n    }\n  }, [intent]);\n\n  return (\n    <AlertContainer\n      background={backgroundColor}\n      $borderColor={borderColor}\n      $textColor={textColor}\n      padding={{horizontal: 16, vertical: 12}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}}>\n        <Group direction=\"row\" spacing={12} alignItems=\"flex-start\">\n          {props.icon || <Icon name={icon as IconName} color={iconColor} />}\n          <Group direction=\"column\" spacing={8}>\n            <AlertTitle>{title}</AlertTitle>\n            {description ? <AlertDescription>{description}</AlertDescription> : null}\n          </Group>\n        </Group>\n        {!!onClose ? (\n          <ButtonWrapper onClick={onClose}>\n            <Icon name=\"close\" color={textColor} />\n          </ButtonWrapper>\n        ) : null}\n      </Box>\n    </AlertContainer>\n  );\n};\n\nAlert.defaultProps = {\n  intent: 'info',\n};\n\nconst ButtonWrapper = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  flex-direction: column;\n  height: fit-content;\n`;\n\nconst AlertContainer = styled(Box)<{$borderColor: string; $textColor: string}>`\n  box-shadow: inset 4px 0 ${({$borderColor}) => $borderColor};\n  color: ${({$textColor}) => $textColor};\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${({$textColor}) => $textColor};\n    text-decoration: underline;\n  }\n`;\n\nconst AlertTitle = styled.div`\n  font-weight: 600;\n`;\n\nconst AlertDescription = styled.div`\n  font-weight: 400;\n`;\n","import styled from 'styled-components/macro';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n"],"names":["DEFAULT_RESULT_NAME","titleOfIO","i","solid","name","definition","opts","GROUP_NODE_PREFIX","layoutAssetGraph","graphData","g","dagre","compound","setGraph","rankdir","marginx","marginy","nodesep","edgesep","ranksep","setDefaultEdgeLabel","parentNodeIdForNode","node","repository","location","groupName","join","shouldRender","renderedNodes","Object","values","nodes","filter","groups","id","repositoryName","repositoryLocationName","repositoryDisambiguationRequired","bounds","x","y","width","height","showGroups","keys","length","forEach","groupId","setNode","getAssetNodeDimensions","setParent","linksToAssetsOutsideGraphedSet","downstream","upstreamId","downstreamId","setEdge","v","w","weight","getAssetLinkDimensions","maxWidth","maxHeight","dagreNode","startsWith","Math","max","extendBounds","group","padBounds","top","bottom","groupBy","set","flat","edges","e","points","edge","push","from","fromId","to","toId","path","JSON","parse","displayNameForAssetKey","a","padding","b","xmin","min","ymin","ASSET_NODE_NAME_MAX_LENGTH","def","displayName","assetKey","isSource","isObservable","computeKind","AssetValueGraph","props","data","labels","undefined","xHover","xAxis","map","indexOf","datasets","label","lineTension","xNumeric","borderColor","Colors","backgroundColor","pointBorderWidth","pointHoverBorderWidth","pointHoverRadius","pointHoverBorderColor","options","animation","duration","elements","point","radius","context","dataset","dataIndex","scales","display","type","title","text","yAxisLabel","plugins","legend","onHover","_","activeElements","itemIdx","index","onHoverX","dagsterTypeKind","metadataEntries","find","gqlTypePredicate","DagsterTypeName","styled","className","typeKind","FontFamily","DagsterTypeSummary","horizontalPadding","tableSchemaEntry","flex","direction","gap","horizontal","vertical","style","overflowY","description","border","side","color","marginBottom","margin","schema","itemHorizontalPadding","DAGSTER_TYPE_FRAGMENT","gql","CONFIG_TYPE_SCHEMA_FRAGMENT","METADATA_ENTRY_FRAGMENT","PARENT_IN","PARENT_OUT","OpIOBox","minified","jumpTargetOp","highlightedEdges","colorKey","item","layoutInfo","onDoubleClick","onHighlightEdges","highlighted","some","isHighlighted","OpIOContainer","position","layout","onMouseEnter","onMouseLeave","onClick","stopPropagation","$colorKey","$highlighted","collapsed","p","metadataForCompositeParentIO","parentDefinition","__typename","Error","others","inputMappings","mappedInput","outputMappings","mappedOutput","metadataForIO","invocation","inputs","dependsOn","o","output","outputs","dependedBy","TOOLTIP_STYLE","stringify","left","OpNode","handleClick","preventDefault","handleDoubleClick","handleEnterComposite","onEnterComposite","handleKindClicked","window","requestAnimationFrame","document","dispatchEvent","Event","prevProps","dim","this","selected","focused","metadata","configField","tags","kind","m","key","composite","value","NodeContainer","$minified","$selected","$secondaryHighlight","$dim","op","isDynamicMapped","configType","inputDefinitions","idx","size","withMiddleTruncation","maxLength","assetNodes","split","OpNodeAssociatedAssets","transform","outputDefinitions","React","more","OP_NODE_INVOCATION_FRAGMENT","OP_NODE_DEFINITION_FRAGMENT","NodeHighlightColors","Border","Background","KNOWN_TAGS","jupyter","content","src","alt","role","ipynb","noteable","airbyte","snowflake","python","fivetran","dbt","slack","pytorch","pyspark","duckdb","tensorflow","pandas","googlesheets","sql","Expand","generateColorForLabel","c","charCodeAt","reduce","n","OpTags","OpTagsContainer","tag","background","USED_ATTRIBUTES","attributeURLToBase64Map","convertURLToBase64Data","url","fetch","btoa","makeAttributeValuePortable","attrValue","match","replace","makeSVGPortable","svg","nodeIterator","createNodeIterator","NodeFilter","SHOW_ELEMENT","baseStyles","getComputedStyle","nextNode","SVGElement","HTMLElement","nodeStyles","attrName","prefix","boxSizing","HTMLImageElement","getAttribute","setAttribute","removeClassesIterator","removeAttribute","cssSources","Array","querySelectorAll","fontFaces","flatMap","el","sheet","cssRules","r","CSSFontFaceRule","cssText","styleEl","createElement","textContent","appendChild","DETAIL_ZOOM","DEFAULT_ZOOM","PanAndZoomInteractor","onMouseDown","viewport","event","_animation","cancel","element","current","target","closest","start","getOffsetXY","lastX","lastY","onMove","offset","delta","setState","state","addEventListener","onUp","removeEventListener","onWheel","cursorPosition","altKey","shiftKey","shiftXY","deltaX","deltaY","targetScale","scale","getMinZoom","getMaxZoom","adjustZoomRelativeToScreenPoint","render","ZoomSliderContainer","Box","IconButton","clientWidth","clientHeight","adjusted","round","Number","EPSILON","Icon","Slider","stepSize","labelRenderer","onChange","onExportToSVG","IconWrapper","NoneInteractor","_viewport","SVGViewport","panzoom","_lastWheelTime","_lastWheelDir","minScale","resizeObserver","container","Node","contains","interactor","onZoomAndCenter","offsetXY","screenToSVGCoords","maxZoom","abs","zoomToSVGCoords","onKeyDown","nodeName","dir","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","code","onArrowKeyDown","unclippedViewport","right","graphWidth","graphHeight","div","getElementById","ReactDOM","children","querySelector","XMLSerializer","serializeToString","blob","Blob","URL","createObjectURL","click","remove","autocenter","passive","RO","forceUpdate","observe","disconnect","focus","svgRegionWidth","svgRegionHeight","dw","dh","animate","ownerRect","desiredScale","scaleForSVGBounds","boundedScale","maxAutocenterZoom","smoothZoom","assign","getBoundingClientRect","clientX","clientY","dx","dy","nextScale","centerSVGCoord","box","newScale","step","done","graphHasNoMinimumZoom","dotsize","ref","SVGViewportStyles","backgroundPosition","backgroundSize","tabIndex","transformOrigin","getViewport","Interactors","PanAndZoom","None","defaultProps","overflow","userSelect","outline","OP_WIDTH","IO_HEIGHT","PORT_INSET_X","PARENT_INVOCATION_PADDING","flattenIO","arrays","array","layoutExternalConnections","links","layoutWidth","insetWidth","inset","spacing","baseX","yShift","result","link","shiftDirection","layoutOp","root","accY","appendMiniIODots","ios","sortKey","clusteringKey","last","sorted","sort","localeCompare","lastKey","layouts","io","_idx","port","centeringAdjustment","l","appendStackedIOBoxes","inputLayouts","input","opLayout","OP_BASE_HEIGHT","outputLayouts","_opLayoutCacheKey","ops","parentOp","solidKey","parentKey","getFullOpLayout","memoize","pipelineOps","graphlib","Graph","parentIOPadding","PARENT_DEFINITION_PADDING","opNamesPresent","dep","opName","edgeName","dagreNodes","conn","parent","invocationBoundingBox","mappingLeftEdge","mappingLeftSpacing","d","boundingBottom","layoutParentGraphOp","asyncGetFullOpLayout","asyncMemoize","staticPathRoot","Promise","resolve","worker","Worker","terminate","postMessage","_assetLayoutCacheKey","getFullAssetLayout","asyncGetFullAssetLayout","reducer","action","loading","cacheKey","payload","initialState","useOpLayout","dispatch","AppContext","runAsync","runAsyncLayout","async","useAssetLayout","h","isOpHighlighted","isNodeOffscreen","layoutNode","viewportRect","closestNodeInDirection","selectedNodeKey","center","score","NaN","isNaN","pop","computeNodeKeyPrefixBoundingBoxes","maxDepth","parts","ii","base","slice","boxes","x1","x2","y1","y2","RESUME_BACKFILL_MUTATION","PYTHON_ERROR_FRAGMENT","LAUNCH_PARTITION_BACKFILL_MUTATION","showLaunchError","error","console","body","message","fontFamily","showCustomAlert","OpTypeSignature","inputSide","breakOnUnderscores","outputSide","TypeSignature","OP_TYPE_SIGNATURE_FRAGMENT","DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT","Code","PartitionState","runStatusToPartitionState","runStatus","RunStatus","FAILURE","STARTED","SUCCESS","QUEUED","MISSING","PartitionStatus","partitionNames","partitionStateForKey","onSelect","splitPartitions","small","selectionWindowSize","hideStatusTooltip","tooltipMessage","currentSelectionRange","setCurrentSelectionRange","useViewport","containerProps","toPartitionName","percentage","floor","getRangeSelection","end","startIdx","endIdx","onMouseMove","onMouseUp","currentSelection","operation","getModifierState","every","includes","Set","selectedSpans","assembleIntoSpans","s","status","spans","keyStatus","_partitionsToSpans","fromEntries","highestIndex","prev","cur","indexToPct","toFixed","showSeparators","_onClick","partitionName","nativeEvent","_onMouseDown","onDragStart","SelectionSpansContainer","PartitionSpansContainer","minWidth","zIndex","partitionStateToStyle","partitionStatusToText","toLowerCase","SelectionHoverHighlight","SelectionFade","SelectionBorder","justifyContent","fontSize","minHeight","SUCCESS_MISSING","BOX_SIZE","STEP_STATUS_COLORS","SUCCESS_SKIPPED","FAILURE_SKIPPED","SKIPPED","IN_PROGRESS","flatGradient","GridColumn","disabled","multiselectFocused","hovered","TopLabelTiltedInner","LeftLabel","TopLabel","topLabelHeightForLabels","maxlength","TopLabelTilted","$height","GRID_FLOATING_CONTAINER_WIDTH","GridFloatingContainer","floating","keyTestFn","stringForSpan","all","allPartitionsSpan","partitionKeys","textToPartitions","terms","trim","term","rangeMatch","exec","allStartIdx","allEndIdx","suffix","endsWith","partitionsToText","explodeComposite","handles","nested","handleID","inmap","compositeInput","interiorTargetName","interiorTarget","interiorTargetInput","warn","outmap","compositeOutput","interiorTargetOutput","explodeCompositesInHandleGraph","results","findIndex","splice","removeLeadingSpaces","leadingSpaces","lines","substr","Description","_container","hasMore","expanded","updateHandleState","Container","sel","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","Mask","ShowMoreHandle","overflowX","buildSVGPaths","weakmapMemoize","source","sourceOutput","targetInput","buildSVGPath","log","outputIsDynamic","outDef","isDynamic","inputIsDynamicCollect","inputDef","isDynamicCollect","OpEdges","onHighlight","StyledPath","stroke","DynamicMarker","fill","PX_TO_UNITS","clipToLength","str","len","SVGMonospaceText","allowTwoLines","rest","lineChars","line1","line2","shift","line1Y","pointerEvents","dominantBaseline","ExternalConnectionNode","labelAttachment","onDoubleClickLabel","textProps","textSize","intrinsicSizeForProps","textOrigin","BackingRect","cx","cy","rx","ry","strokeWidth","MappingLine","leftEdgeX","strokeLinecap","ParentOpNode","parentLayout","highlightingProps","onClickOp","SVGLabeledParentRect","destination","sourcePort","trgtPort","invocationInput","iidx","invocationOutput","rect","NoOp","OpGraphContents","setHighlighted","focusOps","parentHandleID","onDoubleClickOp","onEnterSubgraph","highlightedOps","selectedOp","EmptyHighlightedArray","OpGraph","viewportEl","argToOpLayout","arg","lastName","centerOp","zoomToSVGBox","focusOnOp","unfocus","_e","nextOp","cancelAnimations","jobName","onClickBackground","SVGContainer","OP_GRAPH_OP_FRAGMENT","TypeExplorer","inputSchemaType","outputSchemaType","tableSchema","isGraph","TableSchema","ConfigTypeSchema","typesInScope","recursiveConfigTypes","TYPE_EXPLORER_FRAGMENT","TypeExplorerContainer","explorerPath","typeName","repoAddress","pipelineSelector","buildPipelineSelector","pipelineName","queryResult","useQuery","TYPE_EXPLORER_CONTAINER_QUERY","fetchPolicy","variables","dagsterTypeName","Loading","pipelineOrError","dagsterTypeOrError","isJob","TypeList","types","Custom","isBuiltin","groupTypes","typesForSection","collapsedByDefault","StyledUL","TypeLI","TypeWithTooltip","TYPE_LIST_FRAGMENT","TypeListContainer","snapshotId","useRepositoryOptions","reposWithMatch","findRepoContainingPipeline","optionToRepoAddress","TYPE_LIST_CONTAINER_QUERY","skip","dagsterTypes","NonIdealState","icon","StateColors","SidebarOpExecutionGraphs","solidName","highlightedStartTime","setHighlightedStartTime","SIDEBAR_OP_GRAPHS_QUERY","selector","stepStats","solidHandle","executionTime","startTime","endTime","xs","ys","minXNumeric","maxXNumeric","minY","maxY","displayed","alignItems","Spinner","purpose","reverse","runId","Tooltip","placement","linkToRunEvent","stepKey","SidebarOpInvocation","showInputs","showOutputs","Button","SIDEBAR_OP_INVOCATION_FRAGMENT","SidebarOp","getInvocations","showingSubgraph","pipelineResult","SIDEBAR_PIPELINE_OP_QUERY","graphResult","SIDEBAR_GRAPH_OP_QUERY","graphName","solidContainer","graphOrError","isLoading","useSidebarOpQuery","SidebarOpDefinition","onClickInvocation","SIDEBAR_OP_FRAGMENT","SIDEBAR_OP_DEFINITION_FRAGMENT","SidebarRoot","tab","opHandleID","parentOpHandleID","activeTab","TabDefinitions","SidebarContainerOverview","S","Tabs","selectedTabId","TabLink","search","RightInfoPanelContent","t","GraphExplorer","onChangeExplorerPath","parentHandle","setOptions","nameMatch","setNameMatch","handleQueryChange","opsQuery","handleAdjustPath","fn","opNames","handleClickOp","handleEnterCompositeSolid","selectedName","selectedHandle","invalidSelection","invalidParent","solids","solidsQueryEnabled","showAssetRenderingOption","explodeCompositesEnabled","explodeComposites","f","queryResultOps","filterByQuery","applyingEmptyDefault","breadcrumbs","isHiddenAssetGroupJob","SplitPanelContainer","identifier","firstInitialPercent","first","QueryOverlay","GraphQueryInput","items","placeholder","popoverPosition","BreadcrumbsOverlay","currentBreadcrumbRenderer","OptionsOverlay","Checkbox","format","checked","preferAssetRendering","HighlightOverlay","TextInput","nodeType","selectedHandleID","onLeaveSubgraph","second","RightInfoPanel","qs","ignoreQueryPrefix","GRAPH_EXPLORER_FRAGMENT","SIDEBAR_ROOT_CONTAINER_FRAGMENT","GRAPH_EXPLORER_ASSET_NODE_FRAGMENT","GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT","Color","fade","toString","LargeDAGNotice","LargeDAGContainer","LargeDAGInstructionBox","EmptyDAGNotice","CenteredContainer","capitalize","EntirelyFilteredDAGNotice","LoadingNotice","LoadingContainer","SidebarResourcesSection","mode","showModeName","resources","loggers","resource","ContextResourceContainer","ContextResourceHeader","SIDEBAR_RESOURCES_SECTION_FRAGMENT","SectionHeader","isLegacy","isPastSnapshot","pipelineSnapshotId","parentSnapshotId","repo","findRepositoryAmongOptions","repoContainsPipeline","modes","MetadataTable","rows","entry","MetadataEntry","Plugin","pluginForMetadata","isComposite","requiredResources","SidebarComponent","requirement","resourceKey","outputDef","AssetNodeListItem","assetDetailsPathForKey","InvocationList","invocations","showAll","setShowAll","visible","clipped","Link","ShowAllButton","TypeWrapper","OpLink","Invocation","handlePath","InvocationContainer","DependencyRow","Cell","whiteSpace","textAlign","DependencyHeaderRow","DependencyHeaderCell","ResourceHeader","ResourceContainer","DependencyTable","OpColumnContainer","open","setOpen","onOpen","Dialog","isOpen","onClose","startCase","notebookPath","repoLocName","NotebookButton","repoLocation","lineNumbers","topBorder","intent","kindMetadata","generic","TypeLink","TypeName","allowStaleData","renderError","blankLoading","setBlankLoading","timer","setTimeout","clearTimeout","networkError","LoadingSpinner","isPage","grow","getTabA11yProps","getTabContent","titleText","tabCSS","Alert","iconColor","textColor","AlertContainer","$borderColor","$textColor","AlertTitle","AlertDescription","ButtonWrapper","Page"],"sourceRoot":""}