{"version":3,"file":"static/js/568.8eb6de2c.chunk.js","mappings":"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","sources":["../../core/src/launchpad/showLaunchError.tsx","../../core/src/runs/LogsToolbar.tsx","../../core/src/RawLogContent.tsx","../../core/src/CapturedLogPanel.tsx","../../core/src/instance/useSupportsCapturedLogs.tsx","../../core/src/runs/useComputeLogs.tsx","../../core/src/runs/ComputeLogPanel.tsx","../../core/src/runs/LogsProvider.tsx","../../core/src/ui/formatters.tsx","../../core/src/runs/ExecutionStateDot.tsx","../../core/src/runs/LogsFilterInput.tsx","../../ui/src/components/useSuggestionsForString.tsx","../../core/src/runs/useQueryPersistedLogFilter.ts","../../core/src/runs/Run.tsx","../../core/src/hooks/useFavicon.tsx","../../core/src/runs/RunRoot.tsx","../../core/src/runs/useJobReExecution.tsx","../../core/src/ui/ClearButton.tsx","../../ui/src/components/Select.tsx"],"sourcesContent":["import {FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\n\nexport const showLaunchError = (error: Error) => {\n  console.error('Error launching run:', error);\n\n  const body =\n    error.message === 'Failed to fetch' ? (\n      <div style={{fontFamily: FontFamily.default}}>\n        Make sure the Dagit server is running and try again.\n      </div>\n    ) : (\n      <div>{error.message}</div>\n    );\n\n  showCustomAlert({\n    title: 'Could not launch run',\n    body,\n  });\n};\n","import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Group,\n  IconName,\n  Icon,\n  MenuItem,\n  Select,\n  Spinner,\n  Tab,\n  Tabs,\n  IconWrapper,\n  Colors,\n  Tooltip,\n  FontFamily,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useCopyToClipboard} from '../app/browser';\nimport {OptionsContainer, OptionsDivider} from '../gantt/VizComponents';\nimport {compactNumber} from '../ui/formatters';\n\nimport {ExecutionStateDot} from './ExecutionStateDot';\nimport {LogLevel} from './LogLevel';\nimport {LogsFilterInput} from './LogsFilterInput';\nimport {LogFilter, LogFilterValue} from './LogsProvider';\nimport {\n  extractLogCaptureStepsFromLegacySteps,\n  ILogCaptureInfo,\n  IRunMetadataDict,\n  IStepState,\n} from './RunMetadataProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\n\nexport enum LogType {\n  structured = 'structured',\n  stdout = 'stdout',\n  stderr = 'stderr',\n}\n\ninterface ILogsToolbarProps {\n  steps: string[];\n  metadata: IRunMetadataDict;\n  counts: LogLevelCounts;\n\n  filter: LogFilter;\n  onSetFilter: (filter: LogFilter) => void;\n  logType: LogType;\n  onSetLogType: (logType: LogType) => void;\n  computeLogFileKey?: string;\n  onSetComputeLogKey: (key: string) => void;\n  computeLogUrl: string | null;\n}\n\nconst logQueryToString = (logQuery: LogFilterValue[]) =>\n  logQuery.map(({token, value}) => (token ? `${token}:${value}` : value)).join(' ');\n\nexport const LogsToolbar: React.FC<ILogsToolbarProps> = (props) => {\n  const {\n    steps,\n    metadata,\n    counts,\n    filter,\n    onSetFilter,\n    logType,\n    onSetLogType,\n    computeLogFileKey,\n    onSetComputeLogKey,\n    computeLogUrl,\n  } = props;\n\n  const activeItems = React.useMemo(\n    () => new Set([logType === LogType.structured ? logType : LogType.stdout]),\n    [logType],\n  );\n\n  return (\n    <OptionsContainer>\n      <ButtonGroup\n        activeItems={activeItems}\n        buttons={[\n          {id: LogType.structured, icon: 'list', tooltip: 'Structured event logs'},\n          {id: LogType.stdout, icon: 'wysiwyg', tooltip: 'Raw compute logs'},\n        ]}\n        onClick={(id) => onSetLogType(id)}\n      />\n      <OptionsDivider />\n      {logType === 'structured' ? (\n        <StructuredLogToolbar\n          counts={counts}\n          filter={filter}\n          onSetFilter={onSetFilter}\n          steps={steps}\n        />\n      ) : (\n        <ComputeLogToolbar\n          steps={steps}\n          metadata={metadata}\n          logType={logType}\n          onSetLogType={onSetLogType}\n          computeLogFileKey={computeLogFileKey}\n          onSetComputeLogKey={onSetComputeLogKey}\n          computeLogUrl={computeLogUrl}\n        />\n      )}\n    </OptionsContainer>\n  );\n};\n\nconst resolveState = (metadata: IRunMetadataDict, logCapture: ILogCaptureInfo) => {\n  // resolves the state of potentially many steps into a single state so that we can show the\n  // execution dot representing the status of this log capture group (potentially at the process\n  // level)\n  if (logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey].state === IStepState.RUNNING)) {\n    return IStepState.RUNNING;\n  }\n  if (logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey].state === IStepState.SKIPPED)) {\n    return IStepState.SKIPPED;\n  }\n  if (\n    logCapture.stepKeys.every((stepKey) => metadata.steps[stepKey].state === IStepState.SUCCEEDED)\n  ) {\n    return IStepState.SUCCEEDED;\n  }\n  return IStepState.FAILED;\n};\n\nconst ComputeLogToolbar = ({\n  steps,\n  metadata,\n  computeLogFileKey,\n  onSetComputeLogKey,\n  logType,\n  onSetLogType,\n  computeLogUrl,\n}: {\n  steps: string[];\n  metadata: IRunMetadataDict;\n  computeLogFileKey?: string;\n  onSetComputeLogKey: (step: string) => void;\n  logType: LogType;\n  onSetLogType: (type: LogType) => void;\n  computeLogUrl: string | null;\n}) => {\n  const logCaptureSteps =\n    metadata.logCaptureSteps || extractLogCaptureStepsFromLegacySteps(Object.keys(metadata.steps));\n  const isValidStepSelection = computeLogFileKey && logCaptureSteps[computeLogFileKey];\n\n  const fileKeyText = (fileKey?: string) => {\n    if (!fileKey || !logCaptureSteps[fileKey]) {\n      return null;\n    }\n    const captureInfo = logCaptureSteps[fileKey];\n    if (captureInfo.stepKeys.length === 1 && fileKey === captureInfo.stepKeys[0]) {\n      return fileKey;\n    }\n    if (captureInfo.pid && captureInfo.stepKeys.length === 1) {\n      return captureInfo.stepKeys[0];\n    }\n    if (captureInfo.pid) {\n      return `pid: ${captureInfo.pid} (${captureInfo.stepKeys.length} steps)`;\n    }\n    return `${fileKey} (${captureInfo.stepKeys.length} steps)`;\n  };\n\n  return (\n    <Box\n      flex={{justifyContent: 'space-between', alignItems: 'center', direction: 'row'}}\n      style={{flex: 1}}\n    >\n      <Group direction=\"row\" spacing={24} alignItems=\"center\">\n        <Select\n          disabled={!steps.length}\n          items={Object.keys(logCaptureSteps)}\n          itemPredicate={(query, item) =>\n            item.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n          }\n          itemRenderer={(item: string, options: {handleClick: any; modifiers: any}) => (\n            <MenuItem\n              key={item}\n              onClick={options.handleClick}\n              text={fileKeyText(item)}\n              active={options.modifiers.active}\n            />\n          )}\n          activeItem={computeLogFileKey}\n          onItemSelect={(fileKey) => {\n            onSetComputeLogKey(fileKey);\n          }}\n        >\n          <Button disabled={!steps.length} rightIcon={<Icon name=\"expand_more\" />}>\n            {fileKeyText(computeLogFileKey) || 'Select a step...'}\n          </Button>\n        </Select>\n        {isValidStepSelection ? (\n          <Tabs selectedTabId={logType} onChange={onSetLogType} size=\"small\">\n            <Tab id={LogType.stdout} title=\"stdout\" />\n            <Tab id={LogType.stderr} title=\"stderr\" />\n          </Tabs>\n        ) : null}\n      </Group>\n      {isValidStepSelection ? (\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          {computeLogFileKey && logCaptureSteps[computeLogFileKey] ? (\n            resolveState(metadata, logCaptureSteps[computeLogFileKey]) === IStepState.RUNNING ? (\n              <Spinner purpose=\"body-text\" />\n            ) : (\n              <ExecutionStateDot\n                state={resolveState(metadata, logCaptureSteps[computeLogFileKey])}\n              />\n            )\n          ) : null}\n          {computeLogUrl ? (\n            <Tooltip\n              placement=\"top-end\"\n              content={\n                computeLogFileKey && logCaptureSteps[computeLogFileKey]?.stepKeys.length === 1\n                  ? `Download ${logCaptureSteps[computeLogFileKey]?.stepKeys[0]} compute logs`\n                  : `Download compute logs`\n              }\n            >\n              <DownloadLink aria-label=\"Download link\" href={computeLogUrl} download>\n                <Icon name=\"download_for_offline\" color={Colors.Gray600} />\n              </DownloadLink>\n            </Tooltip>\n          ) : null}\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nconst DownloadLink = styled.a`\n  border-radius: 4px;\n  display: block;\n  text-decoration: none;\n\n  ${IconWrapper} {\n    transition: background-color 100ms linear;\n  }\n\n  :hover ${IconWrapper} {\n    background-color: ${Colors.Gray800};\n  }\n\n  :active ${IconWrapper}, :focus ${IconWrapper} {\n    background-color: ${Colors.Dark};\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n\nexport type LogLevelCounts = Record<LogLevel, number>;\n\nconst StructuredLogToolbar = ({\n  filter,\n  counts,\n  onSetFilter,\n  steps,\n}: {\n  filter: LogFilter;\n  counts: LogLevelCounts;\n  onSetFilter: (filter: LogFilter) => void;\n  steps: string[];\n}) => {\n  const [copyIcon, setCopyIcon] = React.useState<IconName>('assignment');\n  const logQueryString = logQueryToString(filter.logQuery);\n  const [queryString, setQueryString] = React.useState<string>(() => logQueryString);\n  const copyToClipboard = useCopyToClipboard();\n\n  const selectedStep = filter.logQuery.find((v) => v.token === 'step')?.value || null;\n  const filterText = filter.logQuery.reduce((accum, value) => accum + value.value, '');\n\n  // Reset the query string if the filter is updated, allowing external behavior\n  // (e.g. clicking a Gantt step) to set the input.\n  React.useEffect(() => {\n    setQueryString(logQueryString);\n  }, [logQueryString]);\n\n  const onChange = (value: string) => {\n    const tokens = value.split(/\\s+/);\n    const logQuery = tokens.map((item) => {\n      const segments = item.split(':');\n      if (segments.length > 1) {\n        return {token: segments[0], value: segments[1]};\n      }\n      return {value: segments[0]};\n    });\n    onSetFilter({...filter, logQuery: logQuery as LogFilterValue[]});\n    setQueryString(value);\n  };\n\n  // Restore the clipboard icon after a delay.\n  React.useEffect(() => {\n    let token: any;\n    if (copyIcon === 'assignment_turned_in') {\n      token = setTimeout(() => {\n        setCopyIcon('assignment');\n      }, 2000);\n    }\n    return () => {\n      token && clearTimeout(token);\n    };\n  }, [copyIcon]);\n\n  return (\n    <>\n      <LogsFilterInput\n        value={queryString}\n        suggestionProviders={getRunFilterProviders(steps)}\n        onChange={onChange}\n      />\n      {filterText ? (\n        <NonMatchCheckbox\n          checked={filter.hideNonMatches}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            onSetFilter({...filter, hideNonMatches: event.currentTarget.checked})\n          }\n          label=\"Hide non-matches\"\n        />\n      ) : null}\n      <OptionsDivider />\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        {Object.keys(LogLevel).map((level) => {\n          const enabled = filter.levels[level];\n          return (\n            <FilterLabel key={level} $enabled={enabled}>\n              <Checkbox\n                format=\"switch\"\n                size=\"small\"\n                checked={!!enabled}\n                fillColor={enabled ? Colors.Blue500 : Colors.Gray200}\n                onChange={() =>\n                  onSetFilter({\n                    ...filter,\n                    levels: {\n                      ...filter.levels,\n                      [level]: !enabled,\n                    },\n                  })\n                }\n              />\n              <LogLabel $enabled={enabled}>{level.toLowerCase()}</LogLabel>\n              <LogCount $enabled={enabled}>{compactNumber(counts[level])}</LogCount>\n            </FilterLabel>\n          );\n        })}\n      </Box>\n      {selectedStep && <OptionsDivider />}\n      <div style={{minWidth: 15, flex: 1}} />\n      <Button\n        icon={<Icon name={copyIcon} />}\n        onClick={() => {\n          copyToClipboard(window.location.href);\n          setCopyIcon('assignment_turned_in');\n        }}\n      >\n        Copy URL\n      </Button>\n    </>\n  );\n};\n\nconst NonMatchCheckbox = styled(Checkbox)`\n  &&& {\n    margin: 0 4px 0 12px;\n  }\n\n  white-space: nowrap;\n`;\n\nconst FilterLabel = styled.label<{$enabled: boolean}>`\n  background-color: ${({$enabled}) => ($enabled ? Colors.Blue50 : Colors.Gray100)};\n  border: none;\n  border-radius: 8px;\n  margin: 0;\n  padding: 4px 6px;\n  overflow: hidden;\n  cursor: pointer;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 500;\n  gap: 6px;\n\n  box-shadow: transparent inset 0px 0px 0px 1px;\n  transition: background 50ms linear;\n\n  :focus {\n    box-shadow: rgba(58, 151, 212, 0.6) 0 0 0 3px;\n    outline: none;\n  }\n\n  :focus:not(:focus-visible) {\n    box-shadow: transparent inset 0px 0px 0px 1px, rgba(0, 0, 0, 0.12) 0px 2px 12px 0px;\n  }\n`;\n\nconst LogLabel = styled.span<{$enabled: boolean}>`\n  color: ${({$enabled}) => ($enabled ? Colors.Blue500 : Colors.Gray700)};\n  line-height: 16px;\n  transition: background 50ms linear;\n`;\n\nconst LogCount = styled.span<{$enabled: boolean}>`\n  background-color: ${({$enabled}) => ($enabled ? Colors.Blue100 : Colors.Gray200)};\n  border-radius: 6px;\n  color: ${({$enabled}) => ($enabled ? Colors.Blue500 : Colors.Gray700)};\n  font-weight: 600;\n  font-family: ${FontFamily.monospace};\n  line-height: 16px;\n  padding: 1px 4px;\n  transition: background 50ms linear;\n`;\n","import {Colors, Group, Icon, Spinner, FontFamily} from '@dagster-io/ui';\nimport Ansi from 'ansi-to-react';\nimport * as React from 'react';\nimport styled, {createGlobalStyle} from 'styled-components/macro';\n\nconst MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\nconst TRUNCATE_PREFIX = '\\u001b[33m...logs truncated...\\u001b[39m\\n';\nconst SCROLLER_LINK_TIMEOUT_MS = 3000;\n\nexport const RawLogContent: React.FC<{\n  logData: string | null;\n  isLoading: boolean;\n  isVisible: boolean;\n  downloadUrl?: string | null;\n  location?: string;\n}> = React.memo(({logData, location, isLoading, isVisible, downloadUrl}) => {\n  const contentContainer = React.useRef<ScrollContainer | null>(null);\n  const timer = React.useRef<number>();\n  const [showScrollToTop, setShowScrollToTop] = React.useState(false);\n  const scrollToTop = () => {\n    contentContainer.current && contentContainer.current.scrollToTop();\n  };\n  const cancelHideWarning = () => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = 0;\n    }\n  };\n  const hideWarning = () => {\n    setShowScrollToTop(false);\n    cancelHideWarning();\n  };\n  const scheduleHideWarning = () => {\n    timer.current = window.setTimeout(hideWarning, SCROLLER_LINK_TIMEOUT_MS);\n  };\n  const onScrollUp = (position: number) => {\n    cancelHideWarning();\n\n    if (!position) {\n      hideWarning();\n    } else {\n      setShowScrollToTop(true);\n      scheduleHideWarning();\n    }\n  };\n  let content = logData;\n  const isTruncated = shouldTruncate(content);\n\n  if (content && isTruncated) {\n    const nextLine = content.indexOf('\\n') + 1;\n    const truncated = nextLine < content.length ? content.slice(nextLine) : content;\n    content = TRUNCATE_PREFIX + truncated;\n  }\n  const warning = isTruncated ? (\n    <FileWarning>\n      <Group direction=\"row\" spacing={8} alignItems=\"center\">\n        <Icon name=\"warning\" color={Colors.Yellow500} />\n        <div>\n          This log has exceeded the 5MB limit.{' '}\n          {downloadUrl ? (\n            <a href={downloadUrl} download>\n              Download the full log file\n            </a>\n          ) : null}\n          .\n        </div>\n      </Group>\n    </FileWarning>\n  ) : null;\n\n  return (\n    <>\n      <FileContainer isVisible={isVisible}>\n        {showScrollToTop ? (\n          <ScrollToast>\n            <ScrollToTop\n              onClick={scrollToTop}\n              onMouseOver={cancelHideWarning}\n              onMouseOut={scheduleHideWarning}\n            >\n              <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                <Icon name=\"arrow_upward\" color={Colors.White} />\n                Scroll to top\n              </Group>\n            </ScrollToTop>\n          </ScrollToast>\n        ) : null}\n        <FileContent>\n          {warning}\n          <RelativeContainer>\n            <LogContent\n              isSelected={true}\n              content={logData}\n              onScrollUp={onScrollUp}\n              onScrollDown={hideWarning}\n              ref={contentContainer}\n            />\n          </RelativeContainer>\n        </FileContent>\n        {isLoading ? (\n          <LoadingContainer>\n            <Spinner purpose=\"page\" />\n          </LoadingContainer>\n        ) : null}\n      </FileContainer>\n      {location ? <FileFooter isVisible={isVisible}>{location}</FileFooter> : null}\n    </>\n  );\n});\n\nconst shouldTruncate = (content: string | null | undefined) => {\n  if (!content) {\n    return false;\n  }\n  const encoder = new TextEncoder();\n  return encoder.encode(content).length >= MAX_STREAMING_LOG_BYTES;\n};\n\ninterface IScrollContainerProps {\n  content: string | null | undefined;\n  isSelected?: boolean;\n  className?: string;\n  onScrollUp?: (position: number) => void;\n  onScrollDown?: (position: number) => void;\n}\n\nexport class ScrollContainer extends React.Component<IScrollContainerProps> {\n  private container = React.createRef<HTMLDivElement>();\n  private lastScroll = 0;\n\n  componentDidMount() {\n    this.scrollToBottom();\n    if (this.container.current) {\n      this.container.current.focus();\n      this.container.current.addEventListener('scroll', this.onScroll);\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    if (!this.container.current) {\n      return false;\n    }\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const shouldScroll = offsetHeight + scrollTop >= scrollHeight;\n    return shouldScroll;\n  }\n\n  componentDidUpdate(_props: any, _state: any, shouldScroll: boolean) {\n    if (shouldScroll) {\n      this.scrollToBottom();\n    }\n    if (this.props.isSelected && !_props.isSelected) {\n      this.container.current && this.container.current.focus();\n    }\n  }\n\n  onScroll = () => {\n    if (!this.container.current || !this.props.isSelected) {\n      return;\n    }\n    const {onScrollUp, onScrollDown} = this.props;\n\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const position = scrollTop / (scrollHeight - offsetHeight);\n    if (this.container.current.scrollTop < this.lastScroll) {\n      onScrollUp && onScrollUp(position);\n    } else {\n      onScrollDown && onScrollDown(position);\n    }\n    this.lastScroll = this.container.current.scrollTop;\n  };\n\n  focus() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.focus();\n  }\n\n  scrollToBottom() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = node.scrollHeight - node.offsetHeight;\n  }\n\n  scrollToTop() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = 0;\n    node.focus();\n  }\n\n  render() {\n    const {content, className} = this.props;\n    if (!content) {\n      return (\n        <div className={className} ref={this.container}>\n          <ContentContainer style={{justifyContent: 'center', alignItems: 'center'}}>\n            {content == null ? 'No log file available' : 'No output'}\n          </ContentContainer>\n        </div>\n      );\n    }\n\n    return (\n      <div className={className} style={{outline: 'none'}} ref={this.container} tabIndex={0}>\n        <ContentContainer>\n          <LineNumbers content={content} />\n          <Content>\n            <SolarizedColors />\n            <Ansi linkify={false} useClasses>\n              {content}\n            </Ansi>\n          </Content>\n        </ContentContainer>\n      </div>\n    );\n  }\n}\n\nconst LineNumbers = (props: IScrollContainerProps) => {\n  const {content} = props;\n  if (!content) {\n    return null;\n  }\n  const matches = content.match(/\\n/g);\n  const count = matches ? matches.length : 0;\n  return (\n    <LineNumberContainer>\n      {Array.from(Array(count), (_, i) => (\n        <div key={i}>{String(i + 1)}</div>\n      ))}\n    </LineNumberContainer>\n  );\n};\n\nconst Content = styled.div`\n  padding: 10px;\n  background-color: ${Colors.Gray900};\n`;\nconst LineNumberContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  border-right: 1px solid #5c7080;\n  padding: 10px 10px 10px 20px;\n  margin-right: 5px;\n  background-color: ${Colors.Gray900};\n  opacity: 0.8;\n  color: #858585;\n  min-height: 100%;\n`;\nconst SolarizedColors = createGlobalStyle`\n  .ansi-black {\n    color: #586e75;\n  }\n  .ansi-red {\n    color: #dc322f;\n  }\n  .ansi-green {\n    color: #859900;\n  }\n  .ansi-yellow {\n    color: #b58900;\n  }\n  .ansi-blue {\n    color: #268bd2;\n  }\n  .ansi-magenta {\n    color: #d33682;\n  }\n  .ansi-cyan {\n    color: #2aa198;\n  }\n  .ansi-white {\n    color: #eee8d5;\n  }\n`;\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100%;\n  background-color: ${Colors.Gray900};\n`;\nconst FileContainer = styled.div`\n  flex: 1;\n  height: 100%;\n  position: relative;\n  &:first-child {\n    border-right: 0.5px solid #5c7080;\n  }\n  display: flex;\n  flex-direction: column;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\nconst FileFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 30px;\n  background-color: ${Colors.Gray900};\n  border-top: 0.5px solid #5c7080;\n  color: #aaaaaa;\n  padding: 2px 5px;\n  font-size: 0.85em;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\n\nconst FileContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\nconst RelativeContainer = styled.div`\n  flex: 1;\n  position: relative;\n`;\nconst LogContent = styled(ScrollContainer)`\n  color: #eeeeee;\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  white-space: pre;\n  overflow: auto;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  justifycontent: center;\n  alignitems: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  backgroundcolor: ${Colors.Gray800};\n  opacity: 0.3;\n`;\n\nconst ScrollToast = styled.div`\n  position: absolute;\n  height: 30px;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  z-index: 1;\n`;\nconst ScrollToTop = styled.div`\n  background-color: black;\n  padding: 10px 20px;\n  border-bottom-right-radius: 5px;\n  border-bottom-left-radius: 5px;\n  color: white;\n  border-bottom: 0.5px solid #5c7080;\n  border-left: 0.5px solid #5c7080;\n  border-right: 0.5px solid #5c7080;\n  cursor: pointer;\n`;\n\nconst FileWarning = styled.div`\n  background-color: #fffae3;\n  padding: 10px 20px;\n  margin: 20px 70px;\n  border-radius: 5px;\n`;\n","import {gql, useQuery, useSubscription} from '@apollo/client';\nimport {Box, Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {RawLogContent} from './RawLogContent';\nimport {AppContext} from './app/AppContext';\nimport {WebSocketContext} from './app/WebSocketProvider';\nimport {\n  CapturedLogsMetadataQuery,\n  CapturedLogsMetadataQueryVariables,\n} from './types/CapturedLogsMetadataQuery';\nimport {CapturedLogsQuery, CapturedLogsQueryVariables} from './types/CapturedLogsQuery';\nimport {\n  CapturedLogsSubscription,\n  CapturedLogsSubscriptionVariables,\n  CapturedLogsSubscription_capturedLogs,\n} from './types/CapturedLogsSubscription';\n\ninterface CapturedLogProps {\n  logKey: string[];\n  visibleIOType: string;\n  onSetDownloadUrl?: (url: string) => void;\n}\n\ninterface CapturedOrExternalLogPanelProps extends CapturedLogProps {\n  externalUrl?: string;\n}\n\nexport const CapturedOrExternalLogPanel: React.FC<CapturedOrExternalLogPanelProps> = React.memo(\n  ({externalUrl, ...props}) => {\n    if (externalUrl) {\n      return (\n        <Box\n          flex={{direction: 'row', alignItems: 'center', justifyContent: 'center', gap: 1}}\n          background={Colors.Gray900}\n          style={{color: Colors.White, flex: 1, minHeight: 0}}\n        >\n          View logs at\n          <a\n            href={externalUrl}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            style={{\n              color: Colors.White,\n              textDecoration: 'underline',\n              marginLeft: 4,\n              marginRight: 4,\n            }}\n          >\n            {externalUrl}\n          </a>\n          <Icon name=\"open_in_new\" color={Colors.White} size={20} style={{marginTop: 2}} />\n        </Box>\n      );\n    }\n    return props.logKey.length ? <CapturedLogPanel {...props} /> : null;\n  },\n);\n\nexport const MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\n\nconst slice = (s: string) =>\n  s.length < MAX_STREAMING_LOG_BYTES ? s : s.slice(-MAX_STREAMING_LOG_BYTES);\n\nconst merge = (a?: string | null, b?: string | null): string | null => {\n  if (!b) {\n    return a || null;\n  }\n  if (!a) {\n    return slice(b);\n  }\n  return slice(a + b);\n};\n\ninterface State {\n  stdout: string | null;\n  stderr: string | null;\n  cursor?: string | null;\n  isLoading: boolean;\n  stdoutDownloadUrl?: string;\n  stdoutLocation?: string;\n  stderrDownloadUrl?: string;\n  stderrLocation?: string;\n}\n\ntype Action =\n  | {type: 'update'; logData: CapturedLogsSubscription_capturedLogs}\n  | {type: 'metadata'; metadata: any}\n  | {type: 'reset'};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        isLoading: false,\n        cursor: action.logData?.cursor,\n        stdout: merge(state.stdout, action.logData?.stdout),\n        stderr: merge(state.stderr, action.logData?.stderr),\n      };\n    case 'metadata':\n      return {\n        ...state,\n        ...action.metadata,\n      };\n    case 'reset':\n      return {\n        ...initialState,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  stdout: null,\n  stderr: null,\n  cursor: null,\n  isLoading: true,\n};\n\nconst CapturedLogSubscription: React.FC<{\n  logKey: string[];\n  onLogData: (logData: CapturedLogsSubscription_capturedLogs) => void;\n}> = React.memo(({logKey, onLogData}) => {\n  useSubscription<CapturedLogsSubscription, CapturedLogsSubscriptionVariables>(\n    CAPTURED_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {logKey},\n      onSubscriptionData: ({subscriptionData}) => {\n        if (subscriptionData.data?.capturedLogs) {\n          onLogData(subscriptionData.data.capturedLogs);\n        }\n      },\n    },\n  );\n  return null;\n});\n\nconst CAPTURED_LOGS_SUBSCRIPTION = gql`\n  subscription CapturedLogsSubscription($logKey: [String!]!, $cursor: String) {\n    capturedLogs(logKey: $logKey, cursor: $cursor) {\n      stdout\n      stderr\n      cursor\n    }\n  }\n`;\n\nconst CAPTURED_LOGS_METADATA_QUERY = gql`\n  query CapturedLogsMetadataQuery($logKey: [String!]!) {\n    capturedLogsMetadata(logKey: $logKey) {\n      stdoutDownloadUrl\n      stdoutLocation\n      stderrDownloadUrl\n      stderrLocation\n    }\n  }\n`;\n\nconst QUERY_LOG_LIMIT = 100000;\nconst POLL_INTERVAL = 5000;\n\nconst CapturedLogsSubscriptionProvider = ({\n  logKey,\n  children,\n}: {\n  logKey: string[];\n  children: (result: State) => React.ReactChild;\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const logKeyString = JSON.stringify(logKey);\n  React.useEffect(() => {\n    dispatch({type: 'reset'});\n  }, [logKeyString]);\n\n  const onLogData = React.useCallback((logData: CapturedLogsSubscription_capturedLogs) => {\n    dispatch({type: 'update', logData});\n  }, []);\n  return (\n    <>\n      <CapturedLogSubscription logKey={logKey} onLogData={onLogData} />\n      {children(state)}\n    </>\n  );\n};\n\nconst CapturedLogsQueryProvider = ({\n  logKey,\n  children,\n}: {\n  logKey: string[];\n  children: (result: State) => React.ReactChild;\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const logKeyString = JSON.stringify(logKey);\n  React.useEffect(() => {\n    dispatch({type: 'reset'});\n  }, [logKeyString]);\n  const {cursor} = state;\n\n  const {stopPolling, startPolling} = useQuery<CapturedLogsQuery, CapturedLogsQueryVariables>(\n    CAPTURED_LOGS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n      variables: {logKey, cursor, limit: QUERY_LOG_LIMIT},\n      pollInterval: POLL_INTERVAL,\n      onCompleted: (data: CapturedLogsQuery) => {\n        // We have to stop polling in order to update the `after` value.\n        stopPolling();\n        dispatch({type: 'update', logData: data.capturedLogs});\n        startPolling(POLL_INTERVAL);\n      },\n    },\n  );\n\n  return <>{children(state)}</>;\n};\n\nconst CAPTURED_LOGS_QUERY = gql`\n  query CapturedLogsQuery($logKey: [String!]!, $cursor: String, $limit: Int) {\n    capturedLogs(logKey: $logKey, cursor: $cursor, limit: $limit) {\n      stdout\n      stderr\n      cursor\n    }\n  }\n`;\n\nexport const CapturedLogPanel: React.FC<CapturedLogProps> = React.memo(\n  ({logKey, visibleIOType, onSetDownloadUrl}) => {\n    const {rootServerURI} = React.useContext(AppContext);\n    const {availability, disabled} = React.useContext(WebSocketContext);\n    const queryResult = useQuery<CapturedLogsMetadataQuery, CapturedLogsMetadataQueryVariables>(\n      CAPTURED_LOGS_METADATA_QUERY,\n      {\n        variables: {logKey},\n        fetchPolicy: 'cache-and-network',\n      },\n    );\n\n    React.useEffect(() => {\n      if (!onSetDownloadUrl || !queryResult.data) {\n        return;\n      }\n      const visibleDownloadUrl =\n        visibleIOType === 'stdout'\n          ? queryResult.data.capturedLogsMetadata.stdoutDownloadUrl\n          : queryResult.data.capturedLogsMetadata.stderrDownloadUrl;\n\n      if (!visibleDownloadUrl) {\n        return;\n      }\n      if (visibleDownloadUrl.startsWith('/')) {\n        onSetDownloadUrl(rootServerURI + visibleDownloadUrl);\n      } else {\n        onSetDownloadUrl(visibleDownloadUrl);\n      }\n    }, [onSetDownloadUrl, visibleIOType, rootServerURI, queryResult.data]);\n\n    const stdoutLocation = queryResult.data?.capturedLogsMetadata.stdoutLocation || undefined;\n    const stderrLocation = queryResult.data?.capturedLogsMetadata.stderrLocation || undefined;\n    const websocketsUnavailabile = availability === 'unavailable' || disabled;\n    const Component = websocketsUnavailabile\n      ? CapturedLogsQueryProvider\n      : CapturedLogsSubscriptionProvider;\n    return (\n      <div style={{flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column'}}>\n        <Component logKey={logKey}>\n          {(_state: State) => (\n            <>\n              <RawLogContent\n                logData={_state.stdout}\n                isLoading={_state.isLoading}\n                location={stdoutLocation}\n                isVisible={visibleIOType === 'stdout'}\n              />\n              <RawLogContent\n                logData={_state.stderr}\n                isLoading={_state.isLoading}\n                location={stderrLocation}\n                isVisible={visibleIOType === 'stderr'}\n              />\n            </>\n          )}\n        </Component>\n      </div>\n    );\n  },\n);\n","import {gql, useQuery} from '@apollo/client';\n\nimport {InstanceSupportsCapturedLogs} from './types/InstanceSupportsCapturedLogs';\n\nexport const useSupportsCapturedLogs = () => {\n  const {data} = useQuery<InstanceSupportsCapturedLogs>(INSTANCE_SUPPORTS_CAPTURED_LOGS);\n  return !!data?.instance.hasCapturedLogManager;\n};\n\nconst INSTANCE_SUPPORTS_CAPTURED_LOGS = gql`\n  query InstanceSupportsCapturedLogs {\n    instance {\n      hasCapturedLogManager\n    }\n  }\n`;\n","import {gql, useSubscription} from '@apollo/client';\nimport * as React from 'react';\n\nimport {ComputeIOType} from '../types/globalTypes';\n\nimport {\n  ComputeLogsSubscription,\n  ComputeLogsSubscription_computeLogs,\n  ComputeLogsSubscriptionVariables,\n} from './types/ComputeLogsSubscription';\n\nconst MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\n\nconst slice = (s: string) =>\n  s.length < MAX_STREAMING_LOG_BYTES ? s : s.slice(-MAX_STREAMING_LOG_BYTES);\n\nconst merge = (\n  a: ComputeLogsSubscription_computeLogs | null,\n  b: ComputeLogsSubscription_computeLogs | null,\n): ComputeLogsSubscription_computeLogs | null => {\n  if (!b) {\n    return a;\n  }\n  let data = a?.data;\n  if (a?.data && b?.data) {\n    data = slice(a.data + b.data);\n  } else if (b?.data) {\n    data = slice(b.data);\n  }\n  return {\n    __typename: b.__typename,\n    path: b.path,\n    downloadUrl: b.downloadUrl,\n    data: typeof data === 'string' ? data : null,\n    cursor: b.cursor,\n  };\n};\n\ninterface State {\n  stepKey: string;\n  stdout: ComputeLogsSubscription_computeLogs | null;\n  stderr: ComputeLogsSubscription_computeLogs | null;\n  isLoading: boolean;\n}\n\ntype Action =\n  | {type: 'stdout'; stepKey: string; log: ComputeLogsSubscription_computeLogs | null}\n  | {type: 'stderr'; stepKey: string; log: ComputeLogsSubscription_computeLogs | null};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'stdout':\n      const stdout =\n        action.stepKey === state.stepKey ? merge(state.stdout, action.log) : action.log;\n      return {...state, isLoading: false, stdout};\n    case 'stderr':\n      const stderr =\n        action.stepKey === state.stepKey ? merge(state.stderr, action.log) : action.log;\n      return {...state, isLoading: false, stderr};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  stepKey: '',\n  stdout: null,\n  stderr: null,\n  isLoading: true,\n};\n\nexport const useComputeLogs = (runId: string, stepKey: string) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useSubscription<ComputeLogsSubscription, ComputeLogsSubscriptionVariables>(\n    COMPUTE_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, stepKey, ioType: ComputeIOType.STDOUT, cursor: null},\n      onSubscriptionData: ({subscriptionData}) => {\n        dispatch({type: 'stdout', stepKey, log: subscriptionData.data?.computeLogs || null});\n      },\n    },\n  );\n\n  useSubscription<ComputeLogsSubscription, ComputeLogsSubscriptionVariables>(\n    COMPUTE_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, stepKey, ioType: ComputeIOType.STDERR, cursor: null},\n      onSubscriptionData: ({subscriptionData}) => {\n        dispatch({type: 'stderr', stepKey, log: subscriptionData.data?.computeLogs || null});\n      },\n    },\n  );\n\n  return state;\n};\n\nconst COMPUTE_LOGS_SUBSCRIPTION = gql`\n  subscription ComputeLogsSubscription(\n    $runId: ID!\n    $stepKey: String!\n    $ioType: ComputeIOType!\n    $cursor: String\n  ) {\n    computeLogs(runId: $runId, stepKey: $stepKey, ioType: $ioType, cursor: $cursor) {\n      path\n      cursor\n      data\n      downloadUrl\n    }\n  }\n`;\n","import {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {RawLogContent} from '../RawLogContent';\nimport {AppContext} from '../app/AppContext';\n\nimport {useComputeLogs} from './useComputeLogs';\n\ninterface ComputeLogPanelProps {\n  runId: string;\n  ioType: string;\n  setComputeLogUrl: (url: string | null) => void;\n}\n\ninterface ComputeLogPanelMaybeKeyProps extends ComputeLogPanelProps {\n  computeLogFileKey?: string;\n  stepKeys: string[];\n}\n\nexport const ComputeLogPanel: React.FC<ComputeLogPanelMaybeKeyProps> = (props) => {\n  const {runId, stepKeys, computeLogFileKey, ioType, setComputeLogUrl} = props;\n\n  if (!stepKeys.length || !computeLogFileKey) {\n    return (\n      <Box\n        flex={{justifyContent: 'center', alignItems: 'center'}}\n        style={{flex: 1, height: '100%'}}\n      >\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <ComputeLogsPanelWithKey\n      runId={runId}\n      computeLogFileKey={computeLogFileKey}\n      ioType={ioType}\n      setComputeLogUrl={setComputeLogUrl}\n    />\n  );\n};\n\ninterface ComputeLogPanelWithKeyProps extends ComputeLogPanelProps {\n  computeLogFileKey: string;\n}\n\nconst resolveDownloadUrl = (rootServerURI: string, downloadUrl: string | null) => {\n  if (!downloadUrl) {\n    return null;\n  }\n  const isRelativeUrl = (x?: string) => x && x.startsWith('/');\n  return isRelativeUrl(downloadUrl) ? rootServerURI + downloadUrl : downloadUrl;\n};\n\nconst ComputeLogsPanelWithKey: React.FC<ComputeLogPanelWithKeyProps> = React.memo((props) => {\n  const {runId, computeLogFileKey, ioType, setComputeLogUrl} = props;\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const {isLoading, stdout, stderr} = useComputeLogs(runId, computeLogFileKey);\n  const stdoutDownloadUrl = resolveDownloadUrl(rootServerURI, stdout?.downloadUrl || null);\n  const stderrDownloadUrl = resolveDownloadUrl(rootServerURI, stderr?.downloadUrl || null);\n\n  return (\n    <div style={{flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column'}}>\n      <ContentWrapper\n        content={stdout ? stdout.data : null}\n        path={stdout ? stdout.path : undefined}\n        downloadUrl={stdoutDownloadUrl}\n        isLoading={isLoading}\n        isVisible={ioType === 'stdout'}\n        setComputeLogUrl={setComputeLogUrl}\n      />\n      <ContentWrapper\n        content={stderr ? stderr.data : null}\n        path={stderr ? stderr.path : undefined}\n        downloadUrl={stderrDownloadUrl}\n        isLoading={isLoading}\n        isVisible={ioType === 'stderr'}\n        setComputeLogUrl={setComputeLogUrl}\n      />\n    </div>\n  );\n});\n\nconst ContentWrapper = ({\n  isLoading,\n  isVisible,\n  content,\n  path,\n  downloadUrl,\n  setComputeLogUrl,\n}: {\n  isVisible: boolean;\n  isLoading: boolean;\n  content: string | null;\n  path?: string;\n  downloadUrl: string | null;\n  setComputeLogUrl: (url: string | null) => void;\n}) => {\n  React.useEffect(() => {\n    setComputeLogUrl(downloadUrl);\n  }, [setComputeLogUrl, downloadUrl]);\n  return (\n    <RawLogContent\n      logData={content}\n      isLoading={isLoading}\n      isVisible={isVisible}\n      downloadUrl={downloadUrl}\n      location={path}\n    />\n  );\n};\n","import {\n  gql,\n  OnSubscriptionDataOptions,\n  useApolloClient,\n  useQuery,\n  useSubscription,\n} from '@apollo/client';\nimport {TokenizingFieldValue} from '@dagster-io/ui';\nimport throttle from 'lodash/throttle';\nimport * as React from 'react';\n\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {LogLevelCounts} from './LogsToolbar';\nimport {RunFragments} from './RunFragments';\nimport {logNodeLevel} from './logNodeLevel';\nimport {LogNode} from './types';\nimport {\n  PipelineRunLogsSubscription,\n  PipelineRunLogsSubscriptionVariables,\n  PipelineRunLogsSubscription_pipelineRunLogs_PipelineRunLogsSubscriptionSuccess,\n} from './types/PipelineRunLogsSubscription';\nimport {PipelineRunLogsSubscriptionStatusFragment} from './types/PipelineRunLogsSubscriptionStatusFragment';\nimport {RunDagsterRunEventFragment} from './types/RunDagsterRunEventFragment';\nimport {RunLogsQuery, RunLogsQueryVariables} from './types/RunLogsQuery';\n\nexport interface LogFilterValue extends TokenizingFieldValue {\n  token?: 'step' | 'type' | 'query';\n}\n\nexport interface LogFilter {\n  logQuery: LogFilterValue[];\n  levels: {[key: string]: boolean};\n  focusedTime: number;\n  sinceTime: number;\n  hideNonMatches: boolean;\n}\n\nexport interface LogsProviderLogs {\n  allNodes: LogNode[];\n  counts: LogLevelCounts;\n  loading: boolean;\n}\n\nconst pipelineStatusFromMessages = (messages: RunDagsterRunEventFragment[]) => {\n  const reversed = [...messages].reverse();\n  for (const message of reversed) {\n    const {__typename} = message;\n    switch (__typename) {\n      case 'RunStartEvent':\n        return RunStatus.STARTED;\n      case 'RunEnqueuedEvent':\n        return RunStatus.QUEUED;\n      case 'RunStartingEvent':\n        return RunStatus.STARTING;\n      case 'RunCancelingEvent':\n        return RunStatus.CANCELING;\n      case 'RunCanceledEvent':\n        return RunStatus.CANCELED;\n      case 'RunSuccessEvent':\n        return RunStatus.SUCCESS;\n      case 'RunFailureEvent':\n        return RunStatus.FAILURE;\n    }\n  }\n  return null;\n};\n\nconst BATCH_INTERVAL = 100;\nconst QUERY_LOG_LIMIT = 10000;\n\ntype State = {\n  nodes: LogNode[];\n  cursor: string | null;\n  counts: LogLevelCounts;\n  loading: boolean;\n};\n\ntype Action =\n  | {type: 'append'; queued: RunDagsterRunEventFragment[]; hasMore: boolean; cursor: string}\n  | {type: 'set-cursor'; cursor: string}\n  | {type: 'reset'};\n\nconst emptyCounts = {\n  DEBUG: 0,\n  INFO: 0,\n  WARNING: 0,\n  ERROR: 0,\n  CRITICAL: 0,\n  EVENT: 0,\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'append': {\n      const queuedNodes = action.queued.map((node, ii) => ({\n        ...node,\n        clientsideKey: `csk${node.timestamp}-${ii}`,\n      }));\n      const nodes = [...state.nodes, ...queuedNodes];\n      const counts = {...state.counts};\n      queuedNodes.forEach((node) => {\n        const level = logNodeLevel(node);\n        counts[level]++;\n      });\n      return {nodes, counts, loading: action.hasMore, cursor: action.cursor};\n    }\n    case 'set-cursor':\n      return {...state, cursor: action.cursor};\n    case 'reset':\n      return {nodes: [], counts: emptyCounts, cursor: null, loading: true};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  nodes: [],\n  counts: emptyCounts,\n  cursor: null,\n  loading: true,\n};\n\nconst useLogsProviderWithSubscription = (runId: string) => {\n  const client = useApolloClient();\n  const queue = React.useRef<\n    PipelineRunLogsSubscription_pipelineRunLogs_PipelineRunLogsSubscriptionSuccess[]\n  >([]);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const syncPipelineStatusToApolloCache = React.useCallback(\n    (status: RunStatus) => {\n      const local = client.readFragment<PipelineRunLogsSubscriptionStatusFragment>({\n        fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n        fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n        id: `Run:${runId}`,\n      });\n\n      if (local) {\n        const toWrite = {...local, status};\n        if (\n          status === RunStatus.FAILURE ||\n          status === RunStatus.SUCCESS ||\n          status === RunStatus.STARTING ||\n          status === RunStatus.CANCELING ||\n          status === RunStatus.CANCELED\n        ) {\n          toWrite.canTerminate = false;\n        }\n\n        client.writeFragment({\n          fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n          fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n          id: `Run:${runId}`,\n          data: toWrite,\n        });\n      }\n    },\n    [client, runId],\n  );\n\n  React.useEffect(() => {\n    queue.current = [];\n    dispatch({type: 'reset'});\n  }, [runId]);\n\n  // Batch the nodes together so they don't overwhelm the animation of the Gantt,\n  // which depends on a bit of a timing delay to maintain smoothness.\n  const throttledSetNodes = React.useMemo(() => {\n    return throttle(() => {\n      if (!queue.current.length) {\n        return;\n      }\n      const queuedLogs = [...queue.current];\n      queue.current = [];\n      const queuedMessages = queuedLogs.flatMap((log) => log.messages);\n      const lastLog = queuedLogs[queuedLogs.length - 1];\n      const hasMore = lastLog.hasMorePastEvents;\n      const cursor = lastLog.cursor;\n\n      dispatch({type: 'append', queued: queuedMessages, hasMore, cursor});\n      const nextPipelineStatus = pipelineStatusFromMessages(queuedMessages);\n\n      // If we're still loading past events, don't sync to the cache -- event chunks could\n      // give us `status` values that don't match the actual state of the run.\n      if (nextPipelineStatus && !hasMore) {\n        syncPipelineStatusToApolloCache(nextPipelineStatus);\n      }\n    }, BATCH_INTERVAL);\n  }, [syncPipelineStatusToApolloCache]);\n\n  const {nodes, counts, cursor, loading} = state;\n\n  const {availability, disabled, status} = React.useContext(WebSocketContext);\n  const lostWebsocket = !disabled && availability === 'available' && status === WebSocket.CLOSED;\n  const currentInitialCursorRef = React.useRef<string | null>(cursor);\n\n  if (lostWebsocket) {\n    // Record the cursor we're at when disconnecting so that our subscription\n    // picks up where we left off.\n    currentInitialCursorRef.current = cursor;\n  }\n  const currentInitialCursor = currentInitialCursorRef.current;\n\n  const variables = React.useMemo(() => {\n    return {\n      runId,\n      cursor: currentInitialCursor,\n    };\n  }, [runId, currentInitialCursor]);\n\n  const subscriptionComponent = React.useMemo(\n    () => (\n      <SubscriptionComponent\n        variables={variables}\n        onSubscriptionData={({subscriptionData}) => {\n          const logs = subscriptionData.data?.pipelineRunLogs;\n          if (!logs || logs.__typename === 'PipelineRunLogsSubscriptionFailure') {\n            return;\n          }\n          // Maintain a queue of messages as they arrive, and call the throttled setter.\n          queue.current.push(logs);\n          // Wait until end of animation frame to call throttled set nodes\n          // otherwise we wont end up batching anything if rendering takes\n          // longer than the BATCH_INTERVAL\n          requestAnimationFrame(throttledSetNodes);\n        }}\n      />\n    ),\n    [variables, throttledSetNodes],\n  );\n\n  return React.useMemo(\n    () =>\n      nodes !== null\n        ? {allNodes: nodes, counts, loading, subscriptionComponent}\n        : {allNodes: [], counts, loading, subscriptionComponent},\n    [counts, loading, nodes, subscriptionComponent],\n  );\n};\n\n/**\n * Putting useSubscription in a component that returns null avoids re-rendering\n * any children components that aren't completely memoized\n * https://stackoverflow.com/questions/61876931/how-to-prevent-re-rendering-with-usesubscription\n */\nconst SubscriptionComponent = ({\n  variables,\n  onSubscriptionData,\n}: {\n  variables: {\n    runId: string;\n    cursor: string | null;\n  };\n  onSubscriptionData: (options: OnSubscriptionDataOptions<PipelineRunLogsSubscription>) => void;\n}) => {\n  useSubscription<PipelineRunLogsSubscription, PipelineRunLogsSubscriptionVariables>(\n    PIPELINE_RUN_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables,\n      onSubscriptionData,\n    },\n  );\n  return null;\n};\n\ninterface LogsProviderProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst LogsProviderWithSubscription: React.FC<LogsProviderProps> = (props) => {\n  const state = useLogsProviderWithSubscription(props.runId);\n  return (\n    <>\n      {state.subscriptionComponent}\n      {props.children(state)}\n    </>\n  );\n};\n\ninterface LogsProviderWithQueryProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst POLL_INTERVAL = 5000;\n\nconst LogsProviderWithQuery = (props: LogsProviderWithQueryProps) => {\n  const {children, runId} = props;\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {counts, cursor, nodes} = state;\n\n  const {stopPolling, startPolling} = useQuery<RunLogsQuery, RunLogsQueryVariables>(\n    RUN_LOGS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n      variables: {runId, cursor, limit: QUERY_LOG_LIMIT},\n      pollInterval: POLL_INTERVAL,\n      onCompleted: (data: RunLogsQuery) => {\n        // We have to stop polling in order to update the `after` value.\n        stopPolling();\n\n        if (\n          data?.pipelineRunOrError.__typename !== 'Run' ||\n          data?.logsForRun.__typename !== 'EventConnection'\n        ) {\n          return;\n        }\n\n        const run = data.pipelineRunOrError;\n        const queued = data.logsForRun.events;\n        const status = run.status;\n        const cursor = data.logsForRun.cursor;\n\n        const hasMore =\n          !!status &&\n          status !== RunStatus.FAILURE &&\n          status !== RunStatus.SUCCESS &&\n          status !== RunStatus.CANCELED;\n\n        dispatch({type: 'append', queued, hasMore, cursor});\n\n        if (hasMore) {\n          startPolling(POLL_INTERVAL);\n        }\n      },\n    },\n  );\n\n  return (\n    <>\n      {children(\n        nodes !== null && nodes.length > 0\n          ? {allNodes: nodes, counts, loading: false}\n          : {allNodes: [], counts, loading: true},\n      )}\n    </>\n  );\n};\n\nexport const LogsProvider: React.FC<LogsProviderProps> = (props) => {\n  const {children, runId} = props;\n  const {availability, disabled} = React.useContext(WebSocketContext);\n\n  // if disabled, drop to query variant immediately\n  if (availability === 'unavailable' || disabled) {\n    return <LogsProviderWithQuery runId={runId}>{children}</LogsProviderWithQuery>;\n  }\n\n  if (availability === 'attempting-to-connect') {\n    return <>{children({allNodes: [], counts: emptyCounts, loading: true})}</>;\n  }\n\n  return <LogsProviderWithSubscription runId={runId}>{children}</LogsProviderWithSubscription>;\n};\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION = gql`\n  subscription PipelineRunLogsSubscription($runId: ID!, $cursor: String) {\n    pipelineRunLogs(runId: $runId, cursor: $cursor) {\n      __typename\n      ... on PipelineRunLogsSubscriptionSuccess {\n        messages {\n          ... on MessageEvent {\n            runId\n          }\n          ...RunDagsterRunEventFragment\n        }\n        hasMorePastEvents\n        cursor\n      }\n      ... on PipelineRunLogsSubscriptionFailure {\n        missingRunId\n        message\n      }\n    }\n  }\n\n  ${RunFragments.RunDagsterRunEventFragment}\n`;\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT = gql`\n  fragment PipelineRunLogsSubscriptionStatusFragment on Run {\n    id\n    runId\n    status\n    canTerminate\n  }\n`;\n\nconst RUN_LOGS_QUERY = gql`\n  query RunLogsQuery($runId: ID!, $cursor: String, $limit: Int) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        runId\n        status\n        canTerminate\n      }\n    }\n    logsForRun(runId: $runId, afterCursor: $cursor, limit: $limit) {\n      ... on EventConnection {\n        events {\n          __typename\n          ... on MessageEvent {\n            runId\n          }\n          ...RunDagsterRunEventFragment\n        }\n        cursor\n      }\n      ... on PythonError {\n        message\n        stack\n      }\n    }\n  }\n  ${RunFragments.RunDagsterRunEventFragment}\n`;\n","import memoize from 'lodash/memoize';\n\nconst compactFormatter = memoize(\n  () =>\n    new Intl.NumberFormat(navigator.language, {\n      compactDisplay: 'short',\n      notation: 'compact',\n    }),\n);\n\nexport const compactNumber = (num: number | bigint): string => compactFormatter().format(num);\n","import {Colors} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nimport {IStepState} from './RunMetadataProvider';\n\nexport const ExecutionStateDot = styled.div<{state: IStepState}>`\n  display: inline-block;\n  width: 11px;\n  height: 11px;\n  border-radius: 5.5px;\n  transition: background 200ms linear;\n  background: ${({state}) =>\n    ({\n      [IStepState.RUNNING]: Colors.Gray400,\n      [IStepState.SUCCEEDED]: Colors.Green700,\n      [IStepState.SKIPPED]: Colors.Yellow500,\n      [IStepState.FAILED]: Colors.Red500,\n      [IStepState.PREPARING]: Colors.Red500,\n      [IStepState.RETRY_REQUESTED]: Colors.Red500,\n      [IStepState.UNKNOWN]: Colors.Red500,\n    }[state])};\n  &:hover {\n    background: ${({state}) =>\n      ({\n        [IStepState.RUNNING]: Colors.Gray400,\n        [IStepState.SUCCEEDED]: Colors.Green700,\n        [IStepState.SKIPPED]: Colors.Yellow500,\n        [IStepState.FAILED]: Colors.Red200,\n        [IStepState.PREPARING]: Colors.Red500,\n        [IStepState.RETRY_REQUESTED]: Colors.Red500,\n        [IStepState.UNKNOWN]: Colors.Red500,\n      }[state])};\n  }\n`;\n","import {\n  Colors,\n  Popover,\n  TextInput,\n  SuggestionProvider,\n  useSuggestionsForString,\n  Icon,\n} from '@dagster-io/ui';\nimport Fuse from 'fuse.js';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {ClearButton} from '../ui/ClearButton';\n\ninterface Props {\n  value: string;\n  onChange: (value: string) => void;\n  suggestionProviders: SuggestionProvider[];\n}\n\ntype Action =\n  | {type: 'show-popover'}\n  | {type: 'hide-popover'}\n  | {type: 'highlight'; highlight: number}\n  | {type: 'change-query'}\n  | {type: 'select-suggestion'};\n\ntype State = {\n  shown: boolean;\n  highlight: number;\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'show-popover':\n      return {...state, shown: true};\n    case 'hide-popover':\n      return {...state, shown: false};\n    case 'highlight':\n      return {...state, highlight: action.highlight};\n    case 'change-query':\n      return {...state, shown: true, highlight: 0};\n    case 'select-suggestion':\n      return {...state, highlight: 0};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  shown: false,\n  highlight: 0,\n};\n\nconst fuseOptions = {\n  threshold: 0.3,\n};\n\nexport const LogsFilterInput: React.FC<Props> = (props) => {\n  const {value, onChange, suggestionProviders} = props;\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {shown, highlight} = state;\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const {empty, perProvider} = React.useMemo(() => {\n    const perProvider = suggestionProviders.reduce((accum, provider) => {\n      const values = provider.values();\n      return provider.token\n        ? {...accum, [provider.token]: {fuse: new Fuse(values, fuseOptions), all: values}}\n        : accum;\n    }, {} as {[token: string]: {fuse: Fuse<string>; all: string[]}});\n    const providerKeys = suggestionProviders\n      .map((provider) => provider.token)\n      .filter((token) => token) as string[];\n    return {\n      empty: new Fuse(providerKeys, fuseOptions),\n      perProvider,\n    };\n  }, [suggestionProviders]);\n\n  const buildSuggestions = React.useCallback(\n    (queryString: string): string[] => {\n      if (!queryString) {\n        return Object.keys(perProvider);\n      }\n\n      const [token, value] = queryString.split(':');\n      if (token in perProvider) {\n        const {fuse, all} = perProvider[token];\n        const results = value\n          ? fuse.search(value).map((result) => `${token}:${result.item}`)\n          : all.map((value) => `${token}:${value}`);\n\n        // If the querystring is an exact match, don't suggest anything.\n        return results.map((result) => result.toLowerCase()).includes(queryString) ? [] : results;\n      }\n\n      return empty.search(queryString).map((result) => result.item);\n    },\n    [empty, perProvider],\n  );\n\n  const {suggestions, onSelectSuggestion} = useSuggestionsForString(buildSuggestions, value);\n\n  const numResults = suggestions.length;\n  const highlightedResult = suggestions[highlight] || null;\n\n  const onInputChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      dispatch({type: 'change-query'});\n      onChange(e.target.value);\n    },\n    [onChange],\n  );\n\n  const onSelect = React.useCallback(\n    (suggestion: string) => {\n      dispatch({type: 'select-suggestion'});\n      onChange(onSelectSuggestion(suggestion));\n    },\n    [onChange, onSelectSuggestion],\n  );\n\n  const onClear = React.useCallback(() => {\n    dispatch({type: 'change-query'});\n    onChange('');\n    inputRef.current?.focus();\n  }, [onChange]);\n\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    const {key} = e;\n    if (key === 'Escape') {\n      dispatch({type: 'hide-popover'});\n      return;\n    }\n\n    if (!numResults) {\n      return;\n    }\n\n    const lastResult = numResults - 1;\n\n    switch (key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === 0 ? lastResult : highlight - 1});\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === lastResult ? 0 : highlight + 1});\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (highlightedResult) {\n          onSelect(highlightedResult);\n        }\n    }\n  };\n  return (\n    <Popover\n      isOpen={shown && suggestions.length > 0}\n      position=\"bottom-left\"\n      content={\n        <Results>\n          {suggestions.map((suggestion, ii) => (\n            <ResultItem\n              key={suggestion}\n              suggestion={suggestion}\n              isHighlight={highlight === ii}\n              onSelect={onSelect}\n            />\n          ))}\n        </Results>\n      }\n    >\n      <FilterInput\n        placeholder=\"Filter…\"\n        spellCheck={false}\n        autoCorrect=\"off\"\n        value={value}\n        ref={inputRef}\n        onChange={onInputChange}\n        onFocus={() => dispatch({type: 'show-popover'})}\n        onBlur={() => dispatch({type: 'hide-popover'})}\n        onKeyDown={onKeyDown}\n        rightElement={\n          <ClearButton onClick={onClear}>\n            <Icon name=\"cancel\" />\n          </ClearButton>\n        }\n      />\n    </Popover>\n  );\n};\n\nconst ResultItem: React.FC<{\n  suggestion: string;\n  isHighlight: boolean;\n  onSelect: (suggestion: string) => void;\n}> = (props) => {\n  const {suggestion, isHighlight, onSelect} = props;\n  const element = React.useRef<HTMLLIElement>(null);\n\n  React.useEffect(() => {\n    if (element.current && isHighlight) {\n      element.current.scrollIntoView({block: 'nearest'});\n    }\n  }, [isHighlight]);\n\n  return (\n    <Item\n      ref={element}\n      isHighlight={isHighlight}\n      onMouseDown={(e: React.MouseEvent<any>) => {\n        e.preventDefault();\n        onSelect(suggestion);\n      }}\n    >\n      {suggestion}\n    </Item>\n  );\n};\n\nconst FilterInput = styled(TextInput)`\n  width: 300px;\n`;\n\nconst Results = styled.ul`\n  list-style: none;\n  margin: 0;\n  max-height: 200px;\n  max-width: 800px;\n  min-width: 300px;\n  overflow-y: auto;\n  padding: 4px 0;\n`;\n\ninterface HighlightableTextProps {\n  readonly isHighlight: boolean;\n}\n\nconst Item = styled.li<HighlightableTextProps>`\n  align-items: center;\n  background-color: ${({isHighlight}) => (isHighlight ? Colors.Blue500 : Colors.White)};\n  color: ${({isHighlight}) => (isHighlight ? Colors.White : 'default')};\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  font-size: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 4px 8px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  &:hover {\n    background-color: ${({isHighlight}) => (isHighlight ? Colors.Blue500 : Colors.Gray100)};\n  }\n`;\n","import * as React from 'react';\n\nexport const useSuggestionsForString = (\n  buildSuggestions: (value: string) => string[],\n  value: string,\n) => {\n  const tokens = value.toLocaleLowerCase().trim().split(/\\s+/);\n  const queryString = tokens[tokens.length - 1] || '';\n\n  const suggestions = React.useMemo(() => buildSuggestions(queryString), [\n    buildSuggestions,\n    queryString,\n  ]);\n\n  const onSelectSuggestion = React.useCallback(\n    (suggestion: string) => {\n      const lastIndex = value.toLocaleLowerCase().lastIndexOf(queryString);\n      if (lastIndex !== -1) {\n        const keep = value.slice(0, lastIndex);\n        return `${keep}${suggestion}`;\n      }\n\n      // Shouldn't really ever fall through to this, since `queryString` should definitely\n      // be the last token in `value`. No-op just in case.\n      return value;\n    },\n    [queryString, value],\n  );\n\n  return React.useMemo(\n    () => ({\n      suggestions,\n      onSelectSuggestion,\n    }),\n    [onSelectSuggestion, suggestions],\n  );\n};\n","import {tokenizedValueFromString} from '@dagster-io/ui';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\n\nimport {DefaultLogLevels, LogLevel} from './LogLevel';\nimport {LogFilter} from './LogsProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\n\nconst DELIMITER = '|';\n\nfunction levelsToQuery(levels: string[]): string {\n  return levels\n    .sort()\n    .map((key) => key.toLowerCase())\n    .join(DELIMITER);\n}\n\nexport const DefaultQuerystring: {[key: string]: string} = {\n  steps: '*',\n  logs: '',\n  levels: levelsToQuery(DefaultLogLevels),\n  hideNonMatches: 'true',\n  focusedTime: '',\n};\n\n/**\n * Query parameter structure, all optional:\n *\n * `steps`\n *   - string (selection syntax)\n *   - Initializes step selection in Gantt chart\n * `logs`\n *   - string (comma-separated foo:bar tokens or free text)\n *   - Initializes log filter input\n * `levels`\n *   - string (comma-separated values)\n *   - Initializes levels in log filter\n * `focusedTime`\n *   - string (unix timestamp with msec)\n *   - Scrolls directly to log with specified time, if no `logs` filter\n */\nexport const decodeRunPageFilters = (qs: {[key: string]: string}) => {\n  const logValues = qs['logs'].split(DELIMITER);\n  const focusedTime = qs['focusedTime'] && !qs['logs'] ? Number(qs['focusedTime']) : null;\n  const hideNonMatches = qs['hideNonMatches'] === 'true' ? true : false;\n\n  const providers = getRunFilterProviders();\n  const logQuery = logValues.map((token) => tokenizedValueFromString(token, providers));\n\n  const levelsValues = qs['levels'].split(DELIMITER);\n\n  return {\n    sinceTime: 0,\n    focusedTime,\n    hideNonMatches,\n    logQuery,\n    levels: levelsValues\n      .map((level) => level.toUpperCase())\n      .filter((level) => LogLevel.hasOwnProperty(level))\n      .reduce((accum, level) => ({...accum, [level]: true}), {}),\n  } as LogFilter;\n};\n\nexport function encodeRunPageFilters(filter: LogFilter) {\n  const logQueryTokenStrings = filter.logQuery.map((v) =>\n    v.token ? `${v.token}:${v.value}` : v.value,\n  );\n\n  return {\n    hideNonMatches: filter.hideNonMatches ? 'true' : 'false',\n    focusedTime: filter.focusedTime || '',\n    logs: logQueryTokenStrings.join(DELIMITER),\n    levels: levelsToQuery(Object.keys(filter.levels).filter((key) => !!filter.levels[key])),\n  };\n}\n\nexport function useQueryPersistedLogFilter() {\n  return useQueryPersistedState<LogFilter>({\n    encode: encodeRunPageFilters,\n    decode: decodeRunPageFilters,\n    defaults: DefaultQuerystring,\n  });\n}\n","import {Box, NonIdealState, FirstOrSecondPanelToggle, SplitPanelContainer} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {CapturedOrExternalLogPanel} from '../CapturedLogPanel';\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {GanttChart, GanttChartLoadingState, GanttChartMode, QueuedState} from '../gantt/GanttChart';\nimport {toGraphQueryItems} from '../gantt/toGraphQueryItems';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useFavicon} from '../hooks/useFavicon';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {useSupportsCapturedLogs} from '../instance/useSupportsCapturedLogs';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {ComputeLogPanel} from './ComputeLogPanel';\nimport {LogFilter, LogsProvider, LogsProviderLogs} from './LogsProvider';\nimport {LogsScrollingTable} from './LogsScrollingTable';\nimport {LogsToolbar, LogType} from './LogsToolbar';\nimport {RunActionButtons} from './RunActionButtons';\nimport {RunContext} from './RunContext';\nimport {ILogCaptureInfo, IRunMetadataDict, RunMetadataProvider} from './RunMetadataProvider';\nimport {\n  RunDagsterRunEventFragment,\n  RunDagsterRunEventFragment_ExecutionStepFailureEvent,\n} from './types/RunDagsterRunEventFragment';\nimport {RunFragment} from './types/RunFragment';\nimport {useJobReExecution} from './useJobReExecution';\nimport {useQueryPersistedLogFilter} from './useQueryPersistedLogFilter';\n\ninterface RunProps {\n  runId: string;\n  run?: RunFragment;\n}\n\nconst runStatusFavicon = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return '/favicon-run-failed.svg';\n    case RunStatus.SUCCESS:\n      return '/favicon-run-success.svg';\n    default:\n      return '/favicon-run-pending.svg';\n  }\n};\n\nexport const Run: React.FC<RunProps> = (props) => {\n  const {run, runId} = props;\n  const [logsFilter, setLogsFilter] = useQueryPersistedLogFilter();\n  const [selectionQuery, setSelectionQuery] = useQueryPersistedState<string>({\n    queryKey: 'selection',\n    defaults: {selection: ''},\n  });\n\n  useFavicon(run ? runStatusFavicon(run.status) : '/favicon.svg');\n  useDocumentTitle(\n    run\n      ? `${!isHiddenAssetGroupJob(run.pipelineName) ? run.pipelineName : ''} ${runId.slice(\n          0,\n          8,\n        )} [${run.status}]`\n      : `Run: ${runId}`,\n  );\n\n  const onShowStateDetails = (stepKey: string, logs: RunDagsterRunEventFragment[]) => {\n    const errorNode = logs.find(\n      (node) => node.__typename === 'ExecutionStepFailureEvent' && node.stepKey === stepKey,\n    ) as RunDagsterRunEventFragment_ExecutionStepFailureEvent;\n\n    if (errorNode) {\n      showCustomAlert({\n        body: <PythonErrorInfo error={errorNode} />,\n      });\n    }\n  };\n\n  const onSetSelectionQuery = (query: string) => {\n    setSelectionQuery(query);\n    setLogsFilter({\n      ...logsFilter,\n      logQuery: query !== '*' ? [{token: 'query', value: query}] : [],\n    });\n  };\n\n  return (\n    <RunContext.Provider value={run}>\n      <LogsProvider key={runId} runId={runId}>\n        {(logs) => (\n          <RunMetadataProvider logs={logs}>\n            {(metadata) => (\n              <RunWithData\n                run={run}\n                runId={runId}\n                logs={logs}\n                logsFilter={logsFilter}\n                metadata={metadata}\n                selectionQuery={selectionQuery}\n                onSetLogsFilter={setLogsFilter}\n                onSetSelectionQuery={onSetSelectionQuery}\n                onShowStateDetails={onShowStateDetails}\n              />\n            )}\n          </RunMetadataProvider>\n        )}\n      </LogsProvider>\n    </RunContext.Provider>\n  );\n};\n\ninterface RunWithDataProps {\n  run?: RunFragment;\n  runId: string;\n  selectionQuery: string;\n  logs: LogsProviderLogs;\n  logsFilter: LogFilter;\n  metadata: IRunMetadataDict;\n  onSetLogsFilter: (v: LogFilter) => void;\n  onSetSelectionQuery: (query: string) => void;\n  onShowStateDetails: (stepKey: string, logs: RunDagsterRunEventFragment[]) => void;\n}\n\nconst logTypeFromQuery = (queryLogType: string) => {\n  switch (queryLogType) {\n    case 'stdout':\n      return LogType.stdout;\n    case 'stderr':\n      return LogType.stderr;\n    default:\n      return LogType.structured;\n  }\n};\n\nconst matchingComputeLogKeyFromStepKey = (\n  logCaptureSteps: {[fileKey: string]: ILogCaptureInfo} | undefined,\n  stepKey: string,\n) => {\n  const stepsInfo = logCaptureSteps ? Object.values(logCaptureSteps) : [];\n  const matching = stepsInfo.find((info) => info.stepKeys.includes(stepKey));\n  return matching && matching?.fileKey;\n};\n\n/**\n * Note: There are two places we keep a \"step query string\" in the Run view:\n * selectionQuery and logsFilter.logsQuery.\n *\n * - selectionQuery is set when you click around in the Gannt view and is the\n *   selection used for re-execution, etc. When set, we autofill logsFilter.logsQuery.\n *\n * - logsFilter.logsQuery is used for filtering the logs. It can be cleared separately\n *   from the selectionQuery, so you can select a step but navigate elsewhere in the logs.\n *\n * We could revisit this in the future but I believe we iterated quite a bit to get to this\n * solution and we should avoid locking the two filter inputs together completely.\n */\nconst RunWithData: React.FC<RunWithDataProps> = ({\n  run,\n  runId,\n  logs,\n  logsFilter,\n  metadata,\n  selectionQuery,\n  onSetLogsFilter,\n  onSetSelectionQuery,\n}) => {\n  const onLaunch = useJobReExecution(run);\n  const splitPanelContainer = React.createRef<SplitPanelContainer>();\n  const supportsCapturedLogs = useSupportsCapturedLogs();\n\n  const [queryLogType, setQueryLogType] = useQueryPersistedState<string>({\n    queryKey: 'logType',\n    defaults: {logType: 'structured'},\n  });\n\n  const [computeLogFileKey, setComputeLogFileKey] = useQueryPersistedState<string>({\n    queryKey: 'logFileKey',\n  });\n\n  const logType = logTypeFromQuery(queryLogType);\n  const setLogType = (lt: LogType) => setQueryLogType(LogType[lt]);\n  const [computeLogUrl, setComputeLogUrl] = React.useState<string | null>(null);\n\n  const stepKeysJSON = JSON.stringify(Object.keys(metadata.steps).sort());\n  const stepKeys = React.useMemo(() => JSON.parse(stepKeysJSON), [stepKeysJSON]);\n\n  const runtimeGraph = run?.executionPlan && toGraphQueryItems(run?.executionPlan, metadata.steps);\n\n  const selectionStepKeys = React.useMemo(() => {\n    return runtimeGraph && selectionQuery && selectionQuery !== '*'\n      ? filterByQuery(runtimeGraph, selectionQuery).all.map((n) => n.name)\n      : [];\n  }, [runtimeGraph, selectionQuery]);\n\n  React.useEffect(() => {\n    if (!stepKeys?.length || computeLogFileKey) {\n      return;\n    }\n\n    if (metadata.logCaptureSteps) {\n      const logFileKeys = Object.keys(metadata.logCaptureSteps);\n      const selectedLogKey = logFileKeys.find((logFileKey) => {\n        return selectionStepKeys.every(\n          (stepKey) =>\n            metadata.logCaptureSteps &&\n            metadata.logCaptureSteps[logFileKey].stepKeys.includes(stepKey),\n        );\n      });\n      setComputeLogFileKey(selectedLogKey || logFileKeys[0]);\n    } else if (!stepKeys.includes(computeLogFileKey)) {\n      const matching = matchingComputeLogKeyFromStepKey(\n        metadata.logCaptureSteps,\n        selectionStepKeys.length === 1 ? selectionStepKeys[0] : stepKeys[0],\n      );\n      matching && setComputeLogFileKey(matching);\n    } else if (selectionStepKeys.length === 1 && computeLogFileKey !== selectionStepKeys[0]) {\n      const matching = matchingComputeLogKeyFromStepKey(\n        metadata.logCaptureSteps,\n        selectionStepKeys[0],\n      );\n      matching && setComputeLogFileKey(matching);\n    }\n  }, [\n    stepKeys,\n    computeLogFileKey,\n    selectionStepKeys,\n    metadata.logCaptureSteps,\n    setComputeLogFileKey,\n  ]);\n\n  const onSetComputeLogKey = (logFileKey: string) => {\n    setComputeLogFileKey(logFileKey);\n  };\n\n  const logsFilterStepKeys = runtimeGraph\n    ? logsFilter.logQuery\n        .filter((v) => v.token && v.token === 'query')\n        .reduce((accum, v) => {\n          return [...accum, ...filterByQuery(runtimeGraph, v.value).all.map((n) => n.name)];\n        }, [] as string[])\n    : [];\n\n  const onClickStep = (stepKey: string, evt: React.MouseEvent<any>) => {\n    const index = selectionStepKeys.indexOf(stepKey);\n    let newSelected: string[];\n    const filterForExactStep = `\"${stepKey}\"`;\n    if (evt.shiftKey) {\n      // shift-click to multi select steps, preserving quotations if present\n      newSelected = [\n        ...selectionStepKeys.map((k) => (selectionQuery.includes(`\"${k}\"`) ? `\"${k}\"` : k)),\n      ];\n\n      if (index !== -1) {\n        // deselect the step if already selected\n        newSelected.splice(index, 1);\n      } else {\n        // select the step otherwise\n        newSelected.push(filterForExactStep);\n      }\n    } else {\n      if (selectionStepKeys.length === 1 && index !== -1) {\n        // deselect the step if already selected\n        newSelected = [];\n      } else {\n        // select the step otherwise\n        newSelected = [filterForExactStep];\n\n        // When only one step is selected, set the compute log key as well.\n        const matchingLogKey = matchingComputeLogKeyFromStepKey(metadata.logCaptureSteps, stepKey);\n        matchingLogKey && setComputeLogFileKey(matchingLogKey);\n      }\n    }\n\n    onSetSelectionQuery(newSelected.join(', ') || '*');\n  };\n\n  const gantt = (metadata: IRunMetadataDict) => {\n    if (!run) {\n      return <GanttChartLoadingState runId={runId} />;\n    }\n\n    if (run.status === 'QUEUED') {\n      return <QueuedState run={run} />;\n    }\n\n    if (run.executionPlan && runtimeGraph) {\n      return (\n        <GanttChart\n          options={{\n            mode: GanttChartMode.WATERFALL_TIMED,\n          }}\n          toolbarActions={\n            <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n              <FirstOrSecondPanelToggle axis=\"vertical\" container={splitPanelContainer} />\n              <RunActionButtons\n                run={run}\n                onLaunch={onLaunch}\n                graph={runtimeGraph}\n                metadata={metadata}\n                selection={{query: selectionQuery, keys: selectionStepKeys}}\n              />\n            </Box>\n          }\n          runId={runId}\n          graph={runtimeGraph}\n          metadata={metadata}\n          selection={{query: selectionQuery, keys: selectionStepKeys}}\n          onClickStep={onClickStep}\n          onSetSelection={onSetSelectionQuery}\n          focusedTime={logsFilter.focusedTime}\n        />\n      );\n    }\n\n    return <NonIdealState icon=\"error\" title=\"Unable to build execution plan\" />;\n  };\n\n  const logCaptureInfo: ILogCaptureInfo | undefined =\n    metadata.logCaptureSteps && computeLogFileKey in metadata.logCaptureSteps\n      ? metadata.logCaptureSteps[computeLogFileKey]\n      : undefined;\n\n  return (\n    <>\n      <SplitPanelContainer\n        ref={splitPanelContainer}\n        axis=\"vertical\"\n        identifier=\"run-gantt\"\n        firstInitialPercent={35}\n        firstMinSize={56}\n        first={gantt(metadata)}\n        second={\n          <LogsContainer>\n            <LogsToolbar\n              logType={logType}\n              onSetLogType={setLogType}\n              filter={logsFilter}\n              onSetFilter={onSetLogsFilter}\n              steps={stepKeys}\n              metadata={metadata}\n              computeLogFileKey={computeLogFileKey}\n              onSetComputeLogKey={onSetComputeLogKey}\n              computeLogUrl={computeLogUrl}\n              counts={logs.counts}\n            />\n            {logType !== LogType.structured ? (\n              supportsCapturedLogs ? (\n                <CapturedOrExternalLogPanel\n                  logKey={computeLogFileKey ? [runId, 'compute_logs', computeLogFileKey] : []}\n                  externalUrl={logCaptureInfo?.externalUrl}\n                  visibleIOType={LogType[logType]}\n                  onSetDownloadUrl={setComputeLogUrl}\n                />\n              ) : (\n                <ComputeLogPanel\n                  runId={runId}\n                  stepKeys={stepKeys}\n                  computeLogFileKey={computeLogFileKey}\n                  ioType={LogType[logType]}\n                  setComputeLogUrl={setComputeLogUrl}\n                />\n              )\n            ) : (\n              <LogsScrollingTable\n                logs={logs}\n                filter={logsFilter}\n                filterStepKeys={logsFilterStepKeys}\n                filterKey={`${JSON.stringify(logsFilter)}`}\n                metadata={metadata}\n              />\n            )}\n          </LogsContainer>\n        }\n      />\n    </>\n  );\n};\n\nconst LogsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n","import * as React from 'react';\n\nexport const useFavicon = (href: string) => {\n  React.useEffect(() => {\n    const el = document.querySelector('link[rel=\"icon\"][type=\"image/svg+xml\"]');\n    if (!el) {\n      return;\n    }\n    const previousHref = el.getAttribute('href');\n    el.setAttribute('href', href);\n    return () => {\n      if (previousHref) {\n        el.setAttribute('href', previousHref);\n      }\n    };\n  }, [href]);\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, NonIdealState, PageHeader, Popover, Tag, Heading, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {formatElapsedTime} from '../app/Util';\nimport {useTrackPageView} from '../app/analytics';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\n\nimport {AssetKeyTagCollection} from './AssetKeyTagCollection';\nimport {Run} from './Run';\nimport {RunConfigDialog, RunDetails} from './RunDetails';\nimport {RunFragments} from './RunFragments';\nimport {RunStatusTag} from './RunStatusTag';\nimport {assetKeysForRun} from './RunUtils';\nimport {RunRootQuery, RunRootQueryVariables} from './types/RunRootQuery';\n\nexport const RunRoot = () => {\n  useTrackPageView();\n\n  const {runId} = useParams<{runId: string}>();\n\n  const {data, loading} = useQuery<RunRootQuery, RunRootQueryVariables>(RUN_ROOT_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    partialRefetch: true,\n    variables: {runId},\n  });\n\n  const run = data?.pipelineRunOrError.__typename === 'Run' ? data.pipelineRunOrError : null;\n  const snapshotID = run?.pipelineSnapshotId;\n\n  const repoMatch = useRepositoryForRun(run);\n  const repoAddress = repoMatch?.match\n    ? buildRepoAddress(repoMatch.match.repository.name, repoMatch.match.repositoryLocation.name)\n    : null;\n\n  const isJob = React.useMemo(\n    () => !!(run && repoMatch && isThisThingAJob(repoMatch.match, run.pipelineName)),\n    [run, repoMatch],\n  );\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n      }}\n    >\n      <Box\n        flex={{direction: 'row', alignItems: 'flex-start'}}\n        style={{\n          position: 'relative',\n          zIndex: 1,\n        }}\n      >\n        <PageHeader\n          title={\n            <Heading style={{fontFamily: FontFamily.monospace, fontSize: '20px'}}>\n              {runId.slice(0, 8)}\n            </Heading>\n          }\n          tags={\n            run ? (\n              <>\n                <RunStatusTag status={run.status} />\n                {isHiddenAssetGroupJob(run.pipelineName) ? (\n                  <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} clickableTags />\n                ) : (\n                  <>\n                    <Tag icon=\"run\">\n                      Run of{' '}\n                      <PipelineReference\n                        pipelineName={run?.pipelineName}\n                        pipelineHrefContext={repoAddress || 'repo-unknown'}\n                        snapshotId={snapshotID}\n                        size=\"small\"\n                        isJob={isJob}\n                      />\n                    </Tag>\n                    <AssetKeyTagCollection assetKeys={run.assets.map((a) => a.key)} clickableTags />\n                  </>\n                )}\n                <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n                  {run?.startTime ? (\n                    <Popover\n                      interactionKind=\"hover\"\n                      placement=\"bottom\"\n                      content={\n                        <Box padding={16}>\n                          <RunDetails run={run} loading={loading} />\n                        </Box>\n                      }\n                    >\n                      <Tag icon=\"schedule\">\n                        <TimestampDisplay\n                          timestamp={run.startTime}\n                          timeFormat={{showSeconds: true, showTimezone: false}}\n                        />\n                      </Tag>\n                    </Popover>\n                  ) : run.updateTime ? (\n                    <Tag icon=\"schedule\">\n                      <TimestampDisplay\n                        timestamp={run.updateTime}\n                        timeFormat={{showSeconds: true, showTimezone: false}}\n                      />\n                    </Tag>\n                  ) : undefined}\n                  {run?.startTime && run?.endTime ? (\n                    <Popover\n                      interactionKind=\"hover\"\n                      placement=\"bottom\"\n                      content={\n                        <Box padding={16}>\n                          <RunDetails run={run} loading={loading} />\n                        </Box>\n                      }\n                    >\n                      <Tag icon=\"timer\">\n                        <span style={{fontVariantNumeric: 'tabular-nums'}}>\n                          {run?.startTime\n                            ? formatElapsedTime(\n                                (run?.endTime * 1000 || Date.now()) - run?.startTime * 1000,\n                              )\n                            : '–'}\n                        </span>\n                      </Tag>\n                    </Popover>\n                  ) : null}\n                </Box>\n              </>\n            ) : null\n          }\n          right={run ? <RunConfigDialog run={run} isJob={isJob} /> : null}\n        />\n      </Box>\n      <RunById data={data} runId={runId} />\n    </div>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default RunRoot;\n\nconst RunById: React.FC<{data: RunRootQuery | undefined; runId: string}> = (props) => {\n  const {data, runId} = props;\n\n  if (!data || !data.pipelineRunOrError) {\n    return <Run run={undefined} runId={runId} />;\n  }\n\n  if (data.pipelineRunOrError.__typename !== 'Run') {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"No run found\"\n          description=\"The run with this ID does not exist or has been cleaned up.\"\n        />\n      </Box>\n    );\n  }\n\n  return <Run run={data.pipelineRunOrError} runId={runId} />;\n};\n\nconst RUN_ROOT_QUERY = gql`\n  query RunRootQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      __typename\n      ... on Run {\n        id\n        ...RunFragment\n      }\n    }\n  }\n\n  ${RunFragments.RunFragment}\n`;\n","import {useMutation} from '@apollo/client';\nimport * as React from 'react';\nimport {useHistory} from 'react-router';\n\nimport {showLaunchError} from '../launchpad/showLaunchError';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\n\nimport {\n  getReexecutionVariables,\n  handleLaunchResult,\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  ReExecutionStyle,\n} from './RunUtils';\nimport {\n  LaunchPipelineReexecution,\n  LaunchPipelineReexecutionVariables,\n} from './types/LaunchPipelineReexecution';\nimport {RunFragment} from './types/RunFragment';\n\nexport const useJobReExecution = (run: RunFragment | undefined | null) => {\n  const history = useHistory();\n  const [launchPipelineReexecution] = useMutation<\n    LaunchPipelineReexecution,\n    LaunchPipelineReexecutionVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n  const repoMatch = useRepositoryForRun(run);\n\n  return React.useCallback(\n    async (style: ReExecutionStyle) => {\n      if (!run || !run.pipelineSnapshotId || !repoMatch) {\n        return;\n      }\n\n      const variables = getReexecutionVariables({\n        run,\n        style,\n        repositoryLocationName: repoMatch.match.repositoryLocation.name,\n        repositoryName: repoMatch.match.repository.name,\n      });\n\n      try {\n        const result = await launchPipelineReexecution({variables});\n        handleLaunchResult(run.pipelineName, result.data?.launchPipelineReexecution, history, {\n          preserveQuerystring: true,\n          behavior: 'open',\n        });\n      } catch (error) {\n        showLaunchError(error as Error);\n      }\n    },\n    [history, launchPipelineReexecution, repoMatch, run],\n  );\n};\n","import {Colors, IconWrapper} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nexport const ClearButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin: 0 -2px 0 0;\n  padding: 2px;\n\n  ${IconWrapper} {\n    background-color: ${Colors.Gray400};\n    transition: background-color 100ms linear;\n  }\n\n  :hover ${IconWrapper}, :focus ${IconWrapper} {\n    background-color: ${Colors.Gray700};\n  }\n\n  :active ${IconWrapper} {\n    background-color: ${Colors.Dark};\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n","/* eslint-disable no-restricted-imports */\nimport {IPopoverProps} from '@blueprintjs/core';\nimport {Select as BlueprintSelect, SelectProps} from '@blueprintjs/select';\n/* eslint-enable no-restricted-imports */\nimport deepmerge from 'deepmerge';\nimport * as React from 'react';\n\nexport const Select = <T,>(props: React.PropsWithChildren<SelectProps<T>>) => {\n  const popoverProps: Partial<IPopoverProps> = {\n    ...props.popoverProps,\n    minimal: true,\n    modifiers: deepmerge(\n      {offset: {enabled: true, offset: '0, 8px'}},\n      props.popoverProps?.modifiers || {},\n    ),\n    popoverClassName: `dagit-popover ${props.popoverProps?.className || ''}`,\n  };\n\n  return <BlueprintSelect {...props} popoverProps={popoverProps} />;\n};\n"],"names":["showLaunchError","error","console","body","message","style","fontFamily","FontFamily","showCustomAlert","title","LogType","RawLogContent","React","logData","location","isLoading","isVisible","downloadUrl","contentContainer","timer","showScrollToTop","setShowScrollToTop","cancelHideWarning","current","clearTimeout","hideWarning","scheduleHideWarning","window","setTimeout","content","isTruncated","shouldTruncate","nextLine","indexOf","truncated","length","slice","warning","FileWarning","Group","direction","spacing","alignItems","Icon","name","color","Colors","href","download","FileContainer","ScrollToast","ScrollToTop","onClick","scrollToTop","onMouseOver","onMouseOut","FileContent","RelativeContainer","LogContent","isSelected","onScrollUp","position","onScrollDown","ref","LoadingContainer","Spinner","purpose","FileFooter","TextEncoder","encode","ScrollContainer","container","lastScroll","onScroll","props","scrollHeight","scrollTop","offsetHeight","this","scrollToBottom","focus","addEventListener","_props","_state","shouldScroll","node","className","outline","tabIndex","ContentContainer","LineNumbers","Content","SolarizedColors","linkify","useClasses","justifyContent","matches","match","count","LineNumberContainer","Array","from","_","i","String","styled","createGlobalStyle","CapturedOrExternalLogPanel","externalUrl","Box","flex","gap","background","minHeight","target","rel","textDecoration","marginLeft","marginRight","size","marginTop","logKey","CapturedLogPanel","MAX_STREAMING_LOG_BYTES","s","merge","a","b","reducer","state","action","type","cursor","stdout","stderr","metadata","initialState","CapturedLogSubscription","onLogData","useSubscription","CAPTURED_LOGS_SUBSCRIPTION","fetchPolicy","variables","onSubscriptionData","subscriptionData","data","capturedLogs","gql","CAPTURED_LOGS_METADATA_QUERY","CapturedLogsSubscriptionProvider","children","dispatch","logKeyString","JSON","stringify","CapturedLogsQueryProvider","useQuery","CAPTURED_LOGS_QUERY","notifyOnNetworkStatusChange","limit","pollInterval","onCompleted","stopPolling","startPolling","visibleIOType","onSetDownloadUrl","rootServerURI","AppContext","WebSocketContext","availability","disabled","queryResult","visibleDownloadUrl","capturedLogsMetadata","stdoutDownloadUrl","stderrDownloadUrl","startsWith","stdoutLocation","undefined","stderrLocation","Component","display","flexDirection","INSTANCE_SUPPORTS_CAPTURED_LOGS","__typename","path","stepKey","log","COMPUTE_LOGS_SUBSCRIPTION","ComputeLogPanel","runId","stepKeys","computeLogFileKey","ioType","setComputeLogUrl","ComputeLogsPanelWithKey","height","resolveDownloadUrl","x","ComputeIOType","computeLogs","useComputeLogs","ContentWrapper","emptyCounts","DEBUG","INFO","WARNING","ERROR","CRITICAL","EVENT","queuedNodes","queued","map","ii","clientsideKey","timestamp","nodes","counts","forEach","level","logNodeLevel","loading","hasMore","useLogsProviderWithSubscription","client","useApolloClient","queue","syncPipelineStatusToApolloCache","status","local","readFragment","fragmentName","fragment","PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT","id","toWrite","RunStatus","canTerminate","writeFragment","throttledSetNodes","throttle","queuedLogs","queuedMessages","flatMap","messages","lastLog","hasMorePastEvents","nextPipelineStatus","reversed","reverse","pipelineStatusFromMessages","lostWebsocket","WebSocket","CLOSED","currentInitialCursorRef","currentInitialCursor","subscriptionComponent","SubscriptionComponent","logs","pipelineRunLogs","push","requestAnimationFrame","allNodes","PIPELINE_RUN_LOGS_SUBSCRIPTION","LogsProviderWithSubscription","LogsProviderWithQuery","RUN_LOGS_QUERY","pipelineRunOrError","logsForRun","run","events","LogsProvider","RunFragments","compactFormatter","memoize","Intl","NumberFormat","navigator","language","compactDisplay","notation","ExecutionStateDot","IStepState","shown","highlight","fuseOptions","threshold","LogsFilterInput","value","onChange","suggestionProviders","inputRef","perProvider","reduce","accum","provider","values","token","fuse","Fuse","all","providerKeys","filter","empty","buildSuggestions","queryString","Object","keys","split","results","search","result","item","toLowerCase","includes","tokens","toLocaleLowerCase","trim","suggestions","onSelectSuggestion","suggestion","lastIndex","lastIndexOf","keep","useSuggestionsForString","numResults","highlightedResult","onInputChange","e","onSelect","onClear","Popover","isOpen","Results","ResultItem","isHighlight","FilterInput","placeholder","spellCheck","autoCorrect","onFocus","onBlur","onKeyDown","key","lastResult","preventDefault","rightElement","ClearButton","C","element","scrollIntoView","block","Item","onMouseDown","TextInput","LogsToolbar","steps","onSetFilter","logType","onSetLogType","onSetComputeLogKey","computeLogUrl","activeItems","Set","structured","ButtonGroup","buttons","icon","tooltip","StructuredLogToolbar","ComputeLogToolbar","resolveState","logCapture","some","every","logCaptureSteps","extractLogCaptureStepsFromLegacySteps","isValidStepSelection","fileKeyText","fileKey","captureInfo","pid","Select","items","itemPredicate","query","itemRenderer","options","Menu","handleClick","text","active","modifiers","activeItem","onItemSelect","Button","rightIcon","Tabs","selectedTabId","Tooltip","placement","DownloadLink","IconWrapper","copyIcon","setCopyIcon","logQueryString","logQuery","join","setQueryString","copyToClipboard","useCopyToClipboard","selectedStep","find","v","filterText","getRunFilterProviders","segments","NonMatchCheckbox","checked","hideNonMatches","event","currentTarget","label","LogLevel","num","enabled","levels","FilterLabel","$enabled","Checkbox","format","fillColor","LogLabel","LogCount","minWidth","DELIMITER","levelsToQuery","sort","DefaultQuerystring","DefaultLogLevels","focusedTime","decodeRunPageFilters","qs","logValues","Number","providers","sinceTime","tokenizedValueFromString","toUpperCase","encodeRunPageFilters","logQueryTokenStrings","Run","useQueryPersistedState","decode","defaults","logsFilter","setLogsFilter","queryKey","selection","selectionQuery","setSelectionQuery","runStatusFavicon","el","document","querySelector","previousHref","getAttribute","setAttribute","useDocumentTitle","isHiddenAssetGroupJob","pipelineName","onShowStateDetails","errorNode","PythonErrorInfo","onSetSelectionQuery","RunContext","RunMetadataProvider","RunWithData","onSetLogsFilter","matchingComputeLogKeyFromStepKey","matching","info","onLaunch","useJobReExecution","splitPanelContainer","supportsCapturedLogs","instance","hasCapturedLogManager","useSupportsCapturedLogs","queryLogType","setQueryLogType","setComputeLogFileKey","logTypeFromQuery","stepKeysJSON","parse","runtimeGraph","executionPlan","toGraphQueryItems","selectionStepKeys","filterByQuery","n","logFileKeys","selectedLogKey","logFileKey","logsFilterStepKeys","onClickStep","evt","newSelected","index","filterForExactStep","shiftKey","k","splice","matchingLogKey","logCaptureInfo","SplitPanelContainer","axis","identifier","firstInitialPercent","firstMinSize","first","GanttChart","mode","GanttChartMode","toolbarActions","RunActionButtons","graph","onSetSelection","NonIdealState","gantt","second","LogsContainer","lt","LogsScrollingTable","filterStepKeys","filterKey","RunRoot","useTrackPageView","useParams","RUN_ROOT_QUERY","partialRefetch","snapshotID","pipelineSnapshotId","repoMatch","useRepositoryForRun","repoAddress","buildRepoAddress","repository","repositoryLocation","isJob","isThisThingAJob","width","overflow","zIndex","PageHeader","fontSize","tags","RunStatusTag","AssetKeyTagCollection","assetKeys","assetKeysForRun","clickableTags","Tag","PipelineReference","pipelineHrefContext","snapshotId","assets","wrap","startTime","interactionKind","padding","RunDetails","TimestampDisplay","timeFormat","showSeconds","showTimezone","updateTime","endTime","fontVariantNumeric","formatElapsedTime","Date","now","right","RunById","vertical","description","history","useHistory","useMutation","LAUNCH_PIPELINE_REEXECUTION_MUTATION","launchPipelineReexecution","getReexecutionVariables","repositoryLocationName","repositoryName","handleLaunchResult","preserveQuerystring","behavior","popoverProps","minimal","deepmerge","offset","popoverClassName"],"sourceRoot":""}